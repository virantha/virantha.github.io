<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Virantha Namal Ekanayake</title><link href="https://virantha.com/" rel="alternate"></link><link href="https://virantha.com/feeds/all.atom.xml" rel="self"></link><id>https://virantha.com/</id><updated>2021-04-01T10:33:00-04:00</updated><entry><title>Client-specific DNS and DHCP settings with Dnsmasq and Edgeos / Edgerouter</title><link href="https://virantha.com/2021/04/01/edgeos-dnsmasq-client-specific-dns-dhcp/" rel="alternate"></link><published>2021-04-01T10:33:00-04:00</published><updated>2021-04-01T10:33:00-04:00</updated><author><name>virantha</name></author><id>tag:virantha.com,2021-04-01:/2021/04/01/edgeos-dnsmasq-client-specific-dns-dhcp/</id><summary type="html">&lt;p&gt;I have my Edgerouter configured to hand out static leases for all my network clients using
Dnsmasq, which also automatically puts an entry into the DNS with the client name.  The
Edgeos configuration for this is relatively straightforward:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;dhcp&lt;/span&gt;&lt;span class="mi"&gt;-&lt;/span&gt;&lt;span class="err"&gt;server&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="err"&gt;...&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="err"&gt;shared&lt;/span&gt;&lt;span class="mi"&gt;-&lt;/span&gt;&lt;span class="kc"&gt;net&lt;/span&gt;&lt;span class="err"&gt;work&lt;/span&gt;&lt;span class="mi"&gt;-&lt;/span&gt;&lt;span class="kc"&gt;na&lt;/span&gt;&lt;span class="err"&gt;me&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;LAN&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="err"&gt;au&lt;/span&gt;&lt;span class="kc"&gt;t&lt;/span&gt;&lt;span class="err"&gt;hori â€¦&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;I have my Edgerouter configured to hand out static leases for all my network clients using
Dnsmasq, which also automatically puts an entry into the DNS with the client name.  The
Edgeos configuration for this is relatively straightforward:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;dhcp&lt;/span&gt;&lt;span class="mi"&gt;-&lt;/span&gt;&lt;span class="err"&gt;server&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="err"&gt;...&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="err"&gt;shared&lt;/span&gt;&lt;span class="mi"&gt;-&lt;/span&gt;&lt;span class="kc"&gt;net&lt;/span&gt;&lt;span class="err"&gt;work&lt;/span&gt;&lt;span class="mi"&gt;-&lt;/span&gt;&lt;span class="kc"&gt;na&lt;/span&gt;&lt;span class="err"&gt;me&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;LAN&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="err"&gt;au&lt;/span&gt;&lt;span class="kc"&gt;t&lt;/span&gt;&lt;span class="err"&gt;hori&lt;/span&gt;&lt;span class="kc"&gt;tat&lt;/span&gt;&lt;span class="err"&gt;ive&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;e&lt;/span&gt;&lt;span class="kc"&gt;na&lt;/span&gt;&lt;span class="err"&gt;ble&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="err"&gt;sub&lt;/span&gt;&lt;span class="kc"&gt;net&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;192.168.9.0&lt;/span&gt;&lt;span class="err"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;24&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="err"&gt;...&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="err"&gt;s&lt;/span&gt;&lt;span class="kc"&gt;tat&lt;/span&gt;&lt;span class="err"&gt;ic&lt;/span&gt;&lt;span class="mi"&gt;-&lt;/span&gt;&lt;span class="err"&gt;mappi&lt;/span&gt;&lt;span class="kc"&gt;n&lt;/span&gt;&lt;span class="err"&gt;g&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;my&lt;/span&gt;&lt;span class="mi"&gt;-&lt;/span&gt;&lt;span class="err"&gt;device&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="err"&gt;ip&lt;/span&gt;&lt;span class="mi"&gt;-&lt;/span&gt;&lt;span class="err"&gt;address&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;192.168.9.33&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="err"&gt;mac&lt;/span&gt;&lt;span class="mi"&gt;-&lt;/span&gt;&lt;span class="err"&gt;address&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;XX&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;XX&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;XX&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;XX&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;XX&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;XX&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="err"&gt;use&lt;/span&gt;&lt;span class="mi"&gt;-&lt;/span&gt;&lt;span class="err"&gt;d&lt;/span&gt;&lt;span class="kc"&gt;ns&lt;/span&gt;&lt;span class="err"&gt;masq&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;e&lt;/span&gt;&lt;span class="kc"&gt;na&lt;/span&gt;&lt;span class="err"&gt;ble&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now, recently, I needed to get some of my devices (the children's tablets, for example) to
use Pi-Hole for their DNS lookups, while leaving the rest of my clients untouched.  In effect,
I needed Dnsmasq to hand out a different DNS when the DHCP request comes in from a specific
client.  There's
relatively scant information out there on how to get his to work with the static-mapping
commands, so this may end up helping a few you in similar situations.&lt;/p&gt;
&lt;p&gt;As far as I can tell, Edgeos doesn't currenlty support this directly with its own commands in the
&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;dhcp-server&lt;/span&gt;&lt;/tt&gt; section.
Instead, you use manual options in the &lt;tt class="docutils literal"&gt;dns&lt;/tt&gt; section that get passed on
directly to the Dnsmasq conf file; critically, you also need to make sure your manual options
do not conflict with the Edgeos auto-generated configuration
options.&lt;/p&gt;
&lt;p&gt;So, let's assume that I currently have the following static mapping, and I want to assign
these clients below a separate DNS IP.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;dhcp&lt;/span&gt;&lt;span class="mi"&gt;-&lt;/span&gt;&lt;span class="err"&gt;server&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="err"&gt;...&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="err"&gt;shared&lt;/span&gt;&lt;span class="mi"&gt;-&lt;/span&gt;&lt;span class="kc"&gt;net&lt;/span&gt;&lt;span class="err"&gt;work&lt;/span&gt;&lt;span class="mi"&gt;-&lt;/span&gt;&lt;span class="kc"&gt;na&lt;/span&gt;&lt;span class="err"&gt;me&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;LAN&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="err"&gt;au&lt;/span&gt;&lt;span class="kc"&gt;t&lt;/span&gt;&lt;span class="err"&gt;hori&lt;/span&gt;&lt;span class="kc"&gt;tat&lt;/span&gt;&lt;span class="err"&gt;ive&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;e&lt;/span&gt;&lt;span class="kc"&gt;na&lt;/span&gt;&lt;span class="err"&gt;ble&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="err"&gt;sub&lt;/span&gt;&lt;span class="kc"&gt;net&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;192.168.9.0&lt;/span&gt;&lt;span class="err"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;24&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="err"&gt;...&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="err"&gt;s&lt;/span&gt;&lt;span class="kc"&gt;tat&lt;/span&gt;&lt;span class="err"&gt;ic&lt;/span&gt;&lt;span class="mi"&gt;-&lt;/span&gt;&lt;span class="err"&gt;mappi&lt;/span&gt;&lt;span class="kc"&gt;n&lt;/span&gt;&lt;span class="err"&gt;g&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;child&lt;/span&gt;&lt;span class="mi"&gt;-&lt;/span&gt;&lt;span class="err"&gt;device&lt;/span&gt;&lt;span class="mi"&gt;-1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="err"&gt;ip&lt;/span&gt;&lt;span class="mi"&gt;-&lt;/span&gt;&lt;span class="err"&gt;address&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;192.168.9.10&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="err"&gt;mac&lt;/span&gt;&lt;span class="mi"&gt;-&lt;/span&gt;&lt;span class="err"&gt;address&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;XX&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;XX&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;XX&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;XX&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;XX&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;XX&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="err"&gt;s&lt;/span&gt;&lt;span class="kc"&gt;tat&lt;/span&gt;&lt;span class="err"&gt;ic&lt;/span&gt;&lt;span class="mi"&gt;-&lt;/span&gt;&lt;span class="err"&gt;mappi&lt;/span&gt;&lt;span class="kc"&gt;n&lt;/span&gt;&lt;span class="err"&gt;g&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;child&lt;/span&gt;&lt;span class="mi"&gt;-&lt;/span&gt;&lt;span class="err"&gt;device&lt;/span&gt;&lt;span class="mi"&gt;-2&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="err"&gt;ip&lt;/span&gt;&lt;span class="mi"&gt;-&lt;/span&gt;&lt;span class="err"&gt;address&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;192.168.9.11&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="err"&gt;mac&lt;/span&gt;&lt;span class="mi"&gt;-&lt;/span&gt;&lt;span class="err"&gt;address&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;YY&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;YY&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;YY&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;YY&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;YY&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;YY&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="err"&gt;use&lt;/span&gt;&lt;span class="mi"&gt;-&lt;/span&gt;&lt;span class="err"&gt;d&lt;/span&gt;&lt;span class="kc"&gt;ns&lt;/span&gt;&lt;span class="err"&gt;masq&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;e&lt;/span&gt;&lt;span class="kc"&gt;na&lt;/span&gt;&lt;span class="err"&gt;ble&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;What you need to do is &lt;strong&gt;remove&lt;/strong&gt; the static-mapping for these devices from the &lt;tt class="docutils literal"&gt;services &lt;span class="pre"&gt;dhcp-server&lt;/span&gt;&lt;/tt&gt;
section, and instead put it in manually in &lt;tt class="docutils literal"&gt;services dns&lt;/tt&gt; as follows:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;d&lt;/span&gt;&lt;span class="kc"&gt;ns&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kc"&gt;f&lt;/span&gt;&lt;span class="err"&gt;orwardi&lt;/span&gt;&lt;span class="kc"&gt;n&lt;/span&gt;&lt;span class="err"&gt;g&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="err"&gt;...&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="err"&gt;op&lt;/span&gt;&lt;span class="kc"&gt;t&lt;/span&gt;&lt;span class="err"&gt;io&lt;/span&gt;&lt;span class="kc"&gt;ns&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;dhcp&lt;/span&gt;&lt;span class="mi"&gt;-&lt;/span&gt;&lt;span class="err"&gt;hos&lt;/span&gt;&lt;span class="kc"&gt;t&lt;/span&gt;&lt;span class="err"&gt;=XX&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;XX&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;XX&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;XX&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;XX&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;XX&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="err"&gt;se&lt;/span&gt;&lt;span class="kc"&gt;t&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;LAN&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="err"&gt;se&lt;/span&gt;&lt;span class="kc"&gt;t&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;Child&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mf"&gt;192.168.9.10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="err"&gt;child&lt;/span&gt;&lt;span class="mi"&gt;-&lt;/span&gt;&lt;span class="err"&gt;device&lt;/span&gt;&lt;span class="mi"&gt;-1&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="err"&gt;op&lt;/span&gt;&lt;span class="kc"&gt;t&lt;/span&gt;&lt;span class="err"&gt;io&lt;/span&gt;&lt;span class="kc"&gt;ns&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;dhcp&lt;/span&gt;&lt;span class="mi"&gt;-&lt;/span&gt;&lt;span class="err"&gt;hos&lt;/span&gt;&lt;span class="kc"&gt;t&lt;/span&gt;&lt;span class="err"&gt;=YY&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;YY&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;YY&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;YY&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;YY&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;YY&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="err"&gt;se&lt;/span&gt;&lt;span class="kc"&gt;t&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;LAN&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="err"&gt;se&lt;/span&gt;&lt;span class="kc"&gt;t&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;Child&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mf"&gt;192.168.9.11&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="err"&gt;child&lt;/span&gt;&lt;span class="mi"&gt;-&lt;/span&gt;&lt;span class="err"&gt;device&lt;/span&gt;&lt;span class="mi"&gt;-2&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="err"&gt;op&lt;/span&gt;&lt;span class="kc"&gt;t&lt;/span&gt;&lt;span class="err"&gt;io&lt;/span&gt;&lt;span class="kc"&gt;ns&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;dhcp&lt;/span&gt;&lt;span class="mi"&gt;-&lt;/span&gt;&lt;span class="err"&gt;op&lt;/span&gt;&lt;span class="kc"&gt;t&lt;/span&gt;&lt;span class="err"&gt;io&lt;/span&gt;&lt;span class="kc"&gt;n&lt;/span&gt;&lt;span class="err"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;ta&lt;/span&gt;&lt;span class="err"&gt;g&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;Child&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="err"&gt;op&lt;/span&gt;&lt;span class="kc"&gt;t&lt;/span&gt;&lt;span class="err"&gt;io&lt;/span&gt;&lt;span class="kc"&gt;n&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;d&lt;/span&gt;&lt;span class="kc"&gt;ns&lt;/span&gt;&lt;span class="mi"&gt;-&lt;/span&gt;&lt;span class="err"&gt;server&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mf"&gt;192.168.9.222&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="err"&gt;...&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;dhcp-host&lt;/span&gt;&lt;/tt&gt; option assigns the static IP address mapping and host name to the device,
and also adds it to two &lt;strong&gt;tags&lt;/strong&gt; via the &lt;em&gt;set&lt;/em&gt; directive.  The first tag is &lt;em&gt;LAN1&lt;/em&gt;, which Edgeos usually sets
for you based on your &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;shared-network-name&lt;/span&gt;&lt;/tt&gt;, but in this case, because we removed the
&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;static-mapping&lt;/span&gt;&lt;/tt&gt; entry for these clients, we need to add it back in manually.  The second tag
is the one you want to assign these specific devices to; in this example, I'm tagging these
as my &lt;em&gt;Child&lt;/em&gt; devices.&lt;/p&gt;
&lt;p&gt;Then, the &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;dhcp-option&lt;/span&gt;&lt;/tt&gt;, for whatever devices match a &lt;em&gt;Child&lt;/em&gt; tag, passes
on the &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;dns-server&lt;/span&gt;&lt;/tt&gt; option via DHCP (in this case, child-device-1 and child-device-2 will get
a DNS of 192.168.9.222 sent via DHCP when they get their IP address lease).  Obviously for this
to work on the client end, the client devices need to automatically set the DNS via DHCP (and
not be set manually).&lt;/p&gt;
&lt;p&gt;You can use this type of tagging to set any other option you want as well.  For example,
you could hand out PXE boot information to only certain clients, for example, or have
different clients get different boot images.&lt;/p&gt;
</content><category term="Tech"></category><category term="edgeos"></category><category term="dhcp"></category><category term="dns"></category></entry><entry><title>Best Docking Stations for Apple MacBooks - Thunderbolt 3 or USB-C?</title><link href="https://virantha.com/2019/05/20/choosing-a-thunderbolt-3-dock-macbook/" rel="alternate"></link><published>2019-05-20T22:09:00-04:00</published><updated>2019-05-20T22:09:00-04:00</updated><author><name>virantha</name></author><id>tag:virantha.com,2019-05-20:/2019/05/20/choosing-a-thunderbolt-3-dock-macbook/</id><summary type="html">&lt;div class="contents topic" id="table-of-contents"&gt;
&lt;p class="topic-title"&gt;&lt;a class="reference internal" href="#top"&gt;Table of Contents&lt;/a&gt;&lt;/p&gt;
&lt;ul class="auto-toc simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#usb-terminology-tower-of-babel" id="toc-entry-1"&gt;1&amp;nbsp;&amp;nbsp;&amp;nbsp;USB Terminology - Tower of Babel&lt;/a&gt;&lt;ul class="auto-toc"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#connector-plug-types-usb-a-vs-b-vs-c" id="toc-entry-2"&gt;1.1&amp;nbsp;&amp;nbsp;&amp;nbsp;Connector/Plug Types (USB A vs. B vs. C)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#protocol-types-usb-1-1-2-0-3-1-and-thunderbolt" id="toc-entry-3"&gt;1.2&amp;nbsp;&amp;nbsp;&amp;nbsp;Protocol Types: USB 1.1, 2.0, 3.1 and Thunderbolt&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#cable-wiring-factors" id="toc-entry-4"&gt;1.3&amp;nbsp;&amp;nbsp;&amp;nbsp;Cable/Wiring factors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#connector-protocol-and-cable-summary" id="toc-entry-5"&gt;1.4&amp;nbsp;&amp;nbsp;&amp;nbsp;Connector, Protocol, and Cable Summary&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#power-delivery" id="toc-entry-6"&gt;2&amp;nbsp;&amp;nbsp;&amp;nbsp;Power Delivery&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#docking-stations-for-thunderbolt-3-equipped-computers" id="toc-entry-7"&gt;3&amp;nbsp;&amp;nbsp;&amp;nbsp;Docking â€¦&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;</summary><content type="html">&lt;div class="contents topic" id="table-of-contents"&gt;
&lt;p class="topic-title"&gt;&lt;a class="reference internal" href="#top"&gt;Table of Contents&lt;/a&gt;&lt;/p&gt;
&lt;ul class="auto-toc simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#usb-terminology-tower-of-babel" id="toc-entry-1"&gt;1&amp;nbsp;&amp;nbsp;&amp;nbsp;USB Terminology - Tower of Babel&lt;/a&gt;&lt;ul class="auto-toc"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#connector-plug-types-usb-a-vs-b-vs-c" id="toc-entry-2"&gt;1.1&amp;nbsp;&amp;nbsp;&amp;nbsp;Connector/Plug Types (USB A vs. B vs. C)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#protocol-types-usb-1-1-2-0-3-1-and-thunderbolt" id="toc-entry-3"&gt;1.2&amp;nbsp;&amp;nbsp;&amp;nbsp;Protocol Types: USB 1.1, 2.0, 3.1 and Thunderbolt&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#cable-wiring-factors" id="toc-entry-4"&gt;1.3&amp;nbsp;&amp;nbsp;&amp;nbsp;Cable/Wiring factors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#connector-protocol-and-cable-summary" id="toc-entry-5"&gt;1.4&amp;nbsp;&amp;nbsp;&amp;nbsp;Connector, Protocol, and Cable Summary&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#power-delivery" id="toc-entry-6"&gt;2&amp;nbsp;&amp;nbsp;&amp;nbsp;Power Delivery&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#docking-stations-for-thunderbolt-3-equipped-computers" id="toc-entry-7"&gt;3&amp;nbsp;&amp;nbsp;&amp;nbsp;Docking stations for Thunderbolt 3 equipped computers&lt;/a&gt;&lt;ul class="auto-toc"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#usb-c-docking-stations" id="toc-entry-8"&gt;3.1&amp;nbsp;&amp;nbsp;&amp;nbsp;USB-C docking stations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#thunderbolt-3-docking-stations" id="toc-entry-9"&gt;3.2&amp;nbsp;&amp;nbsp;&amp;nbsp;Thunderbolt 3 docking stations&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#usb-and-thunderbolt-cables-and-adapters" id="toc-entry-10"&gt;4&amp;nbsp;&amp;nbsp;&amp;nbsp;USB and Thunderbolt cables and adapters&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;p&gt;The state of I/O standards these days can be confusing, even for experienced
engineers, and this article attempts to explain some of the intricacies
involved in picking the right docking station for your needs.&lt;/p&gt;
&lt;p&gt;I recently upgraded my five year old MacBook Pro to a newer model with
Thunderbolt 3 ports, and I was left with the dilemma of figuring out the best
docking station for all my legacy USB peripherals and my
Thunderbolt/Displayport monitor. My personal choice, with a Thunderbolt 3
equipped laptop, is to go with a &lt;a class="amazon" href="http://www.amazon.com/gp/product/B07JM3S5SJ?ie=UTF8&amp;linkCode=as2&amp;camp=1634&amp;tag=virantha-20"&gt;Thunderbolt 3 docking station&lt;/a&gt; for my desk,
and a cheaper portable USB-C hub when traveling. Both options are discussed
below, with some tables comparing the different products based on
capabilities and ports, but first, I'll cover some background on the
different standards in play.&lt;/p&gt;
&lt;div class="admonition note"&gt;
&lt;p class="first admonition-title"&gt;Note&lt;/p&gt;
&lt;p class="last"&gt;This site may receive a commission (at no cost to you) if you buy an item through an affiliate link on this page.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="usb-terminology-tower-of-babel"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#toc-entry-1"&gt;1&amp;nbsp;&amp;nbsp;&amp;nbsp;USB Terminology - Tower of Babel&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;A significant source of confusion over USB terminology arises due to the
hard-to-differentiate naming conventions. For example, USB-A and USB-C (or
Type A and Type B) refer to the physical connector design (the 'plug'), and
&lt;cite&gt;USB2&lt;/cite&gt; and &lt;cite&gt;USB3.1 gen 2&lt;/cite&gt; refer to the protocol running over these
connectors. These naming conventions for standards are further confused by
various marketing terms overlayed on top of these standards, such as
HighSpeed, SuperSpeed USB, SuperSpeed USB+, and their associated logos. Many
different technical publications such as &lt;a class="reference external" href="https://www.tomshardware.com/news/usb-31-usb-type-c-refresher,29933.html"&gt;Tom's&lt;/a&gt;
and &lt;a class="reference external" href="https://arstechnica.com/gadgets/2016/11/the-complete-guide-to-living-a-new-fangled-usb-c-and-thunderbolt-3-lifestyle/"&gt;Ars&lt;/a&gt;
have some excellent articles intended to clear up some of these differences,
so I'll only quickly summarize the relevant terms for this article before
diving into what each docking station supports.&lt;/p&gt;
&lt;p&gt;The three main things to consider when connecting two devices (e.g. computer and peripheral) are:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="#connector-plug"&gt;Connector type&lt;/a&gt; (what the plug/socket looks like)&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="#protocol-types"&gt;Protocol/communication standard&lt;/a&gt; (what language is spoken over the
connection)&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="#cable-wiring"&gt;Cable type&lt;/a&gt; (what wires are used and how they're certified)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Let's take a look at each of these factors in the sections below.&lt;/p&gt;
&lt;div class="section" id="connector-plug-types-usb-a-vs-b-vs-c"&gt;
&lt;span id="connector-plug"&gt;&lt;/span&gt;&lt;h3&gt;&lt;a class="toc-backref" href="#toc-entry-2"&gt;1.1&amp;nbsp;&amp;nbsp;&amp;nbsp;Connector/Plug Types (USB A vs. B vs. C)&lt;/a&gt;&lt;/h3&gt;
&lt;table border="1" class="docutils" id="usb-conn"&gt;
&lt;caption&gt;USB Connector Types&lt;/caption&gt;
&lt;colgroup&gt;
&lt;col width="33%" /&gt;
&lt;col width="33%" /&gt;
&lt;col width="33%" /&gt;
&lt;/colgroup&gt;
&lt;thead valign="bottom"&gt;
&lt;tr&gt;&lt;th class="head"&gt;USB-A&lt;/th&gt;
&lt;th class="head"&gt;USB-B&lt;/th&gt;
&lt;th class="head"&gt;USB-C&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;&lt;div class="first last figure"&gt;
&lt;img alt="skip_better usb-c" src="/images/2019/usb/usba.jpg" style="width: 100px;" /&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;td&gt;&lt;div class="first last figure"&gt;
&lt;img alt="skip_better usb-c" src="/images/2019/usb/usbb.jpg" style="width: 100px;" /&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;td&gt;&lt;div class="first last figure"&gt;
&lt;img alt="skip_better usb-c" src="/images/2019/usb/usbc.jpg" style="width: 100px;" /&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;USB-A, USB-B,  and USB-C refer to the physical connector or plug that a cable
or peripheral supports.  A really detailed description of every single
connection type and sub-type, with pictures, can be seen at this &lt;a class="reference external" href="https://www.cablestogo.com/learning/connector-guides/usb#a-type"&gt;C2G
(Cables2Go)&lt;/a&gt;
site.&lt;/p&gt;
&lt;p&gt;USB-A and USB-B have been around since the original days of USB 1.1, and are
relatively large plugs that need to be oriented properly when you plug it in
(so it has an &amp;quot;up&amp;quot; and &amp;quot;down&amp;quot; side to it, and can only go into a socket in
the proper orientation.) USB-C, which came into the market around 2015, is
smaller than the earlier -A and -B connectors (about the same size as Apple's
Lightning connector), and is symmetric, so it doesn't have a specific up or
down orientation it needs to be plugged in with. The newer MacBooks, MacBook
Airs, and MacBook Pros (since about 2016) have switched exclusively to using
USB-C physical connectors for both power and connecting peripherals.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="protocol-types-usb-1-1-2-0-3-1-and-thunderbolt"&gt;
&lt;span id="protocol-types"&gt;&lt;/span&gt;&lt;h3&gt;&lt;a class="toc-backref" href="#toc-entry-3"&gt;1.2&amp;nbsp;&amp;nbsp;&amp;nbsp;Protocol Types: USB 1.1, 2.0, 3.1 and Thunderbolt&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Now, let's discuss how devices talk to each other once they're plugged in
with one of these different plug types. These different &amp;quot;languages&amp;quot;, or
protocols, are referred to by their USB version numbers, with the newer
versions supporting faster communication speeds across the cables. These
speeds are expressed as bits per second (bps); and with speeds getting as
fast as they are these days, there is usually a Giga(1 billion), multiplier
on the speed to make it easier to say, so the unit becomes Gbps:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;&lt;strong&gt;USB&lt;/strong&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last"&gt;
&lt;li&gt;&lt;strong&gt;USB 1.1&lt;/strong&gt; - Up to 0.012Gbps&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;USB 2.0&lt;/strong&gt; - Up to 0.48Gbps&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;USB 3.1 gen 1&lt;/strong&gt; - Up to 5Gbps&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;USB 3.1 gen 2&lt;/strong&gt; - Up to 10Gbps&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Thunderbolt 3&lt;/strong&gt; - Up to 40Gbps&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All the USB standards could theoretically use the original Type-A connectors.
However, it's more common these days to find USB 3.1 cables with Type-C
connectors. In fact, the 2015, 2016 and 2017 MacBooks have a single USB-C
port running USB 3.1 gen 1.&lt;/p&gt;
&lt;p&gt;Where it gets interesting is that &lt;strong&gt;Thunderbolt 3 also uses USB-C connectors&lt;/strong&gt;,
and can run USB 3.1 gen 2 (and all the other earlier USB protocols) over its
links.  In addition, Thunderbolt 3 supports the 40Gbps Thunderbolt protocol, as
well as 8 lanes of DisplayPort 1.2, 4 lanes of PCIe, and is fully
bidirectional.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="cable-wiring-factors"&gt;
&lt;span id="cable-wiring"&gt;&lt;/span&gt;&lt;h3&gt;&lt;a class="toc-backref" href="#toc-entry-4"&gt;1.3&amp;nbsp;&amp;nbsp;&amp;nbsp;Cable/Wiring factors&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Even with compatible connectors on each end of the cable, once connected, the
device communication speed may end up being limited to less than the maximum
data rates supported by the protocol because the actual wiring inside the
cable cannot support those data rates. For example, even if you have have two
Thunderbolt 3 devices that support 40Gbps communication speeds, if your cable
is passive and longer than 0.5m, you'll only get 20Gbps max across that
connection.&lt;/p&gt;
&lt;p&gt;To ensure your cable can reach the maximum speeds supported by your devices, your
cable needs to be &lt;em&gt;certified&lt;/em&gt; to meet a certain standard's speed.
If you want to connect two USB 3.1 devices with USB-C ports at 10Gbps, in
addition to making sure both devices support the USB 3.1 &lt;strong&gt;Gen 2&lt;/strong&gt; protocol,
you need to make sure the cable manufacturer certifies the cable for &amp;quot;USB3.1 Gen 2&amp;quot; applications.
Otherwise, it's likely you'll be limited by a max of 5Gbps of the Gen 1
standard.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="connector-protocol-and-cable-summary"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#toc-entry-5"&gt;1.4&amp;nbsp;&amp;nbsp;&amp;nbsp;Connector, Protocol, and Cable Summary&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Whew, if you made it this far, here's a quick summary of common ways these three factors interact:&lt;/p&gt;
&lt;iframe width="700" height="230" frameborder="0" scrolling="no" src="https://onedrive.live.com/embed?resid=CD0F18972D751D7B%212562&amp;authkey=%21ADrIxjYxCRujyII&amp;em=2&amp;wdAllowInteractivity=False&amp;Item='protocols'!A2%3AH9&amp;wdHideGridlines=True&amp;wdInConfigurator=True"&gt;&lt;/iframe&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="power-delivery"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#toc-entry-6"&gt;2&amp;nbsp;&amp;nbsp;&amp;nbsp;Power Delivery&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;One thing I haven't mentioned yet is the power capabilities of each of these
different types of interfaces. Each type of
connection can provide a certain amount of power to your devices by default.
While the early USB2.0 protocol over USB-A connectors could only provide 2.5W
of power, the later USB3.1 standard bumped this up to 4.5W. When you add the
USB-C connector to the USB3.1 protocol, this figure gets further increased to 15W.
Every single cable out there will support these max power ratings, since
these numbers are required by the respective standard.&lt;/p&gt;
&lt;p&gt;In addition to the standard power ratings, there's a newer &lt;em&gt;optional&lt;/em&gt; capability called &lt;strong&gt;Power Delivery&lt;/strong&gt; that can
augment the max power capabilities of the device port to higher levels
depending on the cable type used. This is how, for example, laptops from
Apple and other manufacturers can support charging in the 60W to 80W range,
depending on the model.&lt;/p&gt;
&lt;p&gt;A summary can be seen in the following table:&lt;/p&gt;
&lt;iframe width="700" height="219" frameborder="0" scrolling="no" src="https://onedrive.live.com/embed?resid=CD0F18972D751D7B%212562&amp;authkey=%21ADrIxjYxCRujyII&amp;em=2&amp;wdAllowInteractivity=False&amp;ActiveCell='power'!H1&amp;Item='power'!A1%3AK9&amp;wdHideGridlines=True&amp;wdInConfigurator=True"&gt;&lt;/iframe&gt;&lt;p&gt;It's important to note that if you have a laptop like the MacBook Pro that can
support greater than 60W of power, then you need to have the higher power EMCA
cable along with a dock that can deliver higher power to charge it at the
fastest rate.  If not, your dock will still work but may either not have enough
power to charge the battery or charge at a slower rate.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="docking-stations-for-thunderbolt-3-equipped-computers"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#toc-entry-7"&gt;3&amp;nbsp;&amp;nbsp;&amp;nbsp;Docking stations for Thunderbolt 3 equipped computers&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Because of the backwards-compatibility of Thunderbolt 3 ports with USB 3.1
standards, a MacBook Air or Pro with Thunderbolt 3 can use either a cheaper
USB-C docking station, or a more expensive Thunderbolt 3 docking station. If
you have a MacBook, which as of early 2019 only offers USB3.1 gen 1 speeds on
its single USB-C port, then there's no point in getting the faster
Thunderbolt 3 docking stations and you should stick with the USB-C ones.&lt;/p&gt;
&lt;p&gt;Either of these types of docks on the market these days can provide Ethernet,
USB, SD card, headphone/mic, and video connectivity in addition to Power
Delivery. The main difference is the max speeds each docking station will
support, which becomes important if you're trying to connect to very high
resolution monitors at high refresh rates, which we'll discuss in more detail
below.&lt;/p&gt;
&lt;div class="section" id="usb-c-docking-stations"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#toc-entry-8"&gt;3.1&amp;nbsp;&amp;nbsp;&amp;nbsp;USB-C docking stations&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;These are relatively inexpensive, ranging in price from $50 to $200.
The cheaper portable hubs have a smaller number of ports, and limited power
capabilities, if any. Unlike &lt;em&gt;real&lt;/em&gt; USB power delivery that can route the
docking station's own power supply onto a USB-C cable, these hubs will
just pass through the power from your existing laptop power brick. If you
want more ports or want to minimize the number of power adapters you have
sitting on your desk, you'll have to upgrade to the &amp;gt;$100 docks listed
below.&lt;/p&gt;
&lt;p&gt;Further, if you're planning to connect high-resolution displays over HDMI or
DisplayPort, then you'll need to be aware of the following:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;If all you need is 1080p HD displays (or even 2560x1600), then you are guaranteed 60Hz refresh rate support.&lt;/li&gt;
&lt;li&gt;If you need 4K (or even ultra-wide displays like 3840x1440), then a single USB-C cable can only support a 30Hz refresh rate while still maintaining
enough bandwidth to supply USB 3.1 speeds on the hub's USB ports.&lt;/li&gt;
&lt;li&gt;If you absolutely need 4K at 60Hz using a USB-C dock, then you will need a dock that
supports a special 4K/60Hz mode, with the caveat that now your USB ports
will be limited to USB 2.0 speeds &lt;a class="footnote-reference" href="#footnote-1" id="footnote-reference-1"&gt;[*]&lt;/a&gt;. In addition, the computer needs to support this
particular DisplayPort Alternate mode over USB-C, which the new Apple laptops do.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;A summary of some of the docks available is shown below:&lt;/p&gt;
&lt;iframe width="700" height="289" frameborder="0" scrolling="no" src="https://onedrive.live.com/embed?resid=CD0F18972D751D7B%212562&amp;authkey=%21ADrIxjYxCRujyII&amp;em=2&amp;wdAllowInteractivity=False&amp;Item='USB-C%20Docks'!C1%3AU10&amp;wdHideGridlines=True&amp;wdInConfigurator=True"&gt;&lt;/iframe&gt;&lt;p&gt;Some important notes:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;While there are DisplayLink (unrelated to any USB-C DisplayPort Alternate
modes) capable docks out there that enable a higher number of display,
support for that is very driver and manufacturer dependent.&lt;/li&gt;
&lt;li&gt;Very few docks out there will support the DisplayPort Alternate modes for 4K at 60Hz.  The Cable Matters station
is unique in that it has a switch to enable this mode.&lt;/li&gt;
&lt;li&gt;All of these docks use the DisplayPort Alternate standard to get the video data to the hub, at which point, depending on the hub,
there may be some active circuitry implemented that allows the hub to convert the DisplayPort data to HDMI or other video out types.  Although
the USB-C standard discusses a HDMI Alternate mode for transmitting native HDMI signals over the cable directly, I have not seen any
hubs that implement this.&lt;/li&gt;
&lt;li&gt;The SD card reader speeds can vary; if you want higher than UHS-I (aka SD 3.0) which runs at ~100MB/s, then you'll need to check the specs. As of now,
there are a few that support UHS-II, but not UHS-III.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="thunderbolt-3-docking-stations"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#toc-entry-9"&gt;3.2&amp;nbsp;&amp;nbsp;&amp;nbsp;Thunderbolt 3 docking stations&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;For future-proofing, if your computer supports it, I recommend just getting a
Thunderbolt 3 docking station, which will get you higher speeds for your
peripherals and better graphics, as well as the ability to daisy-chain up to 6
devices via the docking station.&lt;/p&gt;
&lt;p&gt;Thunderbolt 3 can be thought of as the &amp;quot;super&amp;quot;-USB interface:  It supports USB3.1 standards,
and DisplayPort 1.2 modes (including 2x 4K 30bpp at 60Hz), but also adds in support
for PCI Express Gen 3 and THunderbolt 10Gb virtual-Ethernet, all with the same USB-C connector.&lt;/p&gt;
&lt;p&gt;My summarized survey of Thunderbolt 3 docks is below:&lt;/p&gt;
&lt;iframe width="700" height="296" frameborder="0" scrolling="no" src="https://onedrive.live.com/embed?resid=CD0F18972D751D7B%212562&amp;authkey=%21ADrIxjYxCRujyII&amp;em=2&amp;wdAllowInteractivity=False&amp;Item='TB3%20Docks'!C1%3AW10&amp;wdHideGridlines=True&amp;wdInConfigurator=True"&gt;&lt;/iframe&gt;&lt;p&gt;Some tips:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;You can get HDMI with an DP-&amp;gt;HDMI adapter, so you don't necessarily need a hub with a built-in HDMI port.  Just make sure to get an active adapter regardless of the target video connector type&lt;/li&gt;
&lt;li&gt;If you need high-speed SD card readers, then the OWC 14-port or CalDigit stations are your only options.&lt;/li&gt;
&lt;li&gt;The Diamond is a generic design that can be found under other brand names.  The Monoprice rebrand sells for about $10 less but does not include
a TB3 cable.&lt;/li&gt;
&lt;li&gt;I myself got the OWC 14-port, which can be found on sale in the open-box section of OWC's web store every now and then for a discount.  I use
&lt;a class="amazon" href="http://www.amazon.com/gp/product/B01MQ26QIY?ie=UTF8&amp;linkCode=as2&amp;camp=1634&amp;tag=virantha-20"&gt;Apple's Thunderbolt to Thunderbolt 2 adapter&lt;/a&gt; to connect to my Thunderbolt 2 display.&lt;/li&gt;
&lt;/ul&gt;
&lt;table class="docutils footnote" frame="void" id="footnote-1" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#footnote-reference-1"&gt;[*]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;A USB-C cable contains 4 lanes of wires (each lane is a pair of differential wires), plus a USB2.0 pair consisting of a TX and RX wire. Normally,
USB 3.1 uses 2 lanes (one for TX and one for RX), leaving 2 lanes unused.  &lt;a class="reference external" href="http://www.vesa.org/wp-content/uploads/2014/09/DP-Alt-Mode-Overview-for-VESA-v1.pdf"&gt;DisplayPort&lt;/a&gt; Alternate mode (if supported by the peripheral and host), can
utilize the unused pair of lanes for transmitting DisplayPort video a USB-C hub, which can in turn be relayed
over a DisplayPort cable to the monitor.  These two lanes can be used for DisplayPort 1.2a and supports enough bandwidth for a single 2560x1600 or 2 each of 1080p displays, or
4K at 30Hz.  DisplayPort Alternate mode &lt;em&gt;also&lt;/em&gt; supports using all 4 lanes in the USB-C connector, enabling enough bandwidth to drive 4K at 60Hz.  However,
this mode is not supported by most hubs, and it also pushes all USB connectivity to the USB2.0 dedicated pair, meaining you lose any high-speed USB 3.1
capability.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="usb-and-thunderbolt-cables-and-adapters"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#toc-entry-10"&gt;4&amp;nbsp;&amp;nbsp;&amp;nbsp;USB and Thunderbolt cables and adapters&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Here's a set of links to cables and adapters for the different standards.&lt;/p&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="20%" /&gt;
&lt;col width="24%" /&gt;
&lt;col width="29%" /&gt;
&lt;col width="27%" /&gt;
&lt;/colgroup&gt;
&lt;thead valign="bottom"&gt;
&lt;tr&gt;&lt;th class="head"&gt;From&lt;/th&gt;
&lt;th class="head"&gt;To&lt;/th&gt;
&lt;th class="head"&gt;Cable or adapter&lt;/th&gt;
&lt;th class="head"&gt;Notes&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;USB-A&lt;/td&gt;
&lt;td&gt;USB-A&lt;/td&gt;
&lt;td&gt;&lt;a class="amazon" href="http://www.amazon.com/gp/product/B00HSS9IDW?ie=UTF8&amp;linkCode=as2&amp;camp=1634&amp;tag=virantha-20"&gt;&lt;img src="http://images.amazon.com/images/P/B00HSS9IDW.01._SCMZZZZZZZ_.jpg"/&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;USB-A&lt;/td&gt;
&lt;td&gt;USB-C&lt;/td&gt;
&lt;td&gt;&lt;a class="amazon" href="http://www.amazon.com/gp/product/B01GGKYR2O?ie=UTF8&amp;linkCode=as2&amp;camp=1634&amp;tag=virantha-20"&gt;&lt;img src="http://images.amazon.com/images/P/B01GGKYR2O.01._SCMZZZZZZZ_.jpg"/&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;USB 3.1 gen 2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;USB-C&lt;/td&gt;
&lt;td&gt;USB-C&lt;/td&gt;
&lt;td&gt;&lt;a class="amazon" href="http://www.amazon.com/gp/product/B07D7SP4T4?ie=UTF8&amp;linkCode=as2&amp;camp=1634&amp;tag=virantha-20"&gt;&lt;img src="http://images.amazon.com/images/P/B07D7SP4T4.01._SCMZZZZZZZ_.jpg"/&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;USB 3.1 gen 2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Thunderbolt 3&lt;/td&gt;
&lt;td&gt;Thunderbolt 3&lt;/td&gt;
&lt;td&gt;&lt;a class="amazon" href="http://www.amazon.com/gp/product/B01KGU0R9W?ie=UTF8&amp;linkCode=as2&amp;camp=1634&amp;tag=virantha-20"&gt;&lt;img src="http://images.amazon.com/images/P/B01KGU0R9W.01._SCMZZZZZZZ_.jpg"/&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;40Gbps 60W&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Thunderbolt 3&lt;/td&gt;
&lt;td&gt;Thunderbolt 3&lt;/td&gt;
&lt;td&gt;&lt;a class="amazon" href="http://www.amazon.com/gp/product/B07R43LPCX?ie=UTF8&amp;linkCode=as2&amp;camp=1634&amp;tag=virantha-20"&gt;&lt;img src="http://images.amazon.com/images/P/B07R43LPCX.01._SCMZZZZZZZ_.jpg"/&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;40Gbps 100W&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Thunderbolt 3&lt;/td&gt;
&lt;td&gt;Thunderbolt 3&lt;/td&gt;
&lt;td&gt;&lt;a class="amazon" href="http://www.amazon.com/gp/product/B01H5QF2TK?ie=UTF8&amp;linkCode=as2&amp;camp=1634&amp;tag=virantha-20"&gt;&lt;img src="http://images.amazon.com/images/P/B01H5QF2TK.01._SCMZZZZZZZ_.jpg"/&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;40Gbps 100W active&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Thunderbolt 3&lt;/td&gt;
&lt;td&gt;Thunderbolt 2&lt;/td&gt;
&lt;td&gt;&lt;a class="amazon" href="http://www.amazon.com/gp/product/B01MQ26QIY?ie=UTF8&amp;linkCode=as2&amp;camp=1634&amp;tag=virantha-20"&gt;&lt;img src="http://images.amazon.com/images/P/B01MQ26QIY.01._SCMZZZZZZZ_.jpg"/&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;DisplayPort&lt;/td&gt;
&lt;td&gt;HDMI&lt;/td&gt;
&lt;td&gt;&lt;a class="amazon" href="http://www.amazon.com/gp/product/B00S0C7QO8?ie=UTF8&amp;linkCode=as2&amp;camp=1634&amp;tag=virantha-20"&gt;&lt;img src="http://images.amazon.com/images/P/B00S0C7QO8.01._SCMZZZZZZZ_.jpg"/&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Active adapter&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;DisplayPort&lt;/td&gt;
&lt;td&gt;Mini DisplayPort&lt;/td&gt;
&lt;td&gt;&lt;a class="amazon" href="http://www.amazon.com/gp/product/B013PWQPFS?ie=UTF8&amp;linkCode=as2&amp;camp=1634&amp;tag=virantha-20"&gt;&lt;img src="http://images.amazon.com/images/P/B013PWQPFS.01._SCMZZZZZZZ_.jpg"/&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;DisplayPort&lt;/td&gt;
&lt;td&gt;VGA&lt;/td&gt;
&lt;td&gt;&lt;a class="amazon" href="http://www.amazon.com/gp/product/B00JFY6YJS?ie=UTF8&amp;linkCode=as2&amp;camp=1634&amp;tag=virantha-20"&gt;&lt;img src="http://images.amazon.com/images/P/B00JFY6YJS.01._SCMZZZZZZZ_.jpg"/&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;USB-C&lt;/td&gt;
&lt;td&gt;HDMI&lt;/td&gt;
&lt;td&gt;&lt;a class="amazon" href="http://www.amazon.com/gp/product/B07HVQQPYK?ie=UTF8&amp;linkCode=as2&amp;camp=1634&amp;tag=virantha-20"&gt;&lt;img src="http://images.amazon.com/images/P/B07HVQQPYK.01._SCMZZZZZZZ_.jpg"/&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;4K at 60Hz&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;USB-C&lt;/td&gt;
&lt;td&gt;DisplayPort&lt;/td&gt;
&lt;td&gt;&lt;a class="amazon" href="http://www.amazon.com/gp/product/B01J6DT070?ie=UTF8&amp;linkCode=as2&amp;camp=1634&amp;tag=virantha-20"&gt;&lt;img src="http://images.amazon.com/images/P/B01J6DT070.01._SCMZZZZZZZ_.jpg"/&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;4K at 60Hz&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
</content><category term="Shopping"></category><category term="thunderbolt"></category><category term="macbook"></category><category term="usb-c"></category><category term="buying guide"></category><category term="docking station"></category><category term="hub"></category></entry><entry><title>LEGOÂ®'s new SPIKE Prime BluetoothLE Controlled Robotics Kit</title><link href="https://virantha.com/2019/04/04/lego-spike-prime-compared/" rel="alternate"></link><published>2019-04-04T11:09:00-04:00</published><updated>2019-04-04T11:09:00-04:00</updated><author><name>virantha</name></author><id>tag:virantha.com,2019-04-04:/2019/04/04/lego-spike-prime-compared/</id><summary type="html">&lt;div class="admonition note"&gt;
&lt;p class="first admonition-title"&gt;Note&lt;/p&gt;
&lt;p class="last"&gt;Updated 4/9/19 with some new information regarding the sensors from newly available datasheets.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="contents topic" id="table-of-contents"&gt;
&lt;p class="topic-title"&gt;&lt;a class="reference internal" href="#top"&gt;Table of Contents&lt;/a&gt;&lt;/p&gt;
&lt;ul class="auto-toc simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#overview" id="toc-entry-1"&gt;1&amp;nbsp;&amp;nbsp;&amp;nbsp;Overview&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#comparison-with-boost-and-poweredup-sets" id="toc-entry-2"&gt;2&amp;nbsp;&amp;nbsp;&amp;nbsp;Comparison with Boost and PoweredUp Sets&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#external-community-links" id="toc-entry-3"&gt;3&amp;nbsp;&amp;nbsp;&amp;nbsp;External community links&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;p&gt;LegoÂ® just announced their brand-new (as of April 2019) robotics education kit,
the &lt;a class="reference external" href="https://education.lego.com/en-us/meetspikeprime"&gt;SPIKE Prime&lt;/a&gt;.
It's available for â€¦&lt;/p&gt;</summary><content type="html">&lt;div class="admonition note"&gt;
&lt;p class="first admonition-title"&gt;Note&lt;/p&gt;
&lt;p class="last"&gt;Updated 4/9/19 with some new information regarding the sensors from newly available datasheets.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="contents topic" id="table-of-contents"&gt;
&lt;p class="topic-title"&gt;&lt;a class="reference internal" href="#top"&gt;Table of Contents&lt;/a&gt;&lt;/p&gt;
&lt;ul class="auto-toc simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#overview" id="toc-entry-1"&gt;1&amp;nbsp;&amp;nbsp;&amp;nbsp;Overview&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#comparison-with-boost-and-poweredup-sets" id="toc-entry-2"&gt;2&amp;nbsp;&amp;nbsp;&amp;nbsp;Comparison with Boost and PoweredUp Sets&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#external-community-links" id="toc-entry-3"&gt;3&amp;nbsp;&amp;nbsp;&amp;nbsp;External community links&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;p&gt;LegoÂ® just announced their brand-new (as of April 2019) robotics education kit,
the &lt;a class="reference external" href="https://education.lego.com/en-us/meetspikeprime"&gt;SPIKE Prime&lt;/a&gt;.
It's available for pre-order for US $329.95 from the LegoÂ® Education
Store as part number &lt;a class="reference external" href="https://education.lego.com/en-us/products/lego-education-spike-prime-set/45678"&gt;45678&lt;/a&gt;, and is expected to ship in August.&lt;/p&gt;
&lt;div class="figure align-right"&gt;
&lt;img alt="skip_better spike prime" src="/images/2019/spike/spike_overview.png" style="width: 400px;" /&gt;
&lt;/div&gt;
&lt;div class="section" id="overview"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#toc-entry-1"&gt;1&amp;nbsp;&amp;nbsp;&amp;nbsp;Overview&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The SPIKE Prime system  appears to be using the same LPF2 (LegoÂ® Power Functions 2.0) BluetoothLE
communication system  that they introduced with their PoweredUp and Boost robotics gear in the last
few years.  This new set introduces a new hub that now has 6 general purpose ports (up from
2 in their previous LPF2 systems), and an expanded set of peripherals such as sensors and motors.  I'm hoping
to update my Python library &lt;a class="reference external" href="https://virantha.com/2019/03/30/bricknil/"&gt;BrickNil&lt;/a&gt; to support this once
it comes out.&lt;/p&gt;
&lt;p&gt;The hub now appears to have a 5x5 programable segment LED display, a built-in rechargeable battery, as well as a built-in 6-axis accelerometer and
speaker, and can be &lt;a class="reference external" href="https://education.lego.com/en-us/products/lego-technic-large-hub/45601"&gt;ordered separately&lt;/a&gt; for relatively pricey $248.&lt;/p&gt;
&lt;div class="figure align-left"&gt;
&lt;img alt="skip_better spike hub" src="/images/2019/spike/spike_hub.png" style="width: 150px;" /&gt;
&lt;/div&gt;
&lt;p&gt;Even more exciting is that it says it's running an embedded MicroPython OS, so hopefully they will release the Python API at some point for
downloadable programs.  The processor inside is, however, only specc'ed at 100MHz.&lt;/p&gt;
&lt;div class="figure align-center"&gt;
&lt;img alt="skip_better spike prime" src="/images/2019/spike/spike_spec_hub_python.png" style="width: 600px;" /&gt;
&lt;/div&gt;
&lt;p&gt;The peripherals appear to include two small motors, one large motor, light
sensor, distance sensor, and a touch sensor.  Only
the larger motor, which LEGO is calling &lt;a class="reference external" href="https://education.lego.com/en-us/products/lego-technic-large-angular-motor/45602"&gt;Technic Large Angular Motor&lt;/a&gt;
is currently available separately for pre-order for $35.  According to some details from a LEGO developer,
all the SPIKE motors support angular positioning capability with an absolute zero reference.  Previous motors with angular
movement would reset their zero reference to whatever position they were in at power-up, so this new feature
should be quite interesting for resetting your system to a known state.&lt;/p&gt;
&lt;p&gt;According to the datasheet on the distance sensor, there is easy access to a break-out pin header that should let
anyone design and plug in their own hardware to expand this system with new
sensors/actuators.  I wonder if any third-party commercial devices will start
becoming available (assuming LegoÂ® publishes the UART and physical
specification on this connector).  Regardless, this should be quite easy for
hobbyists to take advantage of.&lt;/p&gt;
&lt;div class="figure align-center"&gt;
&lt;img alt="skip_better spike hub" src="/images/2019/spike/spike_breakout.png" style="width: 600px;" /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="comparison-with-boost-and-poweredup-sets"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#toc-entry-2"&gt;2&amp;nbsp;&amp;nbsp;&amp;nbsp;Comparison with Boost and PoweredUp Sets&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Let's take a look and compare this with the two older LPF2 gear.  The included peripherals between
PoweredUp and Boost are interchangeable (also to a lesser extent with the Wedo educational set),
so the hope is that SPIKE Prime will be compatible with the older gear as well, and possibly the new
peripherals will plug-and-play with the older hubs.&lt;/p&gt;
&lt;table border="1" class="docutils" id="comparison"&gt;
&lt;caption&gt;Lego Power Functions 2.0 Sets Compared&lt;/caption&gt;
&lt;colgroup&gt;
&lt;col width="25%" /&gt;
&lt;col width="25%" /&gt;
&lt;col width="25%" /&gt;
&lt;col width="25%" /&gt;
&lt;/colgroup&gt;
&lt;thead valign="bottom"&gt;
&lt;tr&gt;&lt;th class="head"&gt;&amp;nbsp;&lt;/th&gt;
&lt;th class="head"&gt;PoweredUp &lt;a class="amazon" href="http://www.amazon.com/gp/product/B07CC37F63?ie=UTF8&amp;linkCode=as2&amp;camp=1634&amp;tag=virantha-20"&gt;Train&lt;/a&gt;&lt;/th&gt;
&lt;th class="head"&gt;&lt;a class="amazon" href="http://www.amazon.com/gp/product/B06Y6JCTKH?ie=UTF8&amp;linkCode=as2&amp;camp=1634&amp;tag=virantha-20"&gt;Boost&lt;/a&gt;&lt;/th&gt;
&lt;th class="head"&gt;SPIKE &lt;a class="reference external" href="https://education.lego.com/en-us/products/lego-education-spike-prime-set/45678"&gt;45678&lt;/a&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;Price (USD)&lt;/td&gt;
&lt;td&gt;$160+&lt;/td&gt;
&lt;td&gt;$160&lt;/td&gt;
&lt;td&gt;$330&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;BluetoothLE&lt;/td&gt;
&lt;td&gt;âœ“&lt;/td&gt;
&lt;td&gt;âœ“&lt;/td&gt;
&lt;td&gt;âœ“&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Remote&lt;/td&gt;
&lt;td&gt;âœ“&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Ports&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Internal tilt/accelerometer&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;âœ“&lt;/td&gt;
&lt;td&gt;âœ“&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Train motor&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Internal motor&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;External motor (medium)&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;External motor (large)&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Color LED&lt;/td&gt;
&lt;td&gt;âœ“&lt;/td&gt;
&lt;td&gt;âœ“&lt;/td&gt;
&lt;td&gt;âœ“&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Matrix display&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;âœ“ 5x5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Speaker&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;âœ“&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Light/Color sensor&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;âœ“&lt;/td&gt;
&lt;td&gt;âœ“&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Ultrasonic distance sensor&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;âœ“&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Touch sensor&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;âœ“&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Power&lt;/td&gt;
&lt;td&gt;6 AAA&lt;/td&gt;
&lt;td&gt;6 AAA&lt;/td&gt;
&lt;td&gt;Rechargeable&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;It does seem that the new SPIKE Prime hub opens up room for significantly increasing interaction with the
environment with its support for a larger number of plug-in peripherals.  I'm looking forward to getting
my hands on one when they start shipping in the fall.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="external-community-links"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#toc-entry-3"&gt;3&amp;nbsp;&amp;nbsp;&amp;nbsp;External community links&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I'm going to close with a few helpful community links:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;There is an open &lt;a class="reference external" href="https://www.facebook.com/groups/SPIKEcommunity/"&gt;Facebook page&lt;/a&gt; with some of the developers of the SPIKE prime system that has some great
information (and all credit to the developer there that posted the technical specification datasheets posted above).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;And here is a nice video overview that someone did on the internals of this set:&lt;/p&gt;
  &lt;div style="position: relative; height: 0; overflow: hidden; max-width: 100%; height: auto;"&gt;
     &lt;iframe width="560" height="315" src="https://www.youtube.com/embed/NTg5juB9xhA" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</content><category term="Tech"></category><category term="toys"></category><category term="lego"></category><category term="bluetooth"></category><category term="bricknil"></category></entry><entry><title>BrickNil - Control LEGO Bluetooth Sensors and Motors with Python</title><link href="https://virantha.com/2019/03/30/bricknil/" rel="alternate"></link><published>2019-03-30T23:46:00-04:00</published><updated>2019-03-30T23:46:00-04:00</updated><author><name>virantha</name></author><id>tag:virantha.com,2019-03-30:/2019/03/30/bricknil/</id><summary type="html">&lt;p&gt;BrickNil &lt;a class="footnote-reference" href="#footnote-1" id="footnote-reference-1"&gt;[*]&lt;/a&gt; provides an easy way to connect to and program LEGOÂ® Bluetooth hubs (including the
PoweredUp Passenger Train &lt;a class="reference external" href="https://www.amazon.com/gp/product/B07CC37F63/ref=as_li_tl?ie=UTF8&amp;amp;tag=virantha-20&amp;amp;camp=1789&amp;amp;creative=9325&amp;amp;linkCode=as2&amp;amp;creativeASIN=B07CC37F63"&gt;60197&lt;/a&gt; and Cargo Train &lt;a class="reference external" href="https://www.amazon.com/gp/product/B07C39LCZ9/ref=as_li_tl?ie=UTF8&amp;amp;tag=virantha-20&amp;amp;camp=1789&amp;amp;creative=9325&amp;amp;linkCode=as2&amp;amp;creativeASIN=B07C39LCZ9"&gt;60198&lt;/a&gt; sets, and the Lego
Duplo Steam Train &lt;a class="reference external" href="https://www.amazon.com/gp/product/B07BK6M2WC/ref=as_li_tl?ie=UTF8&amp;amp;tag=virantha-20&amp;amp;camp=1789&amp;amp;creative=9325&amp;amp;linkCode=as2&amp;amp;creativeASIN=B07BK6M2WC"&gt;10874&lt;/a&gt; and Cargo Train &lt;a class="reference external" href="https://www.amazon.com/gp/product/B07BK6KQR6/ref=as_li_tl?ie=UTF8&amp;amp;tag=virantha-20&amp;amp;camp=1789&amp;amp;creative=9325&amp;amp;linkCode=as2&amp;amp;creativeASIN=B07BK6KQR6"&gt;10875&lt;/a&gt; ) using Python on OS X and
Linux. This work was inspired by this &lt;a class="reference external" href="https://www.eurobricks.com/forum/index.php?/forums/topic/162288-powered-up-a-tear-down/"&gt;EuroBricks&lt;/a&gt; thread â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;BrickNil &lt;a class="footnote-reference" href="#footnote-1" id="footnote-reference-1"&gt;[*]&lt;/a&gt; provides an easy way to connect to and program LEGOÂ® Bluetooth hubs (including the
PoweredUp Passenger Train &lt;a class="reference external" href="https://www.amazon.com/gp/product/B07CC37F63/ref=as_li_tl?ie=UTF8&amp;amp;tag=virantha-20&amp;amp;camp=1789&amp;amp;creative=9325&amp;amp;linkCode=as2&amp;amp;creativeASIN=B07CC37F63"&gt;60197&lt;/a&gt; and Cargo Train &lt;a class="reference external" href="https://www.amazon.com/gp/product/B07C39LCZ9/ref=as_li_tl?ie=UTF8&amp;amp;tag=virantha-20&amp;amp;camp=1789&amp;amp;creative=9325&amp;amp;linkCode=as2&amp;amp;creativeASIN=B07C39LCZ9"&gt;60198&lt;/a&gt; sets, and the Lego
Duplo Steam Train &lt;a class="reference external" href="https://www.amazon.com/gp/product/B07BK6M2WC/ref=as_li_tl?ie=UTF8&amp;amp;tag=virantha-20&amp;amp;camp=1789&amp;amp;creative=9325&amp;amp;linkCode=as2&amp;amp;creativeASIN=B07BK6M2WC"&gt;10874&lt;/a&gt; and Cargo Train &lt;a class="reference external" href="https://www.amazon.com/gp/product/B07BK6KQR6/ref=as_li_tl?ie=UTF8&amp;amp;tag=virantha-20&amp;amp;camp=1789&amp;amp;creative=9325&amp;amp;linkCode=as2&amp;amp;creativeASIN=B07BK6KQR6"&gt;10875&lt;/a&gt; ) using Python on OS X and
Linux. This work was inspired by this &lt;a class="reference external" href="https://www.eurobricks.com/forum/index.php?/forums/topic/162288-powered-up-a-tear-down/"&gt;EuroBricks&lt;/a&gt; thread and the NodeJS
&lt;a class="reference external" href="https://github.com/nathankellenicki/node-poweredup"&gt;Powered-Up&lt;/a&gt; library. Unlike the official apps available from LEGO, BrickNil
allows you to control multiple hubs with a single program, which lets you
easily scale to programming large interactive systems.&lt;/p&gt;
&lt;p&gt;BrickNil requires modern Python (designed and tested for 3.7) and uses asynchronous
event programming built on top of the &lt;a class="reference external" href="http://curio.readthedocs.io"&gt;Curio&lt;/a&gt; async library.  As an aside, the choice of
async library is fairly arbitrary; and enabling another library such as &lt;cite&gt;asyncio&lt;/cite&gt; or &lt;cite&gt;Trio&lt;/cite&gt;
should be straightforward.&lt;/p&gt;
&lt;div class="contents topic" id="table-of-contents"&gt;
&lt;p class="topic-title"&gt;&lt;a class="reference internal" href="#top"&gt;Table of Contents:&lt;/a&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#features" id="toc-entry-1"&gt;Features&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#more-documentation" id="toc-entry-2"&gt;More documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;p&gt;An example BrickNil program for controlling the Train motor speed is shown below:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;curio&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;sleep&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;bricknil&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;attach&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;start&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;bricknil.hub&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;PoweredUpHub&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;bricknil.sensor&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;TrainMotor&lt;/span&gt;

&lt;span class="nd"&gt;@attach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TrainMotor&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;motor&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Train&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;PoweredUpHub&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;

    &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;  &lt;span class="c1"&gt;# Repeat this control two times&lt;/span&gt;
            &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;motor&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ramp_speed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;80&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# Ramp speed to 80 over 5 seconds&lt;/span&gt;
            &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;motor&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ramp_speed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;# Brake to 0 over 1 second&lt;/span&gt;
            &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;system&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;train&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Train&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;My train&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vm"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;system&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Free and open-source software: ASL2 license&lt;/li&gt;
&lt;li&gt;Documentation: &lt;a class="reference external" href="http://virantha.github.io/bricknil"&gt;http://virantha.github.io/bricknil&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Source: &lt;a class="reference external" href="https://github.com/virantha/bricknil"&gt;https://github.com/virantha/bricknil&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;table class="docutils footnote" frame="void" id="footnote-1" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#footnote-reference-1"&gt;[*]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;BrickNil's name comes from the word &amp;quot;Nil&amp;quot; (à¶±à·’à¶½à·Š) in &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Sinhalese_language"&gt;Sinhala&lt;/a&gt; which means Blue (as in Bluetooth)&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;div class="section" id="features"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#toc-entry-1"&gt;Features&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;Fully supports Python asynchronous keywords and coroutines&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last"&gt;
&lt;li&gt;Allows expressive concurrent programming using async/await syntax&lt;/li&gt;
&lt;li&gt;The current implementation uses the async library &lt;a class="reference external" href="http://curio.readthedocs.io"&gt;Curio&lt;/a&gt; by David Beazley&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;Cross-platform&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last"&gt;
&lt;li&gt;Uses the Adafruit Bluefruit BluetoothLE library for Mac OS X&lt;/li&gt;
&lt;li&gt;Uses the Bleak Bluetooth library for Linux and Win10; also tested on Raspberry Pi.&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;Supports the following LEGOÂ® Bluetooth components:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="admonition note"&gt;
&lt;p class="first admonition-title"&gt;Note&lt;/p&gt;
&lt;p class="last"&gt;This site may receive a commission (at no cost to you) if you buy an item through an affiliate link on this page.&lt;/p&gt;
&lt;/div&gt;
&lt;table border="1" class="docutils" id="components"&gt;
&lt;caption&gt;Lego components supported&lt;/caption&gt;
&lt;colgroup&gt;
&lt;col width="33%" /&gt;
&lt;col width="10%" /&gt;
&lt;col width="19%" /&gt;
&lt;col width="38%" /&gt;
&lt;/colgroup&gt;
&lt;thead valign="bottom"&gt;
&lt;tr&gt;&lt;th class="head"&gt;Peripheral&lt;/th&gt;
&lt;th class="head"&gt;Price&lt;/th&gt;
&lt;th class="head"&gt;Sets&lt;/th&gt;
&lt;th class="head"&gt;Support&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;PoweredUp Hub (&lt;a class="reference external" href="https://click.linksynergy.com/deeplink?id=seuBib7H7fY&amp;amp;mid=13923&amp;amp;murl=http%3A%2F%2Fshop.lego.com%2Fen-US%2Fproduct%2FHub-88009"&gt;88009&lt;/a&gt;)&lt;/td&gt;
&lt;td&gt;$50&lt;/td&gt;
&lt;td&gt;&lt;a class="amazon" href="http://www.amazon.com/gp/product/B07CC37F63?ie=UTF8&amp;linkCode=as2&amp;camp=1634&amp;tag=virantha-20"&gt;60197&lt;/a&gt;, &lt;a class="amazon" href="http://www.amazon.com/gp/product/B07C39LCZ9?ie=UTF8&amp;linkCode=as2&amp;camp=1634&amp;tag=virantha-20"&gt;60198&lt;/a&gt;, &lt;a class="amazon" href="http://www.amazon.com/gp/product/B07BMGR1FN?ie=UTF8&amp;linkCode=as2&amp;camp=1634&amp;tag=virantha-20"&gt;76112&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;LED color, Button, Current, Voltage sensor&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;PoweredUp Train Motor (&lt;a class="reference external" href="https://click.linksynergy.com/deeplink?id=seuBib7H7fY&amp;amp;mid=13923&amp;amp;murl=http%3A%2F%2Fshop.lego.com%2Fen-US%2Fproduct%2FTrain-Motor-88011"&gt;88011&lt;/a&gt;)&lt;/td&gt;
&lt;td&gt;$14&lt;/td&gt;
&lt;td&gt;&lt;a class="amazon" href="http://www.amazon.com/gp/product/B07CC37F63?ie=UTF8&amp;linkCode=as2&amp;camp=1634&amp;tag=virantha-20"&gt;60197&lt;/a&gt;, &lt;a class="amazon" href="http://www.amazon.com/gp/product/B07C39LCZ9?ie=UTF8&amp;linkCode=as2&amp;camp=1634&amp;tag=virantha-20"&gt;60198&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Motor&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;PoweredUp Remote (&lt;a class="reference external" href="https://click.linksynergy.com/deeplink?id=seuBib7H7fY&amp;amp;mid=13923&amp;amp;murl=http%3A%2F%2Fshop.lego.com%2Fen-US%2Fproduct%2FRemote-Control-88010"&gt;88010&lt;/a&gt;)&lt;/td&gt;
&lt;td&gt;$23&lt;/td&gt;
&lt;td&gt;&lt;a class="amazon" href="http://www.amazon.com/gp/product/B07CC37F63?ie=UTF8&amp;linkCode=as2&amp;camp=1634&amp;tag=virantha-20"&gt;60197&lt;/a&gt;, &lt;a class="amazon" href="http://www.amazon.com/gp/product/B07C39LCZ9?ie=UTF8&amp;linkCode=as2&amp;camp=1634&amp;tag=virantha-20"&gt;60198&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Remote buttons&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;PoweredUp Light (&lt;a class="reference external" href="https://click.linksynergy.com/deeplink?id=seuBib7H7fY&amp;amp;mid=13923&amp;amp;murl=http%3A%2F%2Fshop.lego.com%2Fen-US%2Fproduct%2FLight-88005"&gt;88005&lt;/a&gt;)&lt;/td&gt;
&lt;td&gt;$10&lt;/td&gt;
&lt;td&gt;&lt;a class="reference external" href="https://click.linksynergy.com/deeplink?id=seuBib7H7fY&amp;amp;mid=13923&amp;amp;murl=http%3A%2F%2Fshop.lego.com%2Fen-US%2Fproduct%2FLight-88005"&gt;88005&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Brightness&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Boost Hub (&lt;a class="reference external" href="https://click.linksynergy.com/deeplink?id=seuBib7H7fY&amp;amp;mid=13923&amp;amp;murl=http%3A%2F%2Fshop.lego.com%2Fen-US%2Fproduct%2FMove-Hub-88006"&gt;88006&lt;/a&gt;)&lt;/td&gt;
&lt;td&gt;$80&lt;/td&gt;
&lt;td&gt;&lt;a class="amazon" href="http://www.amazon.com/gp/product/B06Y6JCTKH?ie=UTF8&amp;linkCode=as2&amp;camp=1634&amp;tag=virantha-20"&gt;17101&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Motors, Tilt, LED, Button, Current, Voltage sensors&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Boost Vision Sensor (&lt;a class="reference external" href="https://click.linksynergy.com/deeplink?id=seuBib7H7fY&amp;amp;mid=13923&amp;amp;murl=http%3A%2F%2Fshop.lego.com%2Fen-US%2Fproduct%2FColor-Distance-Sensor-88007"&gt;88007&lt;/a&gt;)&lt;/td&gt;
&lt;td&gt;$14&lt;/td&gt;
&lt;td&gt;&lt;a class="amazon" href="http://www.amazon.com/gp/product/B06Y6JCTKH?ie=UTF8&amp;linkCode=as2&amp;camp=1634&amp;tag=virantha-20"&gt;17101&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Color, distance, count&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Boost External Motor (&lt;a class="reference external" href="https://click.linksynergy.com/deeplink?id=seuBib7H7fY&amp;amp;mid=13923&amp;amp;murl=http%3A%2F%2Fshop.lego.com%2Fen-US%2Fproduct%2FMedium-Linear-Motor-88008"&gt;88008&lt;/a&gt;)&lt;/td&gt;
&lt;td&gt;$17&lt;/td&gt;
&lt;td&gt;&lt;a class="amazon" href="http://www.amazon.com/gp/product/B06Y6JCTKH?ie=UTF8&amp;linkCode=as2&amp;camp=1634&amp;tag=virantha-20"&gt;17101&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Motor speed, position&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Duplo Train Base&lt;/td&gt;
&lt;td&gt;&amp;nbsp;&lt;/td&gt;
&lt;td&gt;&lt;a class="amazon" href="http://www.amazon.com/gp/product/B07BK6M2WC?ie=UTF8&amp;linkCode=as2&amp;camp=1634&amp;tag=virantha-20"&gt;10874&lt;/a&gt;, &lt;a class="amazon" href="http://www.amazon.com/gp/product/B07BK6KQR6?ie=UTF8&amp;linkCode=as2&amp;camp=1634&amp;tag=virantha-20"&gt;10875&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Motor, speedometer, color, distance, speaker, voltage&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class="section" id="more-documentation"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#toc-entry-2"&gt;More documentation&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;For more examples and documentation, please see the &lt;a class="reference external" href="http://virantha.github.io/bricknil"&gt;project website&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</content><category term="Bricknil"></category><category term="tech"></category><category term="bricknil"></category><category term="python"></category><category term="curio"></category><category term="async"></category><category term="bluetoothle"></category><category term="lego"></category></entry><entry><title>Setting up a Raspberry Pi with Python 3.7+ using Ansible</title><link href="https://virantha.com/2019/03/30/raspberry-pi-setup-with-ansible-python-37/" rel="alternate"></link><published>2019-03-30T21:28:00-04:00</published><updated>2019-03-30T21:28:00-04:00</updated><author><name>virantha</name></author><id>tag:virantha.com,2019-03-30:/2019/03/30/raspberry-pi-setup-with-ansible-python-37/</id><summary type="html">&lt;p&gt;Here's a set of &lt;a class="reference external" href="https://www.ansible.com/resources/get-started"&gt;Ansible&lt;/a&gt; playbook files to do an unattended compile of Python 3.7+ with SSL on a
headless wifi-connected Raspberry Pi.  A recent project of mine (&lt;a class="reference external" href="https://virantha.github.io/bricknil"&gt;bricknil&lt;/a&gt;) uses 3.7, and
it was a little frustrating to get the default 3.5 upgraded on my Raspbian image â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;Here's a set of &lt;a class="reference external" href="https://www.ansible.com/resources/get-started"&gt;Ansible&lt;/a&gt; playbook files to do an unattended compile of Python 3.7+ with SSL on a
headless wifi-connected Raspberry Pi.  A recent project of mine (&lt;a class="reference external" href="https://virantha.github.io/bricknil"&gt;bricknil&lt;/a&gt;) uses 3.7, and
it was a little frustrating to get the default 3.5 upgraded on my Raspbian image --
I had to compile Python from source with the newer SSL libraries (so that pip works), and get around some uuid
compilation issues that took a fair bit of web research to figure out.&lt;/p&gt;
&lt;p&gt;Everything is run from the local machine
talking to the Pi over ssh, and you just need Ansible installed on your local machine (which can be
as easy as &lt;cite&gt;pip install ansible&lt;/cite&gt; depending on your OS).  Hope this helps save some time for anyone else needing
get modern Python installed on their RPi!&lt;/p&gt;
&lt;div class="contents topic" id="table-of-contents"&gt;
&lt;p class="topic-title"&gt;&lt;a class="reference internal" href="#top"&gt;Table of Contents:&lt;/a&gt;&lt;/p&gt;
&lt;ul class="auto-toc simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#steps" id="toc-entry-1"&gt;1&amp;nbsp;&amp;nbsp;&amp;nbsp;Steps&lt;/a&gt;&lt;ul class="auto-toc"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#download-a-raspbian-image-and-burn-it-to-a-sd-card" id="toc-entry-2"&gt;1.1&amp;nbsp;&amp;nbsp;&amp;nbsp;Download a Raspbian image and burn it to a SD card&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#install-ansbile-on-your-local-machine" id="toc-entry-3"&gt;1.2&amp;nbsp;&amp;nbsp;&amp;nbsp;Install Ansbile on your local machine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#change-the-default-password-on-the-pi" id="toc-entry-4"&gt;1.3&amp;nbsp;&amp;nbsp;&amp;nbsp;Change the default password on the Pi&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#run-the-setup-playbook" id="toc-entry-5"&gt;1.4&amp;nbsp;&amp;nbsp;&amp;nbsp;Run the setup playbook&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="steps"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#toc-entry-1"&gt;1&amp;nbsp;&amp;nbsp;&amp;nbsp;Steps&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="download-a-raspbian-image-and-burn-it-to-a-sd-card"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#toc-entry-2"&gt;1.1&amp;nbsp;&amp;nbsp;&amp;nbsp;Download a Raspbian image and burn it to a SD card&lt;/a&gt;&lt;/h3&gt;
&lt;ol class="arabic"&gt;
&lt;li&gt;&lt;p class="first"&gt;Download the &lt;a class="reference external" href="https://www.raspberrypi.org/downloads/raspbian/"&gt;Raspbian Stretch Lite&lt;/a&gt; image&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Burn it to a suitable SD card.  On OS X, &lt;a class="reference external" href="https://www.balena.io/etcher/"&gt;Balena Etcher&lt;/a&gt; is a good tool to do this.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;On the newly imaged SD card's &lt;cite&gt;/boot&lt;/cite&gt; folder:&lt;/p&gt;
&lt;ol class="arabic"&gt;
&lt;li&gt;&lt;p class="first"&gt;Make an empty file called &lt;cite&gt;ssh&lt;/cite&gt; to enable SSH access.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Make &lt;cite&gt;wpa_supplicant.conf&lt;/cite&gt; file to supply your wifi credentials:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
country=US
ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev
update_config=1

network={
      ssid=&amp;quot;NETWORK_NAME
      psk=&amp;quot;WIFI PASSWORD&amp;quot;
}
&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Now, you should be able to use this SD card to boot your raspberry pi. After giving it a few minutes to boot, you can login in by doing the following on your local machine:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
ssh pi&amp;#64;raspberrypi.local
&amp;lt;enter 'raspberry' as the default password&amp;gt;
&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class="section" id="install-ansbile-on-your-local-machine"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#toc-entry-3"&gt;1.2&amp;nbsp;&amp;nbsp;&amp;nbsp;Install Ansbile on your local machine&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;You can just type &lt;cite&gt;pip install ansible&lt;/cite&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="change-the-default-password-on-the-pi"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#toc-entry-4"&gt;1.3&amp;nbsp;&amp;nbsp;&amp;nbsp;Change the default password on the Pi&lt;/a&gt;&lt;/h3&gt;
&lt;ol class="arabic"&gt;
&lt;li&gt;&lt;p class="first"&gt;You may need to modify the &lt;cite&gt;hosts&lt;/cite&gt; file in &lt;cite&gt;pi_setup&lt;/cite&gt; directory to put in your own IP address for the Pi.&lt;/p&gt;
&lt;p&gt;[gist:id=1b1352c0290b39718596d2bb6891b8bb,file=hosts]&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;You will need to install the python library &lt;cite&gt;passlib&lt;/cite&gt; by running &lt;cite&gt;pip install passlib&lt;/cite&gt; on your local machine (not the Pi).  This is needed to hash the new password.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Use the &lt;cite&gt;change_password.yml&lt;/cite&gt; playbook to test your ansible install and change the default password on the pi (use &lt;cite&gt;raspberry&lt;/cite&gt; for the ssh password when prompted, and then enter your new password):&lt;/p&gt;
&lt;pre class="literal-block"&gt;
ansible-playbook -i hosts change_password.yml --ask-pass
&lt;/pre&gt;
&lt;p&gt;The playbook being run is below, and just prompts the user for a new password before making a copy of the
shadow file and updating the password:&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;[gist:id=1b1352c0290b39718596d2bb6891b8bb,file=change_password.yml]&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="run-the-setup-playbook"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#toc-entry-5"&gt;1.4&amp;nbsp;&amp;nbsp;&amp;nbsp;Run the setup playbook&lt;/a&gt;&lt;/h3&gt;
&lt;ol class="arabic"&gt;
&lt;li&gt;&lt;p class="first"&gt;The final step is to just run the the install playbook.  This will install all the packages, download and compile OpenSSL, followed by Python 3.7, and set up
a virtualenv.   The actual playbook is in &lt;cite&gt;tasks.yml&lt;/cite&gt;, shown below and included in the source, and the command to
execute it on your local machine is:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
ansible-playbook -i hosts tasks.yml --ask-pass
&lt;/pre&gt;
&lt;p&gt;The install will take around two hours, so please be patient.  Most of the time is spent compiling and installing Python from source.  Here's the playbook being executed:&lt;/p&gt;
&lt;p&gt;[gist:id=1b1352c0290b39718596d2bb6891b8bb,file=tasks.yml]&lt;/p&gt;
&lt;p&gt;At the end, there are a couple of steps where I install a sample package and clone a github repo (which in
this case is my &lt;a class="reference external" href="https://virantha.github.io/bricknil"&gt;bricknil&lt;/a&gt; project for controlling Lego trains and robots.  Python 3.7 will be available as
&lt;cite&gt;/usr/local/bin/python3.7&lt;/cite&gt; and virtualenvwrapper will use it as the default python.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;And that's it! Your raspberry pi should be ready to go as a networked appliance with an up-to-date Python.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
</content><category term="Tech"></category><category term="python"></category><category term="raspberry"></category><category term="pi"></category><category term="ansible"></category><category term="automation"></category></entry><entry><title>Part 3 - Building a Fast Event-Driven Simulator for Concurrent Systems of Hardware Processes Using Curio and Python 3.6</title><link href="https://virantha.com/2017/09/28/hardware-simulation-using-curio-3/" rel="alternate"></link><published>2017-09-28T11:20:00-04:00</published><updated>2017-09-28T11:20:00-04:00</updated><author><name>virantha</name></author><id>tag:virantha.com,2017-09-28:/2017/09/28/hardware-simulation-using-curio-3/</id><summary type="html">&lt;p&gt;This is the third in my series on using &lt;a class="reference external" href="http://curio.readthedocs.io/en/latest/"&gt;Curio&lt;/a&gt; to build an event-driven
simulator for hardware processes.  The first two parts can be found here:
&lt;a class="reference external" href="https://virantha.com/2017/09/22/hardware-simulation-using-curio/"&gt;Part 1&lt;/a&gt;, &lt;a class="reference external" href="https://virantha.com/2017/09/27/hardware-simulation-using-curio-2/"&gt;Part 2&lt;/a&gt;.  We're going to use the simulator framework to implement
a &lt;em&gt;distributed&lt;/em&gt; and &lt;em&gt;concurrent&lt;/em&gt; hardware palindrome checker in less than 50 â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;This is the third in my series on using &lt;a class="reference external" href="http://curio.readthedocs.io/en/latest/"&gt;Curio&lt;/a&gt; to build an event-driven
simulator for hardware processes.  The first two parts can be found here:
&lt;a class="reference external" href="https://virantha.com/2017/09/22/hardware-simulation-using-curio/"&gt;Part 1&lt;/a&gt;, &lt;a class="reference external" href="https://virantha.com/2017/09/27/hardware-simulation-using-curio-2/"&gt;Part 2&lt;/a&gt;.  We're going to use the simulator framework to implement
a &lt;em&gt;distributed&lt;/em&gt; and &lt;em&gt;concurrent&lt;/em&gt; hardware palindrome checker in less than 50
lines of code.&lt;/p&gt;
&lt;div class="contents topic" id="table-of-contents"&gt;
&lt;p class="topic-title"&gt;&lt;a class="reference internal" href="#top"&gt;Table of Contents:&lt;/a&gt;&lt;/p&gt;
&lt;ul class="auto-toc simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#palindrome-checker" id="toc-entry-1"&gt;1&amp;nbsp;&amp;nbsp;&amp;nbsp;Palindrome checker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#a-solution" id="toc-entry-2"&gt;2&amp;nbsp;&amp;nbsp;&amp;nbsp;A solution&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#a-concurrent-process" id="toc-entry-3"&gt;3&amp;nbsp;&amp;nbsp;&amp;nbsp;A concurrent process&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#the-environment" id="toc-entry-4"&gt;4&amp;nbsp;&amp;nbsp;&amp;nbsp;The environment&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#instantiate-the-system" id="toc-entry-5"&gt;5&amp;nbsp;&amp;nbsp;&amp;nbsp;Instantiate the system&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#let-s-run-it" id="toc-entry-6"&gt;6&amp;nbsp;&amp;nbsp;&amp;nbsp;Let's run it!&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#summary" id="toc-entry-7"&gt;7&amp;nbsp;&amp;nbsp;&amp;nbsp;Summary&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="palindrome-checker"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#toc-entry-1"&gt;1&amp;nbsp;&amp;nbsp;&amp;nbsp;Palindrome checker&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Let's define what the checker must do as follows:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;The input string is a sequence of characters that arrives one by one.&lt;/li&gt;
&lt;li&gt;With each character's arrival, the palindrome checker must output a boolean representing whether the sequence
seen so far is a palindrome or not.&lt;/li&gt;
&lt;li&gt;As an example, if the sequence &amp;quot;abbab&amp;quot; is sent in (left-most character
first), then the checker should output True, False, False, True, False.&lt;/li&gt;
&lt;li&gt;For generality and scalability, the checker must be composed of N processes
(where N is the length of the input sequence) that each use O(1)
storage(memory).&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="a-solution"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#toc-entry-2"&gt;2&amp;nbsp;&amp;nbsp;&amp;nbsp;A solution&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;One way to approach such a problem is to think about it recursively.  Let's say
that we're about to receive the &lt;em&gt;k&lt;/em&gt; th character, and we know something about
the &lt;em&gt;k-1&lt;/em&gt; sequence containing a palindrome or not.  Can we immediately
determine whether the new sequence with the &lt;em&gt;k&lt;/em&gt; th character is a palindrome?&lt;/p&gt;
&lt;p&gt;It turns out that we can, &lt;em&gt;if&lt;/em&gt; we keep track of what the first character
we saw is.  The new sequence formed by adding the &lt;em&gt;k&lt;/em&gt; th character is a
palindrome if and only if this new character is identical to the first
character, and the remaining sequence book-ended by these is also a palindrome.&lt;/p&gt;
&lt;div class="figure align-center"&gt;
&lt;img alt="Palindrome recursive formulation" src="/images/2017/chp/palindrome.png" /&gt;
&lt;/div&gt;
&lt;p&gt;Here's some pythonic pseudo-code that implements such a recursive solution:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;is_palindrome&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;    &lt;span class="c1"&gt;# A zero or one character string is a palindrome&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;True&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;first&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="n"&gt;last&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;first&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="n"&gt;last&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;is_palindrome&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="a-concurrent-process"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#toc-entry-3"&gt;3&amp;nbsp;&amp;nbsp;&amp;nbsp;A concurrent process&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Now, how can we implement such a solution using a set of processes that communicate
with each other via channels?  In essence, all we do is unroll all the calls
in the recursive construction above into a set of sequentially connected processes!
(you can think of it as expanding out the call stack).&lt;/p&gt;
&lt;p&gt;Let's start with a simple process I will call &lt;em&gt;Pal&lt;/em&gt;, shown below.  It has, on
the left side, an input port &lt;strong&gt;C&lt;/strong&gt; on which it receives a sequence of
characters, and an output port &lt;strong&gt;Ans&lt;/strong&gt; which sends out whether the last
received character caused a palindrome to be formed or not.  It then passes the
character received out on &lt;strong&gt;Cr&lt;/strong&gt; and receives an answer on &lt;strong&gt;Ansr&lt;/strong&gt; which is True if the
sequence to the right is a palindrome or not.&lt;/p&gt;
&lt;div class="figure align-center"&gt;
&lt;img alt="Palindrome recursive formulation" src="/images/2017/chp/PAL1.png" /&gt;
&lt;/div&gt;
&lt;p&gt;This process will implement the pseudo-code above, like so:&lt;/p&gt;
&lt;pre class="code python literal-block"&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;curio&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;chp&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Pal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Process&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;    &lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;InputPort&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;    &lt;span class="n"&gt;Ans&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;OutputPort&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;    &lt;span class="n"&gt;Cr&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;OutputPort&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;    &lt;span class="n"&gt;Ansr&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;InputPort&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;    &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;exec&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="c1"&gt;# Do the first char (so we store it)&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="n"&gt;first&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;recv&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="n"&gt;is_palindrome&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Ans&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;is_palindrome&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;        &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;            &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;recv&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;            &lt;span class="n"&gt;is_palindrome&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="n"&gt;first&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;is_palindrome&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;advance_local_time&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;            &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Ans&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;is_palindrome&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;            &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Cr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;            &lt;span class="n"&gt;is_palindrome&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Ansr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;recv&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;First, I import the framework defined in the previous article (I'm calling it &lt;tt class="docutils literal"&gt;chp.py&lt;/tt&gt;,
and you can download it in the gist at the end of this article)&lt;/p&gt;
&lt;p&gt;Then, I define the &lt;em&gt;Pal&lt;/em&gt; process as a subclass of a &lt;em&gt;Process&lt;/em&gt; and specify its input
and output ports to match our figure above.  Then, I implement the pseudo-code in
the &lt;tt class="docutils literal"&gt;exec&lt;/tt&gt; coroutine method.  The code outside the &lt;tt class="docutils literal"&gt;while True&lt;/tt&gt; statement implements
the base case where the length is 1; each time a character is received, the answer
is True.  Then, for each new character received, I can compute whether the
new sequence is a palindrome by comparing the first value seen to the current value,
and &lt;em&gt;AND&lt;/em&gt; ing with whether the previous sequence was a palindrome.  The result is
sent out on &lt;em&gt;Ans&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Then, the code implements the recursive call by propagating the new character to the
remainder of the sequence on the right, and receiving its result on &lt;em&gt;Ansr&lt;/em&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="the-environment"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#toc-entry-4"&gt;4&amp;nbsp;&amp;nbsp;&amp;nbsp;The environment&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;At this point, we need to implement a Process to supply the characters in the
sequence to be checked.  Here's the &lt;em&gt;Env&lt;/em&gt; (environment) process:&lt;/p&gt;
&lt;pre class="code python literal-block"&gt;
&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Env&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Producer&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;    &lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;OutputPort&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;    &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;InputPort&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="nb"&gt;super&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;    &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;exec&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)):&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;            &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;            &lt;span class="n"&gt;is_palindrome&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;recv&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;[:&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s1"&gt; - &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;is_palindrome&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;advance_local_time&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;Remember to subclass from &lt;em&gt;Producer&lt;/em&gt; if you have a process like this that
generates values unconditionally.  You can initialize this process with the
string to be checked.  In the &lt;tt class="docutils literal"&gt;exec&lt;/tt&gt; coroutine, the process repeatedly sends
out each character of the string, leftmost first.  It receives a result (True
if a palindrome) and then prints a message.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="instantiate-the-system"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#toc-entry-5"&gt;5&amp;nbsp;&amp;nbsp;&amp;nbsp;Instantiate the system&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Now, let's instantiate the environment, and set of processes for a sample string.
Here, we're going to check the string 'A man a plan a cat a ham a yak a yam a hat a canal Panama' (minus the spaces, of course!)&lt;/p&gt;
&lt;pre class="code python literal-block"&gt;
&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;system&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;    &lt;span class="n"&gt;string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'amanaplanacatahamayakayamahatacanalpanama'&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;    &lt;span class="n"&gt;env&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Env&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'env'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;    &lt;span class="n"&gt;pals&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)):&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="n"&gt;pals&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Pal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s1"&gt;'pal[&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s1"&gt;]'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="w"&gt;


&lt;/span&gt;    &lt;span class="n"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pals&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;    &lt;span class="n"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pals&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Ans&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="n"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pals&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Cr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pals&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="n"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pals&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Ans&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pals&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Ansr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;    &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;run_all&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;system&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;with_monitor&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;We instantiate one &lt;em&gt;Env&lt;/em&gt; process, and then one &lt;em&gt;Pal&lt;/em&gt; process for each character in the
input string.  Then we connect up the processes, and call &lt;tt class="docutils literal"&gt;run_all&lt;/tt&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="let-s-run-it"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#toc-entry-6"&gt;6&amp;nbsp;&amp;nbsp;&amp;nbsp;Let's run it!&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Here's the complete code that we've built so far on top of our framework (only 44 lines of code!):&lt;/p&gt;
&lt;pre class="code python literal-block"&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;curio&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;chp&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Pal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Process&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;    &lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;InputPort&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;    &lt;span class="n"&gt;Ans&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;OutputPort&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;    &lt;span class="n"&gt;Cr&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;OutputPort&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;    &lt;span class="n"&gt;Ansr&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;InputPort&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;    &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;exec&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="c1"&gt;# Do the first char (so we store it)&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="n"&gt;first&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;recv&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="n"&gt;is_palindrome&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Ans&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;is_palindrome&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;        &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;            &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;recv&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;            &lt;span class="n"&gt;is_palindrome&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="n"&gt;first&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;is_palindrome&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;advance_local_time&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;            &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Ans&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;is_palindrome&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;            &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Cr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;            &lt;span class="n"&gt;is_palindrome&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Ansr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;recv&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Env&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Producer&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;    &lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;OutputPort&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;    &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;InputPort&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="nb"&gt;super&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;    &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;exec&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)):&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;            &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;            &lt;span class="n"&gt;is_palindrome&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;recv&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;[:&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s1"&gt; - &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;is_palindrome&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;advance_local_time&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;system&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;    &lt;span class="n"&gt;string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'amanaplanacatahamayakayamahatacanalpanama'&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;    &lt;span class="n"&gt;env&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Env&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'env'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;    &lt;span class="n"&gt;pals&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)):&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="n"&gt;pals&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Pal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s1"&gt;'pal[&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s1"&gt;]'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="w"&gt;


&lt;/span&gt;    &lt;span class="n"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pals&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;    &lt;span class="n"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pals&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Ans&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="n"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pals&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Cr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pals&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="n"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pals&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Ans&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pals&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Ansr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;    &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;run_all&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;system&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;with_monitor&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;Just run &lt;tt class="docutils literal"&gt;python palindrome.py&lt;/tt&gt; to execute it, which will give you the following output:&lt;/p&gt;
&lt;pre class="code text literal-block"&gt;
T:0: env.0 - a - True
T:200: env.0 - am - False
T:400: env.0 - ama - True
T:600: env.0 - aman - False
T:800: env.0 - amana - False
T:1000: env.0 - amanap - False
T:1200: env.0 - amanapl - False
T:1400: env.0 - amanapla - False
T:1600: env.0 - amanaplan - False
T:1800: env.0 - amanaplana - False
T:2000: env.0 - amanaplanac - False
T:2200: env.0 - amanaplanaca - False
T:2400: env.0 - amanaplanacat - False
T:2600: env.0 - amanaplanacata - False
T:2800: env.0 - amanaplanacatah - False
T:3000: env.0 - amanaplanacataha - False
T:3200: env.0 - amanaplanacataham - False
T:3400: env.0 - amanaplanacatahama - False
T:3600: env.0 - amanaplanacatahamay - False
T:3800: env.0 - amanaplanacatahamaya - False
T:4000: env.0 - amanaplanacatahamayak - False
T:4200: env.0 - amanaplanacatahamayaka - False
T:4400: env.0 - amanaplanacatahamayakay - False
T:4600: env.0 - amanaplanacatahamayakaya - False
T:4800: env.0 - amanaplanacatahamayakayam - False
T:5000: env.0 - amanaplanacatahamayakayama - False
T:5200: env.0 - amanaplanacatahamayakayamah - False
T:5400: env.0 - amanaplanacatahamayakayamaha - False
T:5600: env.0 - amanaplanacatahamayakayamahat - False
T:5800: env.0 - amanaplanacatahamayakayamahata - False
T:6000: env.0 - amanaplanacatahamayakayamahatac - False
T:6200: env.0 - amanaplanacatahamayakayamahataca - False
T:6400: env.0 - amanaplanacatahamayakayamahatacan - False
T:6600: env.0 - amanaplanacatahamayakayamahatacana - False
T:6800: env.0 - amanaplanacatahamayakayamahatacanal - False
T:7000: env.0 - amanaplanacatahamayakayamahatacanalp - False
T:7200: env.0 - amanaplanacatahamayakayamahatacanalpa - False
T:7400: env.0 - amanaplanacatahamayakayamahatacanalpan - False
T:7600: env.0 - amanaplanacatahamayakayamahatacanalpana - False
T:7800: env.0 - amanaplanacatahamayakayamahatacanalpanam - False
T:8000: env.0 - amanaplanacatahamayakayamahatacanalpanama - True
&lt;/pre&gt;
&lt;p&gt;And success!  It's remarkable how little code it took to accomplish this kind of simulation.&lt;/p&gt;
&lt;p&gt;You can find the complete runnable code including the framework (Python 3.6 and up!) in this &lt;a class="reference external" href="https://gist.github.com/4c9b770244de999117f42b6002f08178"&gt;gist&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="summary"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#toc-entry-7"&gt;7&amp;nbsp;&amp;nbsp;&amp;nbsp;Summary&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;In this article, I've gone over an example of how to simulate a concurrent hardware system
based on message passing between sequential processes using the framework we built
in the first two articles (&lt;a class="reference external" href="https://virantha.com/2017/09/22/hardware-simulation-using-curio/"&gt;Part 1&lt;/a&gt;, &lt;a class="reference external" href="https://virantha.com/2017/09/27/hardware-simulation-using-curio-2/"&gt;Part 2&lt;/a&gt;) of this series.  As you can see, it's really quite simple
to set up and execute new processes that can implement non-trivial systems very quickly.
Perhaps at some point I'll get around to porting the sensor network processor I designed  in
grad school into this framework, but as you can see, there really is no limit to
the amount of complexity you could try to model with this type of simulator.&lt;/p&gt;
&lt;/div&gt;
</content><category term="Tech"></category><category term="python"></category><category term="curio"></category><category term="async"></category><category term="await"></category></entry><entry><title>Part 2 - Building a Fast Event-Driven Simulator for Concurrent Systems of Hardware Processes Using Curio and Python 3.6</title><link href="https://virantha.com/2017/09/27/hardware-simulation-using-curio-2/" rel="alternate"></link><published>2017-09-27T11:20:00-04:00</published><updated>2017-09-27T11:20:00-04:00</updated><author><name>virantha</name></author><id>tag:virantha.com,2017-09-27:/2017/09/27/hardware-simulation-using-curio-2/</id><summary type="html">&lt;p&gt;This is the second in my series on using &lt;a class="reference external" href="http://curio.readthedocs.io/en/latest/"&gt;Curio&lt;/a&gt; to build an event-driven simulator for
hardware processes. (see &lt;a class="reference external" href="https://virantha.com/2017/09/22/hardware-simulation-using-curio/"&gt;Part 1&lt;/a&gt; for the first article)&lt;/p&gt;
&lt;div class="contents topic" id="table-of-contents"&gt;
&lt;p class="topic-title"&gt;&lt;a class="reference internal" href="#top"&gt;Table of Contents:&lt;/a&gt;&lt;/p&gt;
&lt;ul class="auto-toc simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#enhancing-the-simulator-framework" id="toc-entry-1"&gt;1&amp;nbsp;&amp;nbsp;&amp;nbsp;Enhancing the Simulator Framework&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#introducing-ports" id="toc-entry-2"&gt;2&amp;nbsp;&amp;nbsp;&amp;nbsp;Introducing Ports&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#simplifying-the-execution" id="toc-entry-3"&gt;3&amp;nbsp;&amp;nbsp;&amp;nbsp;Simplifying the execution&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#type-annotations-for-readability" id="toc-entry-4"&gt;4&amp;nbsp;&amp;nbsp;&amp;nbsp;Type-annotations for readability&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#adding-simulation-timestamps-to-the-framework" id="toc-entry-5"&gt;5&amp;nbsp;&amp;nbsp;&amp;nbsp;Adding simulation timestamps to the â€¦&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;This is the second in my series on using &lt;a class="reference external" href="http://curio.readthedocs.io/en/latest/"&gt;Curio&lt;/a&gt; to build an event-driven simulator for
hardware processes. (see &lt;a class="reference external" href="https://virantha.com/2017/09/22/hardware-simulation-using-curio/"&gt;Part 1&lt;/a&gt; for the first article)&lt;/p&gt;
&lt;div class="contents topic" id="table-of-contents"&gt;
&lt;p class="topic-title"&gt;&lt;a class="reference internal" href="#top"&gt;Table of Contents:&lt;/a&gt;&lt;/p&gt;
&lt;ul class="auto-toc simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#enhancing-the-simulator-framework" id="toc-entry-1"&gt;1&amp;nbsp;&amp;nbsp;&amp;nbsp;Enhancing the Simulator Framework&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#introducing-ports" id="toc-entry-2"&gt;2&amp;nbsp;&amp;nbsp;&amp;nbsp;Introducing Ports&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#simplifying-the-execution" id="toc-entry-3"&gt;3&amp;nbsp;&amp;nbsp;&amp;nbsp;Simplifying the execution&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#type-annotations-for-readability" id="toc-entry-4"&gt;4&amp;nbsp;&amp;nbsp;&amp;nbsp;Type-annotations for readability&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#adding-simulation-timestamps-to-the-framework" id="toc-entry-5"&gt;5&amp;nbsp;&amp;nbsp;&amp;nbsp;Adding simulation timestamps to the framework&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="enhancing-the-simulator-framework"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#toc-entry-1"&gt;1&amp;nbsp;&amp;nbsp;&amp;nbsp;Enhancing the Simulator Framework&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Now, we're going to make this framework a little bit more robust and less verbose
when defining the system.  In order to do this, I'm going to first introduce the
&lt;em&gt;Port&lt;/em&gt; class that will be used to define how &lt;em&gt;Processes&lt;/em&gt; are connected.  Then
we'll write a utility function to start and end the system automatically,  and
leverage type-annotations to make the code cleaner. Finally, we'll  also
introduce a distributed timestamp system to keep track of simulator time.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="introducing-ports"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#toc-entry-2"&gt;2&amp;nbsp;&amp;nbsp;&amp;nbsp;Introducing Ports&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Let's add the following classes to our framework:&lt;/p&gt;
&lt;pre class="code python literal-block"&gt;
&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Port&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;chan&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;InputPort&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Port&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;    &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;recv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="n"&gt;tok&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;chan&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;recv&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;tok&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;OutputPort&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Port&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;    &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;val&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;chan&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;val&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;An &lt;em&gt;OutputPort&lt;/em&gt; is meant to connect to the sender side of a &lt;em&gt;Channel&lt;/em&gt;, so it has a
&lt;tt class="docutils literal"&gt;send&lt;/tt&gt; method, while the &lt;em&gt;InputPort&lt;/em&gt; connects to the receiver side with a &lt;tt class="docutils literal"&gt;recv&lt;/tt&gt;
method.&lt;/p&gt;
&lt;p&gt;Both kinds of &lt;em&gt;Ports&lt;/em&gt; contain a link to the
&lt;em&gt;Channel&lt;/em&gt; to which it is connected to.&lt;/p&gt;
&lt;p&gt;Now, let's introduce a utility function that given an &lt;em&gt;OutputPort&lt;/em&gt; and an &lt;em&gt;InputPort&lt;/em&gt;,
will instantiate a channel to be used to connect the two ports.  This lets us
hide the concept of a &lt;em&gt;Channel&lt;/em&gt; inside this utility &lt;tt class="docutils literal"&gt;connect&lt;/tt&gt; function and will
eliminate the need to manually instantiate it in our simulation like we did
previously.&lt;/p&gt;
&lt;pre class="code python literal-block"&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;''&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;    &lt;span class="c1"&gt;# Connect ports together by instantiating a channel&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;    &lt;span class="n"&gt;chan&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Channel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;    &lt;span class="c1"&gt;# Check to make sure the ports have not been connected previously to other channels!&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;    &lt;span class="k"&gt;assert&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;chan&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Channel &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; has already been connected!&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;    &lt;span class="k"&gt;assert&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;chan&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Channel &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; has already been connected!&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;    &lt;span class="c1"&gt;# Check to make sure the two ports are of opposite type (input/output)&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;isinstance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;InputPort&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="k"&gt;assert&lt;/span&gt; &lt;span class="nb"&gt;isinstance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;OutputPort&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Channel &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; and &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; are both input ports!&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;        &lt;span class="c1"&gt;# Store the ports this channel is connected to&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="c1"&gt;# b ---chan---&amp;gt; a&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="n"&gt;chan&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;l&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="n"&gt;chan&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="k"&gt;assert&lt;/span&gt; &lt;span class="nb"&gt;isinstance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;InputPort&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Channel &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; and &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; are both output ports!&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;        &lt;span class="c1"&gt;# Store the ports this channel is connected to&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="c1"&gt;# a ---chan---&amp;gt; b&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="n"&gt;chan&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;l&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="n"&gt;chan&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;    &lt;span class="c1"&gt;# Now assign the channel to the two ports&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;    &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;chan&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;chan&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;    &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;chan&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;chan&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;This allows us to add a variety of checks like making sure a &lt;em&gt;Port&lt;/em&gt; is only connected once
to a &lt;em&gt;Channel&lt;/em&gt; (recall that channels are point-to-point connections), and that
one is an input and the other is an output.&lt;/p&gt;
&lt;p&gt;Next, let's modify our &lt;em&gt;Processes&lt;/em&gt; to perform &lt;tt class="docutils literal"&gt;send&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;recv&lt;/tt&gt; actions on
their internal ports instead of channels.&lt;/p&gt;
&lt;pre class="code python literal-block"&gt;
&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Source&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Process&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;length&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;srcval&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="nb"&gt;super&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;val&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;srcval&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;length&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;length&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;OutputPort&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;    &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;exec&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;length&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;sending &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;val&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;            &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;val&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;sent &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;val&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;terminated&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Sink&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Process&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="nb"&gt;super&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;L&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;InputPort&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;    &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;exec&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="n"&gt;tok_count&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;            &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;                &lt;span class="n"&gt;tok&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;L&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;recv&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;                &lt;span class="n"&gt;tok_count&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;                &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;received &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;tok&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="n"&gt;CancelledError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;tok_count&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; tokens received&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;


&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Buffer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Process&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="nb"&gt;super&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;L&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;InputPort&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;OutputPort&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt;


&lt;/span&gt;    &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;exec&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;            &lt;span class="n"&gt;tok&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;L&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;recv&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;received &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;tok&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;sending &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;tok&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;            &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tok&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;In each constructor now, we've defined member variables for the &lt;em&gt;Ports&lt;/em&gt; that each
&lt;em&gt;Process&lt;/em&gt; needs, and we've gotten rid of the &lt;tt class="docutils literal"&gt;connect&lt;/tt&gt; method and delegated that
to the new &lt;tt class="docutils literal"&gt;connect&lt;/tt&gt; function.&lt;/p&gt;
&lt;p&gt;At this point, we can rewrite our &lt;tt class="docutils literal"&gt;system&lt;/tt&gt; and remove any instantiations of &lt;em&gt;Channels&lt;/em&gt;,
which is pretty neat.  And there's much more error checking going on to make sure we
don't try to connect mismatched &lt;em&gt;Port&lt;/em&gt; types, for example.&lt;/p&gt;
&lt;pre class="code python literal-block"&gt;
&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;system&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;    &lt;span class="n"&gt;N&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="c1"&gt;# How many buffers in our linear pipeline&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;    &lt;span class="c1"&gt;# Instantiate the processes&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;    &lt;span class="n"&gt;src&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Source&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'src1'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;    &lt;span class="n"&gt;buf&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Buffer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s1"&gt;'buf[&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s1"&gt;]'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;    &lt;span class="n"&gt;snk&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Sink&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'snk'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;    &lt;span class="c1"&gt;# Connect the processes with the channels&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;    &lt;span class="n"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;src&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;buf&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;L&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="n"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;buf&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;buf&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;L&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;    &lt;span class="n"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;snk&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;L&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;buf&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;    &lt;span class="c1"&gt;# Start the processes&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;    &lt;span class="n"&gt;p_src&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;spawn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;src&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exec&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;    &lt;span class="n"&gt;p_snk&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;spawn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;snk&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exec&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;    &lt;span class="n"&gt;p_buf&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;spawn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;buf&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exec&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;    &lt;span class="c1"&gt;# Wait for the source to finish sending all its values&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;    &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;p_src&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;    &lt;span class="c1"&gt;# Cancel the remaining processes&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;p_buf&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cancel&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;    &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;p_snk&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cancel&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;Running this will yield the same output as our first simulator.  You can find the
complete code file in this &lt;a class="reference external" href="https://gist.github.com/93f052ea6f1eef5ddf483487edcf9289"&gt;port_gist&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="simplifying-the-execution"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#toc-entry-3"&gt;3&amp;nbsp;&amp;nbsp;&amp;nbsp;Simplifying the execution&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;One further step we can take now is to eliminate the need to manually &lt;tt class="docutils literal"&gt;spawn&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;join&lt;/tt&gt;/&lt;tt class="docutils literal"&gt;cancel&lt;/tt&gt; the processes to run our system.  Wouldn't it be nice if we could just
say something like &lt;tt class="docutils literal"&gt;run_all&lt;/tt&gt; which would automatically start the defined processes?&lt;/p&gt;
&lt;p&gt;Well, let's do just that!  The basic idea is to keep track of all the instantiated process
in the &lt;em&gt;Process&lt;/em&gt; base class.  However, in order to &lt;tt class="docutils literal"&gt;join&lt;/tt&gt; on the correct type of &lt;em&gt;Process&lt;/em&gt; (i.e. only Processes that generate values), we'll need to distinguish two kinds of
processes, &lt;em&gt;Producers&lt;/em&gt; and others (non-producers).   We'll make any of the former inherit
from a new (abstract) class called &lt;em&gt;Producer&lt;/em&gt; so we can keep track of those instances.&lt;/p&gt;
&lt;pre class="code python literal-block"&gt;
&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Process&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;    &lt;span class="n"&gt;next_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;    &lt;span class="n"&gt;non_producer_processes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;    &lt;span class="n"&gt;producer_processes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Process&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;next_id&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="n"&gt;Process&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;next_id&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="c1"&gt;# Keep track of all source processes (join on these at the end), and non-source processes (cancel on these at the end)&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;isinstance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Producer&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;            &lt;span class="n"&gt;Process&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;producer_processes&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;            &lt;span class="n"&gt;Process&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;non_producer_processes&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__str__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;.&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__repr__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="vm"&gt;__name__&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;('&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;')&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;message&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;: &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Producer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Process&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;    &lt;span class="c1"&gt;# All processes that drive the system (by injecting values in on channels unconditionally)&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;    &lt;span class="c1"&gt;# must subclass this process&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;    &lt;span class="k"&gt;pass&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Source&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Producer&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;length&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;srcval&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="nb"&gt;super&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;val&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;srcval&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;length&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;length&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;OutputPort&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;    &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;exec&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;length&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;sending &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;val&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;            &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;val&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;sent &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;val&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;terminated&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;Now, the &lt;tt class="docutils literal"&gt;producer_processes&lt;/tt&gt; dict keeps track of all the &lt;em&gt;Producer&lt;/em&gt; type processes,
and &lt;tt class="docutils literal"&gt;non_producer_processes&lt;/tt&gt; stores the rest.  We also change &lt;em&gt;Source&lt;/em&gt; to inherit from
the new &lt;em&gt;Producer&lt;/em&gt; subclass.&lt;/p&gt;
&lt;p&gt;And that's pretty much it, we can now create a generic &lt;tt class="docutils literal"&gt;run_all&lt;/tt&gt; function like so:&lt;/p&gt;
&lt;pre class="code python literal-block"&gt;
&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;run_all&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;    &lt;span class="n"&gt;source_tasks&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;    &lt;span class="n"&gt;other_tasks&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;Process&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;producer_processes&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;values&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="n"&gt;source_tasks&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;spawn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exec&lt;/span&gt;&lt;span class="p"&gt;()))&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;Process&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;non_producer_processes&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;values&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="n"&gt;other_tasks&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;spawn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exec&lt;/span&gt;&lt;span class="p"&gt;()))&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;    &lt;span class="c1"&gt;# Now wait for all sources to end&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;task&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;source_tasks&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;task&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;task&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;other_tasks&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;task&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cancel&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;And our &lt;tt class="docutils literal"&gt;system&lt;/tt&gt; reduces to just the following:&lt;/p&gt;
&lt;pre class="code python literal-block"&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;curio&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;spawn&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;system&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;    &lt;span class="n"&gt;N&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="c1"&gt;# How many buffers in our linear pipeline&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;    &lt;span class="c1"&gt;# Instantiate the processes&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;    &lt;span class="n"&gt;src&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Source&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'src1'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;    &lt;span class="n"&gt;buf&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Buffer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s1"&gt;'buf[&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s1"&gt;]'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;    &lt;span class="n"&gt;snk&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Sink&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'snk'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;    &lt;span class="c1"&gt;# Connect the processes with the channels&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;    &lt;span class="n"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;src&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;buf&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;L&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="n"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;buf&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;buf&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;L&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;    &lt;span class="n"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;snk&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;L&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;buf&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;    &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;run_all&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;Much simpler and requires just the &lt;em&gt;Process&lt;/em&gt; and &lt;em&gt;Connection&lt;/em&gt; definitions!  The runnable
code is at &lt;a class="reference external" href="https://gist.github.com/f674356a82fadc95841ffae437e38838"&gt;run_all_gist&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="type-annotations-for-readability"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#toc-entry-4"&gt;4&amp;nbsp;&amp;nbsp;&amp;nbsp;Type-annotations for readability&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Python 3 introduced type annotations as part of the syntax, and I'm going to leverage
that to specify the ports on a Process in a cleaner way.  For example, instead of
instantiating an &lt;em&gt;InputPort&lt;/em&gt; and an &lt;em&gt;OutputPort&lt;/em&gt; manually in the constructor of the
&lt;em&gt;Buffer&lt;/em&gt; process, I'm going to add support to do the following:&lt;/p&gt;
&lt;pre class="code python literal-block"&gt;
&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Buffer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Process&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;    &lt;span class="n"&gt;L&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;InputPort&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;    &lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;OutputPort&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="nb"&gt;super&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;    &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;exec&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;            &lt;span class="n"&gt;tok&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;L&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;recv&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;received &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;tok&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;sending &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;tok&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;            &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tok&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;The syntax of &lt;tt class="docutils literal"&gt;variable: type&lt;/tt&gt; is an annotation, and although Python does not
yet assert any type checks based on this (although there are static type
checking tools out there that do), we can still get access to an object's annotations
by looking at the &lt;tt class="docutils literal"&gt;__annotations__&lt;/tt&gt; member dict, which is a mapping of the name to
the type like so:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Buffer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;buf&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="vm"&gt;__annotations__&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;L&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="nc"&gt;__main__&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;InputPort&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;gt;, &amp;#39;&lt;/span&gt;&lt;span class="sa"&gt;R&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;: &amp;lt;class &amp;#39;&lt;/span&gt;&lt;span class="n"&gt;__main__&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;OutputPort&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I'm going to modify the &lt;em&gt;Process&lt;/em&gt; base class's constructor to take any annotations
that are ports, and inject &lt;strong&gt;instances&lt;/strong&gt; of those types into the object like so:&lt;/p&gt;
&lt;pre class="code python literal-block"&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Process&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;next_id&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="n"&gt;Process&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;next_id&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="c1"&gt;# Keep track of all source processes (join on these at the end), and non-source processes (cancel on these at the end)&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;isinstance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Producer&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;            &lt;span class="n"&gt;Process&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;producer_processes&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;            &lt;span class="n"&gt;Process&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;non_producer_processes&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;        &lt;span class="c1"&gt;# Inject the ports from the annotations on this instance&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;val&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="vm"&gt;__annotations__&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;issubclass&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;val&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Port&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;                &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s1"&gt;'injecting port(&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;val&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s1"&gt;) &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s1"&gt; onto &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="vm"&gt;__class__&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s1"&gt;:&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;                &lt;span class="n"&gt;port&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;val&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;                &lt;span class="nb"&gt;setattr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;port&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;Ignoring the &lt;tt class="docutils literal"&gt;print&lt;/tt&gt; that's only three extra lines needed to move to this cleaner
syntax.  Isn't Python awesome?&lt;/p&gt;
&lt;p&gt;You can find the complete code at &lt;a class="reference external" href="https://gist.github.com/54a7d02d4d50a9fcbce8082c34ff774d"&gt;annotate_gist&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="adding-simulation-timestamps-to-the-framework"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#toc-entry-5"&gt;5&amp;nbsp;&amp;nbsp;&amp;nbsp;Adding simulation timestamps to the framework&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Finally, let's make our simulator able to model the performance of our hardware system.
We can make each &lt;em&gt;Process&lt;/em&gt; have a timestep that corresponds to how long it takes to
execute its code.  Each time through, each &lt;em&gt;Process&lt;/em&gt; will update its local time with
this timestep.  Then, when communication occurs, we simply dispatch the local time
with each sent value.  At the receiving end, the local time is either smaller or larger
than the message timestamp.  Since messages can't have come from the future, if the
local time is smaller, then we need to update the receiver's local time to the
received messages timestamp, in order not to violate causality.&lt;/p&gt;
&lt;p&gt;So what will it take to do this?  I'm going to introduce a default &lt;em&gt;timestep&lt;/em&gt; variable
to the &lt;em&gt;Process&lt;/em&gt; class, and set it to 100 units.  I'm also going to introduce an
&lt;tt class="docutils literal"&gt;advance_time&lt;/tt&gt; method that will increment the local &lt;tt class="docutils literal"&gt;_time&lt;/tt&gt; by the timestep
when called like so:&lt;/p&gt;
&lt;pre class="code python literal-block"&gt;
&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Process&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;    &lt;span class="n"&gt;next_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;    &lt;span class="n"&gt;non_producer_processes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;    &lt;span class="n"&gt;producer_processes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;    &lt;span class="n"&gt;timestep&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Process&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;next_id&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="n"&gt;Process&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;next_id&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="c1"&gt;# Keep track of all source processes (join on these at the end), and non-source processes (cancel on these at the end)&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;isinstance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Producer&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;            &lt;span class="n"&gt;Process&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;producer_processes&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;            &lt;span class="n"&gt;Process&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;non_producer_processes&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;        &lt;span class="c1"&gt;# Inject the ports from the annotations on this instance&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;val&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="vm"&gt;__annotations__&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;issubclass&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;val&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Port&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;                &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s1"&gt;'injecting port(&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;val&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s1"&gt;) &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s1"&gt; onto &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="vm"&gt;__class__&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s1"&gt;:&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;                &lt;span class="n"&gt;port&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;val&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;                &lt;span class="nb"&gt;setattr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;port&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;                &lt;span class="n"&gt;port&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;proc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;  &lt;span class="c1"&gt;# Store the process this port is a part of (used for updating local time in the proc on a receive)&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;        &lt;span class="c1"&gt;# Local time&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_time&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;advance_local_time&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_time&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;timestep&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__str__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;.&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__repr__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="vm"&gt;__name__&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;('&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;')&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;message&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s1"&gt;'T:&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_time&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s1"&gt;: &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s1"&gt; - &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;I've also modified the &lt;tt class="docutils literal"&gt;message&lt;/tt&gt; method to provide the current time on each print
while the simulation is running.  One other thing to note is that I changed the
&lt;em&gt;Port&lt;/em&gt; injection code to allow every &lt;em&gt;Port&lt;/em&gt; to know its containing &lt;em&gt;Process&lt;/em&gt;; this
gives every &lt;em&gt;Port&lt;/em&gt; the ability to access the local &lt;tt class="docutils literal"&gt;_time&lt;/tt&gt; variable. Once each
&lt;em&gt;Port&lt;/em&gt; has this information, we just make the &lt;tt class="docutils literal"&gt;send&lt;/tt&gt; method transmit a tuple of the
value &lt;em&gt;and&lt;/em&gt; the local &lt;tt class="docutils literal"&gt;_time&lt;/tt&gt;, and the &lt;tt class="docutils literal"&gt;receive&lt;/tt&gt; method can compare each
incoming message's timestamp with the local &lt;tt class="docutils literal"&gt;_time&lt;/tt&gt;, and update it if necessary:&lt;/p&gt;
&lt;pre class="code python literal-block"&gt;
&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Port&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;chan&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;proc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;InputPort&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Port&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;    &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;recv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="n"&gt;tok&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;timestamp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;chan&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;recv&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;proc&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_time&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;max&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;proc&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_time&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;timestamp&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;tok&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;OutputPort&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Port&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;    &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;val&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;chan&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;val&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;proc&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_time&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;The only remaining thing to modify is each &lt;em&gt;Process&lt;/em&gt; to make sure we advance
the local time at the proper place. For example, in the buffer we will advance the
time after the receive but before the send, to model the execution time of processing
a value like so:&lt;/p&gt;
&lt;pre class="code python literal-block"&gt;
&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Buffer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Process&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;    &lt;span class="n"&gt;L&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;InputPort&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;    &lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;OutputPort&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="nb"&gt;super&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;    &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;exec&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;            &lt;span class="n"&gt;tok&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;L&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;recv&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;received &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;tok&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;advance_local_time&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;sending &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;tok&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;            &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tok&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;And that's it.  If we run the simulation now, we get the following output, with
the simulation time reported in every message:&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
T:0:&lt;span class="w"&gt; &lt;/span&gt;src1.0&lt;span class="w"&gt; &lt;/span&gt;-&lt;span class="w"&gt; &lt;/span&gt;sending&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;T:100:&lt;span class="w"&gt; &lt;/span&gt;src1.0&lt;span class="w"&gt; &lt;/span&gt;-&lt;span class="w"&gt; &lt;/span&gt;sent&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;T:100:&lt;span class="w"&gt; &lt;/span&gt;src1.0&lt;span class="w"&gt; &lt;/span&gt;-&lt;span class="w"&gt; &lt;/span&gt;sending&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;T:100:&lt;span class="w"&gt; &lt;/span&gt;buf&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;.1&lt;span class="w"&gt; &lt;/span&gt;-&lt;span class="w"&gt; &lt;/span&gt;received&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;T:200:&lt;span class="w"&gt; &lt;/span&gt;buf&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;.1&lt;span class="w"&gt; &lt;/span&gt;-&lt;span class="w"&gt; &lt;/span&gt;sending&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;T:200:&lt;span class="w"&gt; &lt;/span&gt;buf&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;.2&lt;span class="w"&gt; &lt;/span&gt;-&lt;span class="w"&gt; &lt;/span&gt;received&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;T:300:&lt;span class="w"&gt; &lt;/span&gt;buf&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;.2&lt;span class="w"&gt; &lt;/span&gt;-&lt;span class="w"&gt; &lt;/span&gt;sending&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;.&lt;span class="w"&gt;
&lt;/span&gt;.&lt;span class="w"&gt;
&lt;/span&gt;.&lt;span class="w"&gt;
&lt;/span&gt;T:1700:&lt;span class="w"&gt; &lt;/span&gt;buf&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;7&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;.8&lt;span class="w"&gt; &lt;/span&gt;-&lt;span class="w"&gt; &lt;/span&gt;received&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;T:1800:&lt;span class="w"&gt; &lt;/span&gt;buf&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;7&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;.8&lt;span class="w"&gt; &lt;/span&gt;-&lt;span class="w"&gt; &lt;/span&gt;sending&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;T:1800:&lt;span class="w"&gt; &lt;/span&gt;buf&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;9&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;.10&lt;span class="w"&gt; &lt;/span&gt;-&lt;span class="w"&gt; &lt;/span&gt;received&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;T:1900:&lt;span class="w"&gt; &lt;/span&gt;buf&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;9&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;.10&lt;span class="w"&gt; &lt;/span&gt;-&lt;span class="w"&gt; &lt;/span&gt;sending&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;T:1800:&lt;span class="w"&gt; &lt;/span&gt;buf&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;8&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;.9&lt;span class="w"&gt; &lt;/span&gt;-&lt;span class="w"&gt; &lt;/span&gt;received&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;T:1900:&lt;span class="w"&gt; &lt;/span&gt;buf&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;8&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;.9&lt;span class="w"&gt; &lt;/span&gt;-&lt;span class="w"&gt; &lt;/span&gt;sending&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;T:2000:&lt;span class="w"&gt; &lt;/span&gt;snk.11&lt;span class="w"&gt; &lt;/span&gt;-&lt;span class="w"&gt; &lt;/span&gt;received&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;T:1900:&lt;span class="w"&gt; &lt;/span&gt;buf&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;9&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;.10&lt;span class="w"&gt; &lt;/span&gt;-&lt;span class="w"&gt; &lt;/span&gt;received&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;T:2000:&lt;span class="w"&gt; &lt;/span&gt;buf&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;9&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;.10&lt;span class="w"&gt; &lt;/span&gt;-&lt;span class="w"&gt; &lt;/span&gt;sending&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;T:2100:&lt;span class="w"&gt; &lt;/span&gt;snk.11&lt;span class="w"&gt; &lt;/span&gt;-&lt;span class="w"&gt; &lt;/span&gt;received&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;T:2100:&lt;span class="w"&gt; &lt;/span&gt;snk.11&lt;span class="w"&gt; &lt;/span&gt;-&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;tokens&lt;span class="w"&gt; &lt;/span&gt;received
&lt;/pre&gt;
&lt;p&gt;The complete runnable  code is available as a gist - &lt;a class="reference external" href="https://gist.github.com/6c7602a08ce5bb4abfc30c7f66f63f67"&gt;timestamp_gist&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;And that brings us to the close of this article.  In &lt;a class="reference external" href="https://virantha.com/2017/09/28/hardware-simulation-using-curio-3/"&gt;Part 3&lt;/a&gt;, I'll demonstrate
how we can build and model a hardware palindrome checker using this framework.  Thanks for reading!&lt;/p&gt;
&lt;/div&gt;
</content><category term="Tech"></category><category term="python"></category><category term="curio"></category><category term="async"></category><category term="await"></category></entry><entry><title>Part 1 - Building a Fast Event-Driven Simulator for Concurrent Systems of Hardware Processes Using Curio and Python 3.6</title><link href="https://virantha.com/2017/09/22/hardware-simulation-using-curio/" rel="alternate"></link><published>2017-09-22T11:20:00-04:00</published><updated>2017-09-22T11:20:00-04:00</updated><author><name>virantha</name></author><id>tag:virantha.com,2017-09-22:/2017/09/22/hardware-simulation-using-curio/</id><summary type="html">&lt;p&gt;In this post, the first in a series of three, I'm going to show you how to
build an elegant simulator of a concurrent system using the amazing &lt;a class="reference external" href="http://curio.readthedocs.io/en/latest/"&gt;Curio&lt;/a&gt;
library from David Beazley that's built on Python 3.6's async coroutine
features.  I hope it'll provide a nice intro to â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;In this post, the first in a series of three, I'm going to show you how to
build an elegant simulator of a concurrent system using the amazing &lt;a class="reference external" href="http://curio.readthedocs.io/en/latest/"&gt;Curio&lt;/a&gt;
library from David Beazley that's built on Python 3.6's async coroutine
features.  I hope it'll provide a nice intro to how to take advantage of
event-driven programming in Python using the &lt;a class="reference external" href="http://curio.readthedocs.io/en/latest/"&gt;Curio&lt;/a&gt; library and the new
async/await semantics in Python 3.4+ (although I will take advantage of some
cool new 3.6 features to simplify my code).&lt;/p&gt;
&lt;p&gt;In Part 1, we'll quickly build a simulation framework, which
will then be enhanced and optimized into a &amp;quot;proper&amp;quot; framework in &lt;a class="reference external" href="https://virantha.com/2017/09/27/hardware-simulation-using-curio-2/"&gt;Part 2&lt;/a&gt;.  I intend
to finish up in &lt;a class="reference external" href="https://virantha.com/2017/09/28/hardware-simulation-using-curio-3/"&gt;Part 3&lt;/a&gt; with a set of concrete examples on how to use it to simulate
your own message-passing hardware systems that can solve interesting problems.&lt;/p&gt;
&lt;div class="contents topic" id="table-of-contents"&gt;
&lt;p class="topic-title"&gt;&lt;a class="reference internal" href="#top"&gt;Table of Contents:&lt;/a&gt;&lt;/p&gt;
&lt;ul class="auto-toc simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#background" id="toc-entry-1"&gt;1&amp;nbsp;&amp;nbsp;&amp;nbsp;Background&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#describing-hardware-using-communicating-processes" id="toc-entry-2"&gt;2&amp;nbsp;&amp;nbsp;&amp;nbsp;Describing hardware using communicating processes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#building-the-simulator" id="toc-entry-3"&gt;3&amp;nbsp;&amp;nbsp;&amp;nbsp;Building the Simulator&lt;/a&gt;&lt;ul class="auto-toc"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#the-process-class" id="toc-entry-4"&gt;3.1&amp;nbsp;&amp;nbsp;&amp;nbsp;The Process class&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#the-channel-class" id="toc-entry-5"&gt;3.2&amp;nbsp;&amp;nbsp;&amp;nbsp;The Channel class&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#running-the-system" id="toc-entry-6"&gt;4&amp;nbsp;&amp;nbsp;&amp;nbsp;Running the system&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="background"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#toc-entry-1"&gt;1&amp;nbsp;&amp;nbsp;&amp;nbsp;Background&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;First, some background on what I'll be describing:
In graduate school and in my startup, we built hardware using asynchronous
digital logic, and used a high-level abstraction called Communicating Hardware
Processes (CHP) to model and reason about designs.  CHP, based on Tony Hoare's
&lt;a class="reference external" href="http://www.usingcsp.com"&gt;CSP&lt;/a&gt;, is a way to represent circuits as a concurrent collection of sequential
processes communicating and synchronizing via messaging channels.  I'm not
going to dive into the nuts and bolts of CHP, but I will show you how to build
a simulator that models these types of event-driven systems using an incredibly
small amount of code.&lt;/p&gt;
&lt;p&gt;Second, why not &lt;tt class="docutils literal"&gt;asyncio&lt;/tt&gt;, the new standard library that provides
event-driven programming hooks?  I did start there (and I highly recommend
watching this &lt;a class="reference external" href="https://www.youtube.com/watch?v=M-UcUs7IMIM"&gt;talk&lt;/a&gt; by Robert Smallshire that builds up to the async constructs
in Python 3.4 from the ground up), but in the end, I found &lt;tt class="docutils literal"&gt;asyncio&lt;/tt&gt; a little
too complicated and convoluted to get into quickly.  It provides a strong set
of different event-driven abstractions based on generators, tasks, channels,
callbacks, and coroutines, and concrete implementations of different uses, but
I was really just looking for something that provided a coroutine based
event-loop, something that Curio provides quite naturally.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="describing-hardware-using-communicating-processes"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#toc-entry-2"&gt;2&amp;nbsp;&amp;nbsp;&amp;nbsp;Describing hardware using communicating processes&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Let's try to nail down some terminology.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;Process&lt;/strong&gt; - This represents a piece of processing or code that's being executed sequentially.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Channel&lt;/strong&gt; - A channel is used to connect two &lt;em&gt;processes&lt;/em&gt; together.  A
channel is strictly unidirectional, and one side is connected to the &lt;em&gt;sender&lt;/em&gt;
process and the other side to a &lt;em&gt;receiver&lt;/em&gt; process.  Channels are used to
transfer data (like ints or strings) from the sender to the receiver.  A
channel, as a by-product of the way it works, also functions to synchronize
the sender and receiver processes -- if the receiver isn't ready to receive
and the channel is full, then the sender will block until the message is
transferred into the channel.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Port&lt;/strong&gt; - The sender process has an &lt;strong&gt;output port&lt;/strong&gt; that is connected to the channel, and the receiver has an &lt;strong&gt;input port&lt;/strong&gt; on its end of the channel.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;As an example, let's consider the simple one-place buffer that's shown below.
[ref]from preprint of Asynchronous VLSI Systems by Rajit Manohar[/ref]  The
single buffer has two ports, with L being the input port, and R being the
output port.  All the buffer does is receive a value on L, store it in &lt;em&gt;x&lt;/em&gt;, and then send
it out on R.  We can then construct a &lt;strong&gt;system&lt;/strong&gt; of these buffers that implement a
linear pipeline by connecting the adjacent R and L ports with &lt;em&gt;channels&lt;/em&gt;.&lt;/p&gt;
&lt;div class="figure align-center"&gt;
&lt;img alt="Linear buffers" src="/images/2017/chp/buf.png" /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="building-the-simulator"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#toc-entry-3"&gt;3&amp;nbsp;&amp;nbsp;&amp;nbsp;Building the Simulator&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="the-process-class"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#toc-entry-4"&gt;3.1&amp;nbsp;&amp;nbsp;&amp;nbsp;The Process class&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;First thing, let's start with a simple class to represent a &lt;em&gt;Process&lt;/em&gt; (reminder
that all code I'm writing probably &lt;strong&gt;requires Python 3.6&lt;/strong&gt;)&lt;/p&gt;
&lt;pre class="code python literal-block"&gt;
&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Process&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;    &lt;span class="n"&gt;next_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Process&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;next_id&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="n"&gt;Process&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;next_id&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__str__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s2"&gt;.&lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__repr__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s2"&gt;('&lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s2"&gt;')&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="vm"&gt;__name__&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;message&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s2"&gt;: &lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;Nothing too crazy here; just a constructor that keeps track of a unique process id for
every single Process that's created, plus some utility functions to create nice
string representations and also a &lt;em&gt;message&lt;/em&gt; method to hand output from the process in
a standard way.&lt;/p&gt;
&lt;p&gt;I want to segue here and introduce a new feature in 3.6 called &lt;a class="reference external" href="https://www.python.org/dev/peps/pep-0498/"&gt;fstrings&lt;/a&gt;, which
are faster, cleaner to read, and just plain awesome once you start using them.&lt;/p&gt;
&lt;pre class="code python literal-block"&gt;
&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Process&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;    &lt;span class="n"&gt;next_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Process&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;next_id&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="n"&gt;Process&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;next_id&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__str__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;.&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__repr__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="vm"&gt;__name__&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;('&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;')&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;message&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;: &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;Look at that, interpolation of code inside strings!&lt;/p&gt;
&lt;p&gt;Alright, now let's create a Process subclass that actually does something
useful: a &lt;em&gt;Source&lt;/em&gt; process that sends a specified value on a channel a fixed
number of times.&lt;/p&gt;
&lt;pre class="code python literal-block"&gt;
&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Source&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Process&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;length&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;srcval&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="nb"&gt;super&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;val&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;srcval&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;length&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;length&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;chan&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;out_chan&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;chan&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;    &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;exec&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;length&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;sending &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;val&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;            &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;out_chan&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;val&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;sent &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;val&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;terminated&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;The constructor lets us set the value and sequence length to output, and the
&lt;em&gt;connect&lt;/em&gt; rather naively just connects the passed in channel to an instance variable.
We'll define channels in the next section, but for now, let's focus on the
&lt;strong&gt;exec&lt;/strong&gt; method which does the actual work.  The &lt;tt class="docutils literal"&gt;async&lt;/tt&gt; keyword marks this as
an asynchronously executing coroutine (technically, it marks the method as an  &lt;em&gt;awaitable&lt;/em&gt;).  This is the code that will get executed in &lt;a class="reference external" href="http://curio.readthedocs.io/en/latest/"&gt;Curio&lt;/a&gt;'s event loop.&lt;/p&gt;
&lt;p&gt;The code itself iterates the length of the sequence and calls a send method on the output
channel.  The method call is preceded by an &lt;tt class="docutils literal"&gt;await&lt;/tt&gt; keyword, which is how you call
&lt;tt class="docutils literal"&gt;async&lt;/tt&gt; methods (the &lt;tt class="docutils literal"&gt;send&lt;/tt&gt; method will be an async method).  You can read up
on the semantics of this (things like &lt;tt class="docutils literal"&gt;yield from&lt;/tt&gt;), but if you just remember to use
&lt;tt class="docutils literal"&gt;await&lt;/tt&gt; before calling an async method as a rule, you'll be all set.&lt;/p&gt;
&lt;p&gt;Now, let's further introduce a &lt;em&gt;Sink&lt;/em&gt; process that 'eats' values (say from a source), and
the &lt;em&gt;Buffer&lt;/em&gt; process described in the previous section that just receives and passes
on a value.&lt;/p&gt;
&lt;pre class="code python literal-block"&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;curio&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;CancelledError&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Sink&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Process&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="nb"&gt;super&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;chan&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;in_chan&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;chan&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;    &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;exec&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="n"&gt;tok_count&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;            &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;                &lt;span class="n"&gt;tok&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;in_chan&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;recv&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;                &lt;span class="n"&gt;tok_count&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;                &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;received &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;tok&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="n"&gt;CancelledError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;tok_count&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; tokens received&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Buffer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Process&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="nb"&gt;super&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;chan_l&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;chan_r&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;l_chan&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;chan_l&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;r_chan&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;chan_r&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;    &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;exec&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;            &lt;span class="n"&gt;tok&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;l_chan&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;recv&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;received &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;tok&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;sending &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;tok&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;            &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;r_chan&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tok&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;One new thing here is how we receive data from an &lt;tt class="docutils literal"&gt;async&lt;/tt&gt; method.  The
incoming data (or token) is assigned to the result of the &lt;tt class="docutils literal"&gt;await
self.in_chan.recv()&lt;/tt&gt; call.  (Recall that the shortcut is, wherever we'd do a
function call in synchronous code, we do an &lt;tt class="docutils literal"&gt;await&lt;/tt&gt; on the function call
instead in async code).  The other point to note is that we can catch a
&lt;em&gt;CancelledError&lt;/em&gt; like in the &lt;em&gt;Sink&lt;/em&gt; process to print something out if this
process is terminated by the environment (which it will be, since otherwise
it will just hang waiting for more input).&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="the-channel-class"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#toc-entry-5"&gt;3.2&amp;nbsp;&amp;nbsp;&amp;nbsp;The Channel class&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;One more thing before we can make our first attempt at simulating a system of
processes: We need a way to implement the communication channels.  Luckily, Curio has
a built-in Queue type that's explicitly designed for this kind of communication.&lt;/p&gt;
&lt;p&gt;Here's our first stab at the Channel class, assuming we've done a &lt;tt class="docutils literal"&gt;from curio import Queue&lt;/tt&gt;:&lt;/p&gt;
&lt;pre class="code python literal-block"&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;curio&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Queue&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Channel&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Queue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;maxsize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;# Max buffering of 1&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;    &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;val&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;put&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;val&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;    &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;recv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="n"&gt;tok&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;  &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;task_done&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;tok&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;    &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;close&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;Here, we've defined a Channel that has the actions &lt;em&gt;send&lt;/em&gt; and &lt;em&gt;recv&lt;/em&gt; (and a
utility function &lt;em&gt;close&lt;/em&gt; to terminate it).  The &lt;em&gt;send&lt;/em&gt; inserts a value into the
internal Queue, and the &lt;em&gt;recv&lt;/em&gt; will &lt;tt class="docutils literal"&gt;await&lt;/tt&gt; on the value (and block if none
is available).  Once the &lt;em&gt;recv&lt;/em&gt; is done, it's important to call the
&lt;tt class="docutils literal"&gt;task_done&lt;/tt&gt; method on the Queue to signal that the receive is complete.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="running-the-system"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#toc-entry-6"&gt;4&amp;nbsp;&amp;nbsp;&amp;nbsp;Running the system&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Now we have all the initial pieces available to put together a complete simulation
of a linear pipeline of buffers with its environment.  Here's our first version of the code:&lt;/p&gt;
&lt;pre class="code python literal-block"&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;curio&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;spawn&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;system&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;    &lt;span class="n"&gt;N&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="c1"&gt;# How many buffers in our linear pipeline&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;    &lt;span class="c1"&gt;# Define the channels&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;    &lt;span class="n"&gt;chan_l&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Channel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'l'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;    &lt;span class="n"&gt;chan_r&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="n"&gt;chan_r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Channel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s1"&gt;'R[&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s1"&gt;]'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;    &lt;span class="c1"&gt;# Instantiate the processes&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;    &lt;span class="n"&gt;src&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Source&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'src1'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;    &lt;span class="n"&gt;buf&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Buffer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s1"&gt;'buf[&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s1"&gt;]'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;    &lt;span class="n"&gt;snk&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Sink&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'snk'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;    &lt;span class="c1"&gt;# Connect the processes with the channels&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;    &lt;span class="n"&gt;src&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;chan_l&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;    &lt;span class="n"&gt;buf&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;chan_l&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;chan_r&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="n"&gt;buf&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;chan_r&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;chan_r&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;    &lt;span class="n"&gt;snk&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;chan_r&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;    &lt;span class="c1"&gt;# Start the processes&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;    &lt;span class="n"&gt;p_src&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;spawn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;src&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exec&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;    &lt;span class="n"&gt;p_snk&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;spawn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;snk&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exec&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;    &lt;span class="n"&gt;p_buf&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;spawn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;buf&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exec&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;    &lt;span class="c1"&gt;# Wait for the source to finish sending all its values&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;    &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;p_src&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;    &lt;span class="c1"&gt;# Cancel the remaining processes&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;        &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;p_buf&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cancel&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;    &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;p_snk&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cancel&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vm"&gt;__name__&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="s1"&gt;'__main__'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;    &lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;system&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;with_monitor&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;It's still a little more verbose than I'd like, but we'll fix that in the next part.
Notice how all the Processes are started: We do an &lt;tt class="docutils literal"&gt;await spawn&lt;/tt&gt; on the coroutines
(in this case the &lt;tt class="docutils literal"&gt;exec&lt;/tt&gt; coroutine method of our Processes) to start all the
Processes running as tasks in Curio's event loop.  Then, we just wait for the
&lt;em&gt;Source&lt;/em&gt; process to be complete by doing a &lt;tt class="docutils literal"&gt;join()&lt;/tt&gt; on its task.  Once we know the
&lt;em&gt;Source&lt;/em&gt; is done, we can go ahead and call &lt;tt class="docutils literal"&gt;cancel()&lt;/tt&gt; on all the remaining tasks,
because we know they are just waiting on their input channels.&lt;/p&gt;
&lt;pre class="code text literal-block"&gt;
src1.0: sending 1
src1.0: sent 1
src1.0: sending 1
buf[0].1: received 1
buf[0].1: sending 1
buf[1].2: received 1
buf[1].2: sending 1
buf[2].3: received 1
buf[2].3: sending 1
.
.
.
src1.0: sent 1
src1.0: terminated
buf[1].2: received 1
buf[1].2: sending 1
.
.
.
buf[8].9: received 1
buf[8].9: sending 1
snk.11: received 1
buf[9].10: received 1
buf[9].10: sending 1
snk.11: received 1
snk.11: 10 tokens received
&lt;/pre&gt;
&lt;p&gt;And there you go, a complete distributed system, simulated using Curio's
concurrent event loop!  You can find the complete runnable code (Python 3.6!)
in this &lt;a class="reference external" href="https://gist.github.com/ce2bca039ce3522e1b4efccf0fe49c01"&gt;gist&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://virantha.com/2017/09/27/hardware-simulation-using-curio-2/"&gt;In the next article&lt;/a&gt; in this series, we'll talk about enhancing the simulator
and adding some error-checking.&lt;/p&gt;
&lt;/div&gt;
</content><category term="Tech"></category><category term="python"></category><category term="curio"></category><category term="async"></category><category term="await"></category></entry><entry><title>How to use Python to generate extensions with a GUI for Moneydance 2017</title><link href="https://virantha.com/2016/11/28/moneydance-python-extension-tips/" rel="alternate"></link><published>2016-11-28T12:27:00-05:00</published><updated>2016-11-28T12:27:00-05:00</updated><author><name>virantha</name></author><id>tag:virantha.com,2016-11-28:/2016/11/28/moneydance-python-extension-tips/</id><summary type="html">&lt;p&gt;This post describes some of my experiences writing a python extension for Moneydance, a cross-platform
personal finance manager (an alternative to Intuit Quicken).  I was originally attracted to this product
because it runs on a Mac (albeit using a Java look and feel), uses Direct Connect to download transactions from â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;This post describes some of my experiences writing a python extension for Moneydance, a cross-platform
personal finance manager (an alternative to Intuit Quicken).  I was originally attracted to this product
because it runs on a Mac (albeit using a Java look and feel), uses Direct Connect to download transactions from financial instituitions,
has a reasonable price, and supports scripting to get at the entire transaction and account internals.&lt;/p&gt;
&lt;p&gt;Most of this post is built-around using Python (via the built-in Jython 2.7
interface) to build an extension based on the information in the links below.
Hopefully, this post will fill in some of the gaps.  I was completely
unfamiliar with Jython when I started, but I've been amazed at how easy it is to
seamlessly integrate with any Java library, including Swing for building GUI's.
You just import the Java library you want and you have complete access to all
the APIs.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://infinitekind.com/developer"&gt;Moneydance Developer Resource page&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://help.infinitekind.com/discussions/moneydance-development"&gt;Moneydance developer forum&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://infinitekind.com/dev/python_template.py"&gt;Sample template from Moneydance&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://infinitekind.com/dev/RM-NetWorth/wiki_jython.html"&gt;Moneydance Jython notes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="contents topic" id="table-of-contents"&gt;
&lt;p class="topic-title"&gt;&lt;a class="reference internal" href="#top"&gt;Table of contents&lt;/a&gt;&lt;/p&gt;
&lt;ul class="auto-toc simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#pop-up-a-simple-frame-with-a-button" id="toc-entry-1"&gt;1&amp;nbsp;&amp;nbsp;&amp;nbsp;Pop up a simple frame with a button&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#importing-python-files" id="toc-entry-2"&gt;2&amp;nbsp;&amp;nbsp;&amp;nbsp;Importing Python files&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#import-jar-files" id="toc-entry-3"&gt;3&amp;nbsp;&amp;nbsp;&amp;nbsp;Import JAR files&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#persisting-data-in-your-secure-moneydance-file" id="toc-entry-4"&gt;4&amp;nbsp;&amp;nbsp;&amp;nbsp;Persisting data in your secure moneydance file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#bundling-python-into-a-moneydance-java-extension" id="toc-entry-5"&gt;5&amp;nbsp;&amp;nbsp;&amp;nbsp;Bundling Python into a Moneydance Java Extension&lt;/a&gt;&lt;ul class="auto-toc"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#install-the-developer-kit" id="toc-entry-6"&gt;5.1&amp;nbsp;&amp;nbsp;&amp;nbsp;Install the Developer Kit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#download-the-jython-standalone-jar" id="toc-entry-7"&gt;5.2&amp;nbsp;&amp;nbsp;&amp;nbsp;Download the Jython Standalone .jar&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#modify-build-xml" id="toc-entry-8"&gt;5.3&amp;nbsp;&amp;nbsp;&amp;nbsp;Modify build.xml&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#modify-main-java" id="toc-entry-9"&gt;5.4&amp;nbsp;&amp;nbsp;&amp;nbsp;Modify Main.java&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#python-extension" id="toc-entry-10"&gt;5.5&amp;nbsp;&amp;nbsp;&amp;nbsp;Python extension&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#compiling" id="toc-entry-11"&gt;5.6&amp;nbsp;&amp;nbsp;&amp;nbsp;Compiling&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="pop-up-a-simple-frame-with-a-button"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#toc-entry-1"&gt;1&amp;nbsp;&amp;nbsp;&amp;nbsp;Pop up a simple frame with a button&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Here's a simple script based off the Moneydance template that will pop-up a frame with a scrollable list of the names of the current accounts.&lt;/p&gt;
&lt;div class="figure"&gt;
&lt;img alt="Popup" src="https://virantha.com/images/moneydance/popup.png" /&gt;
&lt;/div&gt;
&lt;p&gt;Keep in mind that in Moneydance developer terminology an account can be either
a top-level user account like 'Checking' or a &lt;em&gt;Category&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;You can see the power
and conciseness of Jython married with access to Moneydance internals in the few lines of code it took to accomplish the above:&lt;/p&gt;
&lt;p&gt;[gist:id=5ace1fa44a2e1156e8542523596124f1,file=1-simple-moneydance-popup.py]&lt;/p&gt;
&lt;p&gt;To get this installed, simply open Moneydance 2017 (previous versions will not work) and select &lt;tt class="docutils literal"&gt;Python Scripting&lt;/tt&gt; from the &lt;tt class="docutils literal"&gt;Windows&lt;/tt&gt; menu.
This will pop-up the Python interface where you'll do the following:&lt;/p&gt;
&lt;div class="figure"&gt;
&lt;img alt="Installing the extension" src="https://virantha.com/images/moneydance/install.png" /&gt;
&lt;/div&gt;
&lt;p&gt;If all goes well, in the &lt;tt class="docutils literal"&gt;Extensions&lt;/tt&gt; menu you will see a new item called &lt;tt class="docutils literal"&gt;Test popup&lt;/tt&gt;.  If you select this, then the sample
code will run and generate the popup.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="importing-python-files"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#toc-entry-2"&gt;2&amp;nbsp;&amp;nbsp;&amp;nbsp;Importing Python files&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;If you want to import code from another local file, you need to append the location of your script to sys.path before doing the import in your top-level script:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vm"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;__package__&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;search_path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dirname&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;abspath&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="vm"&gt;__file__&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;search_path&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;search_path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Caveat&lt;/strong&gt;: It seems like Moneydance does not re-import any imports if you reload a script,
making any updates to files other than your top-level script not visible except
for the first time after a clean Moneydance startup. While not an issue when
deploying a finished extension, this is a pain during development when you're
changing code all the time, and the work-around I've found is to &lt;tt class="docutils literal"&gt;reload&lt;/tt&gt;
your module right after the import:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;my_module&lt;/span&gt;
&lt;span class="n"&gt;reload&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;my_module&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This forces moneydance to re-import your local dependencies when you want to break your
code into multiple files.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="import-jar-files"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#toc-entry-3"&gt;3&amp;nbsp;&amp;nbsp;&amp;nbsp;Import JAR files&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This took me a long time to figure out.  If
you need to use a third-party Java library supplied as a JAR, I've so far found
two ways to do this:&lt;/p&gt;
&lt;p&gt;1. Copy the JAR into Moneydance's Java library path.  On my Mac, this was
inside the application bundle at
&lt;tt class="docutils literal"&gt;/Applications/Moneydance.app/Contents/Java/Library&lt;/tt&gt;. I suspect if you modify
your
system classpath and put it in there, that will work too, but I have not tried this.  Regardless, if you use this method,
then all you need is to add the import like so.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;net.miginfocom.swing&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;MigLayout&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;2. If you need a more portable way to distribute this without having the user
install random jar files into their system libraries, I found I had to use a
custom classloader to make sure all the introspection was supported (For
example, I was trying to use a third-party Swing layout library called
&lt;a class="reference external" href="http://www.miglayout.com"&gt;MigLayout&lt;/a&gt;).  You can read more about this &lt;a class="reference external" href="http://stackoverflow.com/questions/3015059/jython-classpath-sys-path-and-jdbc-drivers"&gt;here&lt;/a&gt;,
but here's the code you need to insert at the top of your script.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;loadJar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;jarFile&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="sd"&gt;&amp;#39;&amp;#39;&amp;#39;load a jar at runtime using the system Classloader (needed for JDBC)&lt;/span&gt;
&lt;span class="sd"&gt;        adapted from http://forum.java.sun.com/thread.jspa?threadID=300557&lt;/span&gt;
&lt;span class="sd"&gt;        Author: Steve (SG) Langer Jan 2007 translated the above Java to Jython&lt;/span&gt;
&lt;span class="sd"&gt;        Reference: https://wiki.python.org/jython/JythonMonthly/Articles/January2007/3&lt;/span&gt;
&lt;span class="sd"&gt;        Author: seansummers@gmail.com simplified and updated for jython-2.5.3b3+&lt;/span&gt;
&lt;span class="sd"&gt;        &amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;
        &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;java&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;io&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;net&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;lang&lt;/span&gt;
        &lt;span class="n"&gt;u&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;io&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;File&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;jarFile&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;toURL&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;jarFile&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;net&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;URL&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="n"&gt;jarFile&lt;/span&gt;
        &lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;net&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;URLClassLoader&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getDeclaredMethod&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;addURL&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;net&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;URL&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
        &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;accessible&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
        &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;invoke&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;lang&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ClassLoader&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getSystemClassLoader&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;u&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vm"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;__package__&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;search_path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dirname&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;abspath&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="vm"&gt;__file__&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="n"&gt;loadJar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;search_path&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;miglayout.jar&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;java&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;lang&lt;/span&gt;
&lt;span class="n"&gt;MigLayout&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;lang&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Class&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;forName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;net.miginfocom.swing.MigLayout&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now, the MigLayout class is available for use just like an import.  Note that this assumes the
.jar file is in the same location as your top-level script (&lt;tt class="docutils literal"&gt;search_path&lt;/tt&gt;)&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="persisting-data-in-your-secure-moneydance-file"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#toc-entry-4"&gt;4&amp;nbsp;&amp;nbsp;&amp;nbsp;Persisting data in your secure moneydance file&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;If your extension needs to persist or save data to a file between sessions, there's an easy way
to do it through Moneydance's &lt;tt class="docutils literal"&gt;LocalStorage&lt;/tt&gt; API.  This basically gives you programmatic access
to the currently open and encrypted .moneydance file that stores your user information, providing
a secure place to store things like passwords and pins.&lt;/p&gt;
&lt;p&gt;Here are the steps to access it and persist a .pickle file to it:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;com.infinitekind.moneydance.model&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;org.python.core.util&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;FileUtil&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;java.io&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;FileNotFoundException&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pickle&lt;/span&gt;

&lt;span class="n"&gt;my_data_object&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;anything&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;whatever&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;root_account&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;moneydance&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getRootAccount&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;local_storage&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;root_account&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getBook&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getLocalStorage&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="c1"&gt;# Save a file&lt;/span&gt;
&lt;span class="n"&gt;ostr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;local_storage&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;openFileForWriting&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;test.pickle&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;save_file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;FileUtil&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;wrap&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ostr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;pickle&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dump&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;my_data_object&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;save_file&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;save_file&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="c1"&gt;# Open the file&lt;/span&gt;
&lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;istr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;local_storage&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;openFileForReading&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;test.pickle&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;load_file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;FileUtil&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;wrap&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;istr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;my_data_object&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pickle&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;load&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;load_file&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="n"&gt;FileNotFoundException&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;my_data_object&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;  &lt;span class="kc"&gt;None&lt;/span&gt;
&lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="ne"&gt;EOFError&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;my_data_object&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;  &lt;span class="kc"&gt;None&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="bundling-python-into-a-moneydance-java-extension"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#toc-entry-5"&gt;5&amp;nbsp;&amp;nbsp;&amp;nbsp;Bundling Python into a Moneydance Java Extension&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;One thing you may notice is that installing Python extensions in this way only
keeps your extension around while Moneydance is running.  If you quit and
restart, then you have to reinstall the extension, which is probably a current
limitation of the way Python extensions are supported in Moneydance.&lt;/p&gt;
&lt;p&gt;However, after quite a bit of reading on the way Jython is integrated into
Java (including &lt;a class="reference external" href="http://blog.smartbear.com/programming/embedding-jython-in-java-applications/"&gt;this page&lt;/a&gt;), I've come up with the flow below to package up your Python extension as a
standard Moneydance .mxt extension and deploy it through the regular (and
persistent) extension manager.&lt;/p&gt;
&lt;div class="section" id="install-the-developer-kit"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#toc-entry-6"&gt;5.1&amp;nbsp;&amp;nbsp;&amp;nbsp;Install the Developer Kit&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;These instructions assume you're able to get the Java extension development kit
downloaded and running.  The example found &lt;a class="reference external" href="http://infinitekind.com/developer"&gt;on the Developer page&lt;/a&gt; under 'Download Developer's Kit' is quite
easy to get running.  All you need is the JDK and the Ant build system (if
you're on a Mac, just install Sun's JDK and use Homebrew to install ant).&lt;/p&gt;
&lt;p&gt;You can test the sample extension supplied in this kit by going into the &lt;tt class="docutils literal"&gt;src&lt;/tt&gt; sub-directory, which
contains the build instructions in &lt;tt class="docutils literal"&gt;build.xml&lt;/tt&gt;,
and first generating your signing keys by running the following:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
ant genkeys
&lt;/pre&gt;
&lt;p&gt;Then, everytime you want to build the extension, you type&lt;/p&gt;
&lt;pre class="literal-block"&gt;
ant myextension
&lt;/pre&gt;
&lt;p&gt;It will prompt you to enter the passphrase you used for the keys in the
&lt;tt class="docutils literal"&gt;genkeys&lt;/tt&gt; step, and build the file &lt;tt class="docutils literal"&gt;dist/myextension.mxt&lt;/tt&gt;.  Then, just go
to the Moneydance menu &lt;tt class="docutils literal"&gt;Extensions &lt;span class="pre"&gt;-&amp;gt;&lt;/span&gt; Manage &lt;span class="pre"&gt;Extensions...&lt;/span&gt;&lt;/tt&gt; and click on the
button at the bottom that says &lt;tt class="docutils literal"&gt;Add from &lt;span class="pre"&gt;file...&lt;/span&gt;&lt;/tt&gt;.  Find the new
myextension.mxt and install it, and then go to your Extensions menu and pick
the new item &lt;tt class="docutils literal"&gt;Account list&lt;/tt&gt; that will use the extension you just installed to
pop up a list of your accounts.&lt;/p&gt;
&lt;p&gt;Now that you have Moneydance's example extension building successfully, we can
modify it slightly as discussed in the following to allow Python extensions.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="download-the-jython-standalone-jar"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#toc-entry-7"&gt;5.2&amp;nbsp;&amp;nbsp;&amp;nbsp;Download the Jython Standalone .jar&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;In order to build extensions with Python, we need to add the Jython runtime to
each extension (since it's currently not bundled with Moneydance).  Go to
&lt;a class="reference external" href="http://www.jython.org/downloads.html"&gt;the Jython downloads page&lt;/a&gt; and get the
&lt;strong&gt;Standalone.jar&lt;/strong&gt; for Jython 2.7.0.  Move this file into your devkit's &lt;tt class="docutils literal"&gt;lib&lt;/tt&gt;
directory.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="modify-build-xml"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#toc-entry-8"&gt;5.3&amp;nbsp;&amp;nbsp;&amp;nbsp;Modify build.xml&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;We're going to slightly modify the supplied build.xml as shown below:&lt;/p&gt;
&lt;p&gt;[gist:id=4464c7be4dc40cfe66dc3658059cdc31,file=build.xml]&lt;/p&gt;
&lt;p&gt;First, around line 26 we add our &lt;tt class="docutils literal"&gt;jython.jar&lt;/tt&gt; include, and then we add a python
subdirectory to the code directory on line 46.  The python subdirectory gets copied to
the root of the .mxt file during the build, which is important for being able to import
the extension in the next section.&lt;/p&gt;
&lt;p&gt;Go ahead and replace your build.xml with this file.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="modify-main-java"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#toc-entry-9"&gt;5.4&amp;nbsp;&amp;nbsp;&amp;nbsp;Modify Main.java&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Now, we'll modify the main Java file for the extension to support arbitrary
Python extensions like so:&lt;/p&gt;
&lt;p&gt;[gist:id=4464c7be4dc40cfe66dc3658059cdc31,file=Main.java]&lt;/p&gt;
&lt;p&gt;Here's what's going on:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;First, to clean up, I'm taking out all references to the AccountList popup.  We'll use
our own Python extension from the earlier part of this blog post to replace it.&lt;/li&gt;
&lt;li&gt;Then, I'm importing the Jython supplied PythonInterpreter, which is used to instatiate an interpreter
from which we'll call our Python code.&lt;/li&gt;
&lt;li&gt;In the init method, I register the invocation string as 'popup', which is the same string used in our
Python extension.&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;Following that, I do the following on lines 35-46:&lt;/dt&gt;
&lt;dd&gt;&lt;ol class="first last arabic"&gt;
&lt;li&gt;Instantiate the interpreter.&lt;/li&gt;
&lt;li&gt;Get the path to the extension using the builtin &lt;tt class="docutils literal"&gt;getSourceFile&lt;/tt&gt;.  This is a key step, because we need this .mxt to point
our sys.path at.&lt;/li&gt;
&lt;li&gt;Now, set the &lt;tt class="docutils literal"&gt;jarpath&lt;/tt&gt; variable to this .mxt file, and execute some Python statements to import the Python extension (I'm calling it pyextension.py).&lt;/li&gt;
&lt;li&gt;The &lt;tt class="docutils literal"&gt;reload&lt;/tt&gt; is very important to make sure any changes to your Python extension during deveoplment are updated every time the extension is reinstalled.&lt;/li&gt;
&lt;li&gt;I then instantiate the extension and manually instantiate it using the Moneydance context.&lt;/li&gt;
&lt;/ol&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;Then, in the &lt;tt class="docutils literal"&gt;invoke&lt;/tt&gt; method on line 75, I merely passthrough whatever invocation command Moneydance sends me (in this case, only &lt;tt class="docutils literal"&gt;popup&lt;/tt&gt; from the registration
command) to our Python extension.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;That's it!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="python-extension"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#toc-entry-10"&gt;5.5&amp;nbsp;&amp;nbsp;&amp;nbsp;Python extension&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The Python extension is hardly changed from the original that we discussed above:&lt;/p&gt;
&lt;p&gt;[gist:id=4464c7be4dc40cfe66dc3658059cdc31,file=pyextension.py]&lt;/p&gt;
&lt;p&gt;The only change is I added a parameter to the &lt;tt class="docutils literal"&gt;initialize&lt;/tt&gt; method called &lt;em&gt;from_java&lt;/em&gt;, which if set to True, will prevent
the Python extension from also registering a menu item.  I also changed the reference to get the Context to using a member variable (not sure if this is needed or not, but it seemed cleaner).&lt;/p&gt;
&lt;p&gt;And that's it!  Now, the nice thing is that you can test the Python extension unchanged through the Python interface in Moneydance, and when you're ready, you can
just compile the java extension for deployment.&lt;/p&gt;
&lt;p&gt;Just put this file in &lt;tt class="docutils literal"&gt;src/com/moneydance/modules/features/myextension/python&lt;/tt&gt; (new python subdirectory).&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="compiling"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#toc-entry-11"&gt;5.6&amp;nbsp;&amp;nbsp;&amp;nbsp;Compiling&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Just run &lt;tt class="docutils literal"&gt;ant myextension&lt;/tt&gt; again from your &lt;tt class="docutils literal"&gt;src&lt;/tt&gt; directory and this should rebuild the extension.  And there you go, a Python extension bundled into a .mxt file that can
be installed inside Moneydance permanently!&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content><category term="Tech"></category><category term="python"></category><category term="jython"></category><category term="moneydance"></category></entry><entry><title>PhotoKeeper: Usage guide</title><link href="https://virantha.com/2016/11/07/photokeeper-usage-guide/" rel="alternate"></link><published>2016-11-07T13:21:00-05:00</published><updated>2016-11-07T13:21:00-05:00</updated><author><name>virantha</name></author><id>tag:virantha.com,2016-11-07:/2016/11/07/photokeeper-usage-guide/</id><summary type="html">&lt;div class="contents topic" id="table-of-contents"&gt;
&lt;p class="topic-title"&gt;&lt;a class="reference internal" href="#top"&gt;Table of Contents:&lt;/a&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#features" id="toc-entry-1"&gt;Features&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#usage" id="toc-entry-2"&gt;Usage:&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#examine-files" id="toc-entry-3"&gt;Examine files&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#copy-files-to-a-directory" id="toc-entry-4"&gt;Copy files to a directory&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#upload-files-to-flickr" id="toc-entry-5"&gt;Upload files to Flickr&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#full-help" id="toc-entry-6"&gt;Full help&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#installation" id="toc-entry-7"&gt;Installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#disclaimer" id="toc-entry-8"&gt;Disclaimer&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;p&gt;This script will take a source directory (say the contents of a flash card from a camera),
scan all the image/video file EXIFs, and sort them into date-based folders â€¦&lt;/p&gt;</summary><content type="html">&lt;div class="contents topic" id="table-of-contents"&gt;
&lt;p class="topic-title"&gt;&lt;a class="reference internal" href="#top"&gt;Table of Contents:&lt;/a&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#features" id="toc-entry-1"&gt;Features&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#usage" id="toc-entry-2"&gt;Usage:&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="#examine-files" id="toc-entry-3"&gt;Examine files&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#copy-files-to-a-directory" id="toc-entry-4"&gt;Copy files to a directory&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#upload-files-to-flickr" id="toc-entry-5"&gt;Upload files to Flickr&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#full-help" id="toc-entry-6"&gt;Full help&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#installation" id="toc-entry-7"&gt;Installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#disclaimer" id="toc-entry-8"&gt;Disclaimer&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;p&gt;This script will take a source directory (say the contents of a flash card from a camera),
scan all the image/video file EXIFs, and sort them into date-based folders in a user-specified
directory.  It will optionally only copy files that have not already been copied (deduplication per
folder).  Photo Keeper can also upload all the files to Flickr into the same date-based album
structure, also taking care not to duplicate files.&lt;/p&gt;
&lt;p&gt;At some point, I intend to integrate this with the FlashAir series of cards for auto-uploads directly
from the camera, but that is still a work in progress.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Free and open-source software: ASL2 license&lt;/li&gt;
&lt;li&gt;Blog: &lt;a class="reference external" href="http://virantha.com/category/projects/photokeeper"&gt;http://virantha.com/category/projects/photokeeper&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Documentation: &lt;a class="reference external" href="http://virantha.github.io/photokeeper/html"&gt;http://virantha.github.io/photokeeper/html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Source: &lt;a class="reference external" href="https://github.com/virantha/photokeeper"&gt;https://github.com/virantha/photokeeper&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="section" id="features"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#toc-entry-1"&gt;Features&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Sort image files (JPEG/TIFF) and video files into date-based folders (currently only YYYY-MM-DD format supported)&lt;/li&gt;
&lt;li&gt;Upload images and videos to Flickr into date-based albums&lt;/li&gt;
&lt;li&gt;Avoid duplication of files based on photo taken time, size, and filename&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="usage"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#toc-entry-2"&gt;Usage:&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="examine-files"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#toc-entry-3"&gt;Examine files&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Examine the files in a given source directory (no changes or copying):&lt;/p&gt;
&lt;pre class="literal-block"&gt;
photokeeper SRC_DIR examine
&lt;/pre&gt;
&lt;p&gt;Results in:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
Examining 482 files in /source
100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–‰| 481/482 [00:08&amp;lt;00:00, 59.88file/s]
Found images from 14 days
{   '2016-06-24': 5,
        '2016-07-02': 30,
        '2016-07-03': 12,
        '2016-07-04': 32,
        '2016-07-05': 3,
        '2016-07-21': 1,
        '2016-08-02': 20,
        '2016-08-05': 51,
        '2016-09-30': 13,
        '2016-10-09': 131,
        '2016-10-10': 46,
        '2016-10-29': 91,
        '2016-10-31': 45,
        '2016-11-06': 1}
Total images: 481
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="copy-files-to-a-directory"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#toc-entry-4"&gt;Copy files to a directory&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Copy the files in a given source directory to a target directory with no duplication:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
photokeeper SRC_DIR TGT_DIR dedupe file
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="upload-files-to-flickr"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#toc-entry-5"&gt;Upload files to Flickr&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;First, go to Flickr and get a private key at &lt;a class="reference external" href="http://www.flickr.com/services/api/misc.api_keys.html"&gt;http://www.flickr.com/services/api/misc.api_keys.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Then, create a directory from where you will start photokeeper, and create a file called flickr_api.yaml:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;key&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;YOUR_API_KEY&amp;quot;&lt;/span&gt;
&lt;span class="nt"&gt;secret&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;YOUR_API_SECRET&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now, use the following command:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
photokeeper SRC_DIR TGT_DIR dedupe flickr
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="full-help"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#toc-entry-6"&gt;Full help&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="literal-block"&gt;
Usage:
        photokeeper.py [options] SOURCE_DIR examine
        photokeeper.py [options] SOURCE_DIR TARGET_DIR [dedupe] file
        photokeeper.py [options] SOURCE_DIR [dedupe] flickr
        photokeeper.py [options] SOURCE_DIR TARGET_DIR [dedupe] file flickr
        photokeeper.py [options] SOURCE_DIR TARGET_DIR all
        photokeeper.py --conf=FILE
        photokeeper.py -h

Arguments:
        SOURCE_DIR  Source directory of photos
        TARGET_DIR  Where to copy the image files
        all         Run all steps in the flow (examine,dedupe,flickr,file)
        examine    Examine EXIF tags
        dedupe     Only select files not already present in target directory
        flickr     Upload to flickr
        file       Copy files

Options:
        -h --help        show this message
        -v --verbose     show more information
        -d --debug       show even more information
        --conf=FILE      load options from file
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="installation"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#toc-entry-7"&gt;Installation&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;PhotoKeeper is currently only tested and provided for Python 3.5.  I have no
plans to backport this to Python 2.x as I am shifting all my new development to
3.x exclusively.&lt;/p&gt;
&lt;!-- code-block: bash

$ pip install photokeeper --&gt;
&lt;/div&gt;
&lt;div class="section" id="disclaimer"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#toc-entry-8"&gt;Disclaimer&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The software is distributed on an &amp;quot;AS IS&amp;quot; BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&lt;/p&gt;
&lt;/div&gt;
</content><category term="PhotoKeeper"></category><category term="tech"></category><category term="photokeeper"></category><category term="flashair"></category><category term="flickr"></category><category term="frame"></category><category term="photo"></category><category term="python"></category></entry><entry><title>FundsGather -- A starter framework for scraping financial information</title><link href="https://virantha.com/2016/10/13/funds-gather-framework-for-scraping-financial-information/" rel="alternate"></link><published>2016-10-13T12:16:00-04:00</published><updated>2016-10-13T12:16:00-04:00</updated><author><name>virantha</name></author><id>tag:virantha.com,2016-10-13:/2016/10/13/funds-gather-framework-for-scraping-financial-information/</id><summary type="html">&lt;p&gt;Currently, this program supports downloading transactions from Maryland's 529 College Savings plans and exporting to QIF, for import into your financial software like Quicken,
Banktivity, or MoneyDance.  An OFX/QFX plugin is also in the works.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Free and open-source software: ASL2 license&lt;/li&gt;
&lt;li&gt;Blog: &lt;a class="reference external" href="http://virantha.com/category/projects/funds_gather"&gt;http://virantha.com/category/projects/funds_gather&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Documentation â€¦&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;Currently, this program supports downloading transactions from Maryland's 529 College Savings plans and exporting to QIF, for import into your financial software like Quicken,
Banktivity, or MoneyDance.  An OFX/QFX plugin is also in the works.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Free and open-source software: ASL2 license&lt;/li&gt;
&lt;li&gt;Blog: &lt;a class="reference external" href="http://virantha.com/category/projects/funds_gather"&gt;http://virantha.com/category/projects/funds_gather&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Documentation: &lt;a class="reference external" href="http://virantha.github.io/funds_gather/html"&gt;http://virantha.github.io/funds_gather/html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Source: &lt;a class="reference external" href="https://github.com/virantha/funds_gather"&gt;https://github.com/virantha/funds_gather&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="section" id="features"&gt;
&lt;h2&gt;Features&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Import from web account of Maryland 529 College Savings of all accounts tied to user.&lt;/li&gt;
&lt;li&gt;Export to QIF file.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Right now, the functionality is fairly rudimentary, but I intend to develop this more in the months to come.  Here's my todo list:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Export to QFX/OFX (depending on what my financial software supports, it would be easier to write a plugin for XML compliant format)&lt;/li&gt;
&lt;li&gt;Import other types of transactions (right now, only buys are supported)&lt;/li&gt;
&lt;li&gt;Import other web sites&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="usage"&gt;
&lt;h2&gt;Usage:&lt;/h2&gt;
&lt;p&gt;See help for now:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ funds_gather -h

Usage:
    funds_gather.py [options] &amp;lt;username&amp;gt; &amp;lt;password&amp;gt; all
    funds_gather.py [options] &amp;lt;username&amp;gt; &amp;lt;password&amp;gt; (download|qif)...
    funds_gather.py --conf=FILE
    funds_gather.py -h

Arguments:
    username    Login name
    password    Login password
    all         Run all steps in the flow (download,qif)
    download    Download all transactions from accounts
    qif         Save downloaded transactions to qif

Options:
    -h --help        show this message
    -v --verbose     show more information
    -d --debug       show even more information
    --version        show version
    --out=FILE       output filename [default: out.qif]
    --conf=FILE      load options from file
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="installation"&gt;
&lt;h2&gt;Installation&lt;/h2&gt;
&lt;pre class="literal-block"&gt;
$ pip install funds_gather
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="disclaimer"&gt;
&lt;h2&gt;Disclaimer&lt;/h2&gt;
&lt;p&gt;The software is distributed on an &amp;quot;AS IS&amp;quot; BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&lt;/p&gt;
&lt;/div&gt;
</content><category term="FundsGather"></category><category term="qif"></category><category term="financial"></category><category term="python"></category><category term="scraping"></category></entry><entry><title>Getting started with the Pokemon Trading Card Game (TCG) for parents</title><link href="https://virantha.com/2016/07/06/parent-guide-to-starting-pokemon/" rel="alternate"></link><published>2016-07-06T13:19:00-04:00</published><updated>2016-07-06T13:19:00-04:00</updated><author><name>virantha</name></author><id>tag:virantha.com,2016-07-06:/2016/07/06/parent-guide-to-starting-pokemon/</id><summary type="html">&lt;p&gt;Growing up, I missed the window where Pokemon and its associated card game were
hugely popular; I suppose my parents caught a lucky break, but then again,
they did have to deal with my Transformers and GoBot toys all over the house!&lt;/p&gt;
&lt;p&gt;As of 2016, I'm not sure if Pokemon â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;Growing up, I missed the window where Pokemon and its associated card game were
hugely popular; I suppose my parents caught a lucky break, but then again,
they did have to deal with my Transformers and GoBot toys all over the house!&lt;/p&gt;
&lt;p&gt;As of 2016, I'm not sure if Pokemon is going through a resurgence or not, but
if any of you have
younger school-age offspring like I do, then you may have heard a lot of begging for
learning Pokemon and collecting cards.  Things finally came to a head around my son's
birthday this year, and I had to give in and start looking into this strange and unfamiliar
universe.&lt;/p&gt;
&lt;p&gt;The first challenge is, because it's several decades old, the Pokemon trading card game
has evolved considerably, having sprouted dozens of themes, expansions, and characters.  There's
even a tablet app that lets you play a digital version of the game for free, but my children already get enough
screen time and encouraging this digital playing was the last thing I wanted.
The second challenge is, there isn't really a 'getting started' guide for parents that would ease
one into purchasing the proper cards to learn the rules with a 5 or 6 year old, without investing
a whole lot of time, research, and money.  After a few false steps, here are my thoughts on making this
as painless as possible.&lt;/p&gt;
&lt;div class="contents topic" id="table-of-contents"&gt;
&lt;p class="topic-title"&gt;&lt;a class="reference internal" href="#top"&gt;Table of Contents&lt;/a&gt;&lt;/p&gt;
&lt;ul class="auto-toc simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#your-first-purchase" id="toc-entry-1"&gt;1&amp;nbsp;&amp;nbsp;&amp;nbsp;Your first purchase&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#getting-in-some-virtual-training" id="toc-entry-2"&gt;2&amp;nbsp;&amp;nbsp;&amp;nbsp;Getting in some virtual training&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#expanding-your-deck" id="toc-entry-3"&gt;3&amp;nbsp;&amp;nbsp;&amp;nbsp;Expanding your deck&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#organizing-your-child-s-cards" id="toc-entry-4"&gt;4&amp;nbsp;&amp;nbsp;&amp;nbsp;Organizing your child's cards&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#next-steps" id="toc-entry-5"&gt;5&amp;nbsp;&amp;nbsp;&amp;nbsp;Next steps&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="your-first-purchase"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#toc-entry-1"&gt;1&amp;nbsp;&amp;nbsp;&amp;nbsp;Your first purchase&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Just buy the following starter deck (Trainer Kit)  from Amazon:&lt;/p&gt;
&lt;div&gt;&lt;a class="amazon" href="http://www.amazon.com/gp/product/B01AAUSDVM/ref=as_li_tf_il?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=B01AAUSDVM&amp;linkCode=am2&amp;tag=virantha-20"&gt;&lt;img src="http://images.amazon.com/images/P/B01AAUSDVM.01._SCMZZZZZZZ_.jpg"/&gt;Pokemon TCG: XY Trainer Kit - Pikachu Libre and Suicune&lt;/a&gt;&lt;/div&gt;&lt;p&gt;It's less than $10 so you can inexpensively decide if Pokemon is something you
want to introduce at home.  The kit
comes with a printed sheet of &lt;a class="reference external" href="http://www.pokemon.com/us/pokemon-tcg/rules"&gt;rules to the game&lt;/a&gt;, a plastic
coin for flipping, a game mat that shows where the different piles of cards
should go, game markers, and has a simplified set of 60 cards that are
pre-arranged and split into two 30-card decks for two players.  Even better, it
comes with a detailed walk-through that will get you through several rounds of
play; after spending about 15 minutes on this, I was ready to go through it and
teach it to my son.  After you do this walk-through, you can shuffle the decks
and then play several 'real' games.&lt;/p&gt;
&lt;p&gt;Once you've gotten familiar with the mechanics of the game, then the real fun begins.
The actual game consists of each player having 60 cards each, so you'll need to purchase
more cards to have a two-player game at home that reflects the real game. (You can, of course,
use the cards you already have as a single player 60-card deck)&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="getting-in-some-virtual-training"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#toc-entry-2"&gt;2&amp;nbsp;&amp;nbsp;&amp;nbsp;Getting in some virtual training&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;At this point, if you have an iPad or Android tablet lying around, and you have
some spare time, you should probably download the free Pokemon TCG &lt;a class="reference external" href="https://itunes.apple.com/us/app/pokemon-tcg-online/id841098932?mt=8"&gt;iOS&lt;/a&gt; or
&lt;a class="reference external" href="https://play.google.com/store/apps/details?id=com.pokemon.pokemontcg&amp;amp;hl=en"&gt;Android&lt;/a&gt;
app and play some games on your tablet.  This way, you can see the full game
mechanics for yourself and observe some of the strategy and complexity that
begins to emerge.  You'll have to go to Pokemon's web site and register for an
account to get the most out of this (although the app does let you play as a
guest).  I wouldn't recommend letting your kids play with the apps at this
stage, although you can create child accounts down the road with access
controls.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="expanding-your-deck"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#toc-entry-3"&gt;3&amp;nbsp;&amp;nbsp;&amp;nbsp;Expanding your deck&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Now, on to buying more cards so you can get a full set of two 60-card decks.&lt;/p&gt;
&lt;p&gt;Although you can buy what are called 'booster packs' which contain 10 random character/training cards, at this
stage, it's much better to invest in one of the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;strong&gt;Theme packs&lt;/strong&gt;: Each theme pack comes with a complete 60-card deck that you can use immediately to play with another person.
Here are a few of the more recent ones that you could look into (for about $12 to $16 each).  You could buy one of these
and immediately begin playing the full game with you child.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;div class="first"&gt;&lt;div&gt;&lt;a class="amazon" href="http://www.amazon.com/gp/product/B01CJKRKP6/ref=as_li_tf_il?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=B01CJKRKP6&amp;linkCode=am2&amp;tag=virantha-20"&gt;&lt;img src="http://images.amazon.com/images/P/B01CJKRKP6.01._SCMZZZZZZZ_.jpg"/&gt;XY-Fates Collide Theme Deck&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;div class="first"&gt;&lt;div&gt;&lt;a class="amazon" href="http://www.amazon.com/gp/product/B01A0ZSAM4/ref=as_li_tf_il?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=B01A0ZSAM4&amp;linkCode=am2&amp;tag=virantha-20"&gt;&lt;img src="http://images.amazon.com/images/P/B01A0ZSAM4.01._SCMZZZZZZZ_.jpg"/&gt;XY Break Point Theme Deck&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;div class="first"&gt;&lt;div&gt;&lt;a class="amazon" href="http://www.amazon.com/gp/product/B01ABAHULK/ref=as_li_tf_il?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=B01ABAHULK&amp;linkCode=am2&amp;tag=virantha-20"&gt;&lt;img src="http://images.amazon.com/images/P/B01ABAHULK.01._SCMZZZZZZZ_.jpg"/&gt;Geninja and Luxray double pack (120 cards)&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;div class="first"&gt;&lt;div&gt;&lt;a class="amazon" href="http://www.amazon.com/gp/product/B01E653HKO/ref=as_li_tf_il?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=B01E653HKO&amp;linkCode=am2&amp;tag=virantha-20"&gt;&lt;img src="http://images.amazon.com/images/P/B01E653HKO.01._SCMZZZZZZZ_.jpg"/&gt;Zygarde and Lugia double pack (120 cards)&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;strong&gt;Elite Trainer Box&lt;/strong&gt;: There are basically gift boxes that come with a nice box to organize your cards, ~8 packs of boosters (10 cards each),
and about 45 energy cards (which are included in theme decks, but not in booster packs). They also come with competition-legal
plastic/acrylic dice and markers (nice upgrades to the cardboard ones you got in the starter pack).  They also contain card sleeves
to protect your more expensive/powerful cards.  These boxes are quite a bit more
expensive at list price (~$50), but Amazon has them on sale for a little over $30, which actually makes the price per card around 26 cents,
about the same as buying a theme deck at list price.  Here's a selection of the most recent trainer boxes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;div class="first"&gt;&lt;div&gt;&lt;a class="amazon" href="http://www.amazon.com/gp/product/B01BCRP8ME/ref=as_li_tf_il?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=B01BCRP8ME&amp;linkCode=am2&amp;tag=virantha-20"&gt;&lt;img src="http://images.amazon.com/images/P/B01BCRP8ME.01._SCMZZZZZZZ_.jpg"/&gt;XY-Fates Collide Elite Trainer Box&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;div class="first"&gt;&lt;div&gt;&lt;a class="amazon" href="http://www.amazon.com/gp/product/B017WVBLOI/ref=as_li_tf_il?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=B017WVBLOI&amp;linkCode=am2&amp;tag=virantha-20"&gt;&lt;img src="http://images.amazon.com/images/P/B017WVBLOI.01._SCMZZZZZZZ_.jpg"/&gt;XY Break Point Elite Trainer Box&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;div class="first"&gt;&lt;div&gt;&lt;a class="amazon" href="http://www.amazon.com/gp/product/B016BIQ0ZS/ref=as_li_tf_il?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=B016BIQ0ZS&amp;linkCode=am2&amp;tag=virantha-20"&gt;&lt;img src="http://images.amazon.com/images/P/B016BIQ0ZS.01._SCMZZZZZZZ_.jpg"/&gt;XY Breakthrough Elite Trainer Box&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="organizing-your-child-s-cards"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#toc-entry-4"&gt;4&amp;nbsp;&amp;nbsp;&amp;nbsp;Organizing your child's cards&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Once you start getting more and more decks and booster packs, you'll need a way to keep them organized.
There seem to be two main ways people store them: in special card boxes (like a card catalog or recipe card box),
or in clear poket pages kept in a binder.  The latter seems a little tedious for all but your most precious and/or
rare cards with pretty foil artwork.  So, I'd recomend the following: Keep your decks and booster cards in a travel box,
and keep a binder for special cards.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;strong&gt;Card storage boxes&lt;/strong&gt;:&lt;/p&gt;
&lt;div&gt;&lt;a class="amazon" href="http://www.amazon.com/gp/product/B00WFJJWM6/ref=as_li_tf_il?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=B00WFJJWM6&amp;linkCode=am2&amp;tag=virantha-20"&gt;&lt;img src="http://images.amazon.com/images/P/B00WFJJWM6.01._SCMZZZZZZZ_.jpg"/&gt;Caseling hard case&lt;/a&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;strong&gt;Binder&lt;/strong&gt;:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Pocket pages: &lt;a class="amazon" href="http://www.amazon.com/gp/product/B005HIOVOG?ie=UTF8&amp;linkCode=as2&amp;camp=1634&amp;tag=virantha-20"&gt;Ultra Pro 25 Pages with 9 slots per page&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Binder:&lt;ul&gt;
&lt;li&gt;&lt;a class="amazon" href="http://www.amazon.com/gp/product/B00H4E6QI0?ie=UTF8&amp;linkCode=as2&amp;camp=1634&amp;tag=virantha-20"&gt;Pokemon 2-inch 3-ring binder&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="amazon" href="http://www.amazon.com/gp/product/B014R11CK4?ie=UTF8&amp;linkCode=as2&amp;camp=1634&amp;tag=virantha-20"&gt;Charizard 2-inch 3-ring binder&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="amazon" href="http://www.amazon.com/gp/product/B00X2VIN5I?ie=UTF8&amp;linkCode=as2&amp;camp=1634&amp;tag=virantha-20"&gt;Pikachu 2-inch 3-ring binder&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="next-steps"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#toc-entry-5"&gt;5&amp;nbsp;&amp;nbsp;&amp;nbsp;Next steps&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I'll keep this updated as a I keep learning more (haven't even talked about EX cards, Mega cards, BREAK cards, etc!)  but here are a few resources to follow:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.pokemon.com/us/pokemon-tcg/"&gt;Official Pokemon site&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://geekdad.com/2014/06/guide-to-pokemon-deck-building/"&gt;Parent's guide to Pokemon deck building&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://bulbapedia.bulbagarden.net/wiki/List_of_PokÃ©mon_Trading_Card_Game_expansions"&gt;Chronology of Pokemon deck releases&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</content><category term="Shopping"></category><category term="pokemon"></category></entry><entry><title>Elegant command line parsing in Python using docopt, schema, and yaml</title><link href="https://virantha.com/2016/06/23/elegant-command-line-parsing-in-python/" rel="alternate"></link><published>2016-06-23T14:42:00-04:00</published><updated>2016-06-23T14:42:00-04:00</updated><author><name>virantha</name></author><id>tag:virantha.com,2016-06-23:/2016/06/23/elegant-command-line-parsing-in-python/</id><summary type="html">&lt;p&gt;Both for my work and personal use, I tend to develop many command-line Python
scripts that are very data-driven and configurable.  In Python, it's pretty
trivial to use argparse to support complex argument and option structures, and
then use the integration with configparser to allow one to write files that â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;Both for my work and personal use, I tend to develop many command-line Python
scripts that are very data-driven and configurable.  In Python, it's pretty
trivial to use argparse to support complex argument and option structures, and
then use the integration with configparser to allow one to write files that
capture specific option/configuration values for posterity.  Unfortunately, the
syntax of argparse and configparser tend to be pretty verbose, and incremental
changes after weeks or months long development gaps can be error prone.  In addition,
I find the &lt;tt class="docutils literal"&gt;ini&lt;/tt&gt; syntax of configparser rather limiting.&lt;/p&gt;
&lt;p&gt;In the past year, I've switched over completely to using &lt;a class="reference external" href="http://docopt.org"&gt;docopt&lt;/a&gt;, where you
write the example usage and options in a string inside your script, and it
builds the command-line invocation parser for you automatically.  This is an
incredibly powerful and concise way to write a self-documenting option parser.
Then, you combine that with a data validation library like &lt;a class="reference external" href="https://pypi.python.org/pypi/schema"&gt;schema&lt;/a&gt; to check the
incoming options, and use &lt;a class="reference external" href="http://pyyaml.org"&gt;yaml&lt;/a&gt; to allow for options to be supplied from a text
file, and you're pretty much in option parsing nirvana.&lt;/p&gt;
&lt;p&gt;In this post, I'll go through a script I wrote recently that implements a very
common pattern for anyone in an engineering field:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Take a file that defines an engineering simulation&lt;/li&gt;
&lt;li&gt;Additionally, take another input file that specifies a set of parameters that define different simulation scenarios&lt;/li&gt;
&lt;li&gt;Generate all possible combinations of parameter values&lt;/li&gt;
&lt;li&gt;For each combination, emit the simulation file with the specific parameters&lt;/li&gt;
&lt;li&gt;Execute an external simulator on the simulation file&lt;/li&gt;
&lt;li&gt;Parse the results and log the results in a CSV file&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="contents topic" id="table-of-contents"&gt;
&lt;p class="topic-title"&gt;&lt;a class="reference internal" href="#top"&gt;Table of Contents:&lt;/a&gt;&lt;/p&gt;
&lt;ul class="auto-toc simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#running-parametrized-spice-simulations" id="toc-entry-1"&gt;1&amp;nbsp;&amp;nbsp;&amp;nbsp;Running parametrized SPICE simulations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#setting-up-the-options" id="toc-entry-2"&gt;2&amp;nbsp;&amp;nbsp;&amp;nbsp;Setting up the options&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#validating-options-with-schema" id="toc-entry-3"&gt;3&amp;nbsp;&amp;nbsp;&amp;nbsp;Validating options with schema&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#using-a-configuration-file-to-supply-options" id="toc-entry-4"&gt;4&amp;nbsp;&amp;nbsp;&amp;nbsp;Using a configuration file to supply options&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#loading-in-the-parameters" id="toc-entry-5"&gt;5&amp;nbsp;&amp;nbsp;&amp;nbsp;Loading in the parameters&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#generating-and-running-the-scenarios" id="toc-entry-6"&gt;6&amp;nbsp;&amp;nbsp;&amp;nbsp;Generating and running the scenarios&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#logging-the-results-and-complete-script" id="toc-entry-7"&gt;7&amp;nbsp;&amp;nbsp;&amp;nbsp;Logging the results and complete script&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="running-parametrized-spice-simulations"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#toc-entry-1"&gt;1&amp;nbsp;&amp;nbsp;&amp;nbsp;Running parametrized SPICE simulations&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;For the purposes of this example, I'm going to walk-through a simple script that I've
developed to do parameter exploration of a digital circuit using SPICE (hspice).
The input is a simple spice deck that's a &lt;a class="reference external" href="http://www.makotemplates.org"&gt;Mako&lt;/a&gt; template, and the parameters are
specified in a YAML file.  The script does simulation and logging of results as
two separate flow steps (so you could, for example, re-write the results file based
on a previously run set of simulations).&lt;/p&gt;
&lt;p&gt;Here's the spice file written as a Mako template.  Notice that all the parameters are within the &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;${...}&lt;/span&gt;&lt;/tt&gt; blocks.  We're really not
using any of the advanced features of the templating language (like
conditionals or loops, or even arbitrary python), but it's available if you
need to make more complex simulation files.&lt;/p&gt;
&lt;pre class="code spice literal-block"&gt;
&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;temp&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;temp&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;option&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;brief&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;lib&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;'&lt;/span&gt;&lt;span class="nx"&gt;LIBBFILE&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;l&lt;/span&gt;&lt;span class="err"&gt;'&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;corner&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="nx"&gt;vvdd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;vdd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;vdd&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;subckt&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;xinv&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;out&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nx"&gt;xmp&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;out&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;vdd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;vdd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;pfet&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;w&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;l&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nx"&gt;xmn&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;out&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;nfet&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;w&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;l&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ends&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;xinv&lt;/span&gt;&lt;span class="w"&gt;


&lt;/span&gt;&lt;span class="nx"&gt;xinv_t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;qf&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;qt&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;xinv&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;meas&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;tran&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;StaticCurrentVdd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;avg&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;vdd&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;from&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;to&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;meas&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;tran&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;StaticSupplyPowerVdd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;PARAM&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="err"&gt;'&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;StaticCurrentVdd&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;vdd&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="err"&gt;'&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;tran&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m-Double"&gt;0.005&lt;/span&gt;&lt;span class="nx"&gt;ns&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="nx"&gt;ns&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;sweep&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;monte&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;So, we have the following list of parameters that need to be supplied to this simulation file:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;em&gt;temp&lt;/em&gt; - Circuit simulation temperature&lt;/li&gt;
&lt;li&gt;&lt;em&gt;corner&lt;/em&gt; - Device/transistor corner (e.g. typical, fast, slow, etc)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;vdd&lt;/em&gt; - Simulation voltage&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We'll define these in another file using the YAML syntax like so:&lt;/p&gt;
&lt;pre class="code yaml literal-block"&gt;
&lt;span class="nt"&gt;temp&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l-Scalar-Plain"&gt;85&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l-Scalar-Plain"&gt;125&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nt"&gt;vdd&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l-Scalar-Plain"&gt;0.6&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l-Scalar-Plain"&gt;0.8&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l-Scalar-Plain"&gt;1.0&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nt"&gt;corner&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l-Scalar-Plain"&gt;TT&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l-Scalar-Plain"&gt;FF&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l-Scalar-Plain"&gt;SS&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;Here, we've defined values for the different parameters, and we'd like to
simulate every single combination of these.  So, for example, &lt;tt class="docutils literal"&gt;temp=125,
vdd=0.6, corner=SS&lt;/tt&gt; would be one possible substitution into the simulation
file.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="setting-up-the-options"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#toc-entry-2"&gt;2&amp;nbsp;&amp;nbsp;&amp;nbsp;Setting up the options&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;First, let's start by setting up the usage of this script using &lt;a class="reference external" href="http://docopt.org"&gt;docopt&lt;/a&gt;.&lt;/p&gt;
&lt;!-- :: spice/code_docopt.py
:lexer: python --&gt;
&lt;p&gt;Here's the beauty of docopt: the entire options parsing is defined in the string at the start of the file.
If you just type &lt;tt class="docutils literal"&gt;simulate.py &lt;span class="pre"&gt;-h&lt;/span&gt;&lt;/tt&gt;, you'll get the following output:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Usage:
                simulate.py [options] PARAMFILE SPICEDECK all
                simulate.py [options] PARAMFILE SPICEDECK (sim|log)...

                simulate.py -h

Arguments:
                PARAMFILE   YAML file with variables to iterate over
                SPICEDECK   Mako templated spice deck
                all         Run all steps in the flow
                sim         Run the simulations
                log         Just collate the available results into one file

Options:
                -h --help        show this message
                -v --verbose     show more information
                --rundir=PATH    set path for running simulations in [default: runs]
                --resultsfile=FILE  set filename for writing results to [default: index.txt]
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The script is setup to take in the parameter file (with all the values defined), followed by the simulation spice
template file, followed by the flow step we want to run (either all, or one or more of sim/log).  You can also
optionally set the run directory and the name of the resultsfile.  Here's the output with a valid command line:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;virantha@virantha-macbook-243&amp;gt;&lt;span class="w"&gt; &lt;/span&gt;python&lt;span class="w"&gt; &lt;/span&gt;code_sim.py&lt;span class="w"&gt; &lt;/span&gt;params.yml&lt;span class="w"&gt; &lt;/span&gt;sim.sp&lt;span class="w"&gt; &lt;/span&gt;all
&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;--help&amp;#39;&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;False,
&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;--resultsfile&amp;#39;&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;index.txt&amp;#39;&lt;/span&gt;,
&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;--rundir&amp;#39;&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;runs&amp;#39;&lt;/span&gt;,
&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;--verbose&amp;#39;&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;False,
&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;PARAMFILE&amp;#39;&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;params.yml&amp;#39;&lt;/span&gt;,
&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;SPICEDECK&amp;#39;&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;sim.sp&amp;#39;&lt;/span&gt;,
&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;all&amp;#39;&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;True,
&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;log&amp;#39;&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;,
&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;sim&amp;#39;&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And all the arguments are parsed into a nice dictionary!  One idiosyncracy is that the way we've defined sim/log
as one or more optional keywords, we end up with a counter for each keyword.  So, for example, if we specified
&lt;tt class="docutils literal"&gt;sim&lt;/tt&gt; as a flow step, then &lt;tt class="docutils literal"&gt;all: False, sim: 1&lt;/tt&gt; would appear in our &lt;tt class="docutils literal"&gt;args&lt;/tt&gt; dictionary.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="validating-options-with-schema"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#toc-entry-3"&gt;3&amp;nbsp;&amp;nbsp;&amp;nbsp;Validating options with schema&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Now, let's do some rudimentary checking of the user supplied options.  For example, it would be nice
to make sure that the parameter and spice template file actually exist and are readable, so let's add those
checks using &lt;a class="reference external" href="https://pypi.python.org/pypi/schema"&gt;schema&lt;/a&gt; to validate our dictionary:&lt;/p&gt;
&lt;!-- :: spice/code_schema.py
:lexer: python --&gt;
&lt;p&gt;We've made sure &lt;tt class="docutils literal"&gt;PARAMFILE&lt;/tt&gt; is a file and we've opened and converted it into a file handle, since we'll
be passing that into the yaml loader in the next step.  Next, we've just checked that the spice simulation
file exists; no need to open it since we'll just be passing that off to the Mako template engine in a later
step.&lt;/p&gt;
&lt;p&gt;Very simple, and you can read on the schema docs to add more complex checking of your options.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="using-a-configuration-file-to-supply-options"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#toc-entry-4"&gt;4&amp;nbsp;&amp;nbsp;&amp;nbsp;Using a configuration file to supply options&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Now, let's add in configparser type functionality, except we'll use the yaml syntax for more flexibility.&lt;/p&gt;
&lt;!-- :: spice/code_conffile.py
:lexer: python --&gt;
&lt;p&gt;Now, we can supply options from a configuration file (which takes priority) in YAML format like so:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;--verbose&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;True&lt;/span&gt;
&lt;span class="nt"&gt;SPICEDECK&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;sim2.sp&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Let's call this file &lt;tt class="docutils literal"&gt;conf.yml&lt;/tt&gt;, and now we'll get the following:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;virantha@virantha-macbook-243&amp;gt;&lt;span class="w"&gt; &lt;/span&gt;python&lt;span class="w"&gt; &lt;/span&gt;simulate.py&lt;span class="w"&gt; &lt;/span&gt;params.yml&lt;span class="w"&gt; &lt;/span&gt;sim.sp&lt;span class="w"&gt; &lt;/span&gt;all&lt;span class="w"&gt; &lt;/span&gt;--conf&lt;span class="o"&gt;=&lt;/span&gt;conf.yml
&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;--help&amp;#39;&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;False,
&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;--resultsfile&amp;#39;&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;index.txt&amp;#39;&lt;/span&gt;,
&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;--rundir&amp;#39;&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;runs&amp;#39;&lt;/span&gt;,
&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;--verbose&amp;#39;&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;True,
&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;PARAMFILE&amp;#39;&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;params.yml&amp;#39;&lt;/span&gt;,
&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;SPICEDECK&amp;#39;&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;sim2.sp&amp;#39;&lt;/span&gt;,
&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;all&amp;#39;&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;True,
&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;log&amp;#39;&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;,
&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;sim&amp;#39;&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that the configuration file values take precedence over the command line (you could see this &lt;a class="reference external" href="https://github.com/docopt/docopt/blob/master/examples/config_file_example.py"&gt;example&lt;/a&gt;
to make the command-line take precedence instead).  We've also put in a check to catch any typos in the conf
file by erroring out if an option not specified in the docopt is found.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="loading-in-the-parameters"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#toc-entry-5"&gt;5&amp;nbsp;&amp;nbsp;&amp;nbsp;Loading in the parameters&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Next, let's add in some more option processing and load in the parameters for each simulation scenario from
the &lt;tt class="docutils literal"&gt;PARAMFILE&lt;/tt&gt; argument.&lt;/p&gt;
&lt;!-- :: spice/code_paramfile.py
:lexer: python --&gt;
&lt;p&gt;Notice that we've defined a &lt;a class="reference external" href="http://stackoverflow.com/questions/5121931/in-python-how-can-you-load-yaml-mappings-as-ordereddicts"&gt;custom loader&lt;/a&gt; for reading in the parameter yaml, so that we can keep everything
in an OrderedDict that keeps the same order as present in the YAML file.  While not strictly necessary,
this makes the simulation order predictable for the user.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="generating-and-running-the-scenarios"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#toc-entry-6"&gt;6&amp;nbsp;&amp;nbsp;&amp;nbsp;Generating and running the scenarios&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Now, we'll introduce a generator function that will yield scenarios based on the parameter values.  This
funtion, &lt;tt class="docutils literal"&gt;_get_spice_run&lt;/tt&gt; uses Python's built-in itertools product function to generate the cross-product
of all the parameter values.  Each combination of parameter values is then provided as a &lt;em&gt;context&lt;/em&gt; to
Mako to substitute into the template simulation file (spice deck).  The &lt;tt class="docutils literal"&gt;run&lt;/tt&gt; method just iterates over
this generator function, and calls the &lt;tt class="docutils literal"&gt;run_sim&lt;/tt&gt; method to run the simulator on each scenario.&lt;/p&gt;
&lt;!-- :: spice/code_final.py
:lexer: python --&gt;
&lt;/div&gt;
&lt;div class="section" id="logging-the-results-and-complete-script"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#toc-entry-7"&gt;7&amp;nbsp;&amp;nbsp;&amp;nbsp;Logging the results and complete script&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Now, we just introduce some results parsing and outputting to a CSV file for the &lt;tt class="docutils literal"&gt;log&lt;/tt&gt; flow step, which
gives us our complete script.  Notice that the results CSV output is completely data-driven and based on the
context dictionary provided for each scenario.&lt;/p&gt;
&lt;!-- :: spice/code_final2.py
:lexer: python --&gt;
&lt;/div&gt;
</content><category term="Tech"></category><category term="python"></category><category term="docopt"></category><category term="schema"></category><category term="yaml"></category></entry><entry><title>[UPDATED] Reverse engineering the remote control protocol for the Nissan LEAF (the new Nissan EV protocol)</title><link href="https://virantha.com/2016/04/07/updated-reverse-engineering-nissan-connect-ev-protocol/" rel="alternate"></link><published>2016-04-07T11:00:00-04:00</published><updated>2016-04-07T11:00:00-04:00</updated><author><name>virantha</name></author><id>tag:virantha.com,2016-04-07:/2016/04/07/updated-reverse-engineering-nissan-connect-ev-protocol/</id><summary type="html">&lt;div class="admonition note"&gt;
&lt;p class="first admonition-title"&gt;Note&lt;/p&gt;
&lt;p class="last"&gt;This is an update to my &lt;a class="reference external" href="https://virantha.com/2016/01/12/reverse-engineering-nissan-connect-ev-protocol/"&gt;earlier post on the Nissan Leaf remote telematics&lt;/a&gt;.  Nissan
had taken their API offline in February 2016 to address &lt;a class="reference external" href="http://www.troyhunt.com/2016/02/controlling-vehicle-features-of-nissan.html?m=1"&gt;the security
vulnerabilities&lt;/a&gt;,
and this post details how to connect to the new API that went into place in
early April.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="nissan-connect-ev"&gt;
&lt;h2&gt;1&amp;nbsp;&amp;nbsp;&amp;nbsp;Nissan Connect â€¦&lt;/h2&gt;&lt;/div&gt;</summary><content type="html">&lt;div class="admonition note"&gt;
&lt;p class="first admonition-title"&gt;Note&lt;/p&gt;
&lt;p class="last"&gt;This is an update to my &lt;a class="reference external" href="https://virantha.com/2016/01/12/reverse-engineering-nissan-connect-ev-protocol/"&gt;earlier post on the Nissan Leaf remote telematics&lt;/a&gt;.  Nissan
had taken their API offline in February 2016 to address &lt;a class="reference external" href="http://www.troyhunt.com/2016/02/controlling-vehicle-features-of-nissan.html?m=1"&gt;the security
vulnerabilities&lt;/a&gt;,
and this post details how to connect to the new API that went into place in
early April.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="nissan-connect-ev"&gt;
&lt;h2&gt;1&amp;nbsp;&amp;nbsp;&amp;nbsp;Nissan Connect EV&lt;/h2&gt;
&lt;p&gt;Most of this updated login information is courtesy of users on the MyNissanLeaf portal and specifically &lt;a class="reference external" href="http://www.mynissanleaf.com/viewtopic.php?f=31&amp;amp;t=2214&amp;amp;start=110#p457263"&gt;this post&lt;/a&gt;
The new endpoints are now rooted at '&lt;a class="reference external" href="https://gdcportalgw.its-mo.com/gworchest_0323A/gdc/"&gt;https://gdcportalgw.its-mo.com/gworchest_0323A/gdc/&lt;/a&gt;' instead of '&lt;a class="reference external" href="https://gdcportalgw.its-mo.com/orchestration_1111/gdc/"&gt;https://gdcportalgw.its-mo.com/orchestration_1111/gdc/&lt;/a&gt;', and all accesses are now
POST requests.&lt;/p&gt;
&lt;div class="section" id="initial-login-to-nissan-servers"&gt;
&lt;h3&gt;1.1&amp;nbsp;&amp;nbsp;&amp;nbsp;Initial login to Nissan servers&lt;/h3&gt;
&lt;p&gt;The initial login is now a two step process.&lt;/p&gt;
&lt;div class="section" id="request-an-encryption-key"&gt;
&lt;h4&gt;1.1.1&amp;nbsp;&amp;nbsp;&amp;nbsp;Request an encryption key&lt;/h4&gt;
&lt;p&gt;First, you need to call InitialApp.php with the parameter &lt;tt class="docutils literal"&gt;initial_app_string&lt;/tt&gt; set to &lt;tt class="docutils literal"&gt;geORNtsZe5I4lRGjG9GZiA&lt;/tt&gt; (taken from analyzing the iOS app traffic).&lt;/p&gt;
&lt;blockquote&gt;
&lt;tt class="docutils literal"&gt;curl &lt;span class="pre"&gt;--data&lt;/span&gt; &lt;span class="pre"&gt;&amp;quot;RegionCode=NNA&amp;amp;lg=en-US&amp;amp;initial_app_strings=geORNtsZe5I4lRGjG9GZiA&amp;quot;&lt;/span&gt; &lt;span class="pre"&gt;-X&lt;/span&gt; POST &lt;span class="pre"&gt;&amp;quot;https://gdcportalgw.its-mo.com/gworchest_0323A/gdc/InitialApp.php&amp;quot;&lt;/span&gt;&lt;/tt&gt;&lt;/blockquote&gt;
&lt;p&gt;This returns an encryption key in the parameter &lt;tt class="docutils literal"&gt;baseprm&lt;/tt&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;status&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;message&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;success&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;baseprm&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;uyI5Dj9g8VCOFDnBRUbr3g&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="initial-logon-request"&gt;
&lt;h4&gt;1.1.2&amp;nbsp;&amp;nbsp;&amp;nbsp;Initial logon request&lt;/h4&gt;
&lt;p&gt;Once you have the encryption key, you need to use it to encrypt the user's NissanConnect password using Blowfish ECB with PKCS5Padding.  The encrypted key
is then Base64 encoded, and then also urlencoded before being used in the login API request.   Here's some sample Python code to show what needs to be done, assuming
you have the pycrypto library installed.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;Crypto.Cipher&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Blowfish&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;base64&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;pad_string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;new_str&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;
    &lt;span class="n"&gt;pad_chars&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;pad_chars&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pad_chars&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="n"&gt;new_str&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nb"&gt;chr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pad_chars&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;new_str&lt;/span&gt;

&lt;span class="n"&gt;plaintext&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;YOURPASSWORD&amp;quot;&lt;/span&gt;

&lt;span class="n"&gt;crypt_obj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Blowfish&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;uyI5Dj9g8VCOFDnBRUbr3g&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Blowfish&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;MODE_ECB&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;ciphertext&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;crypt_obj&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;encrypt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pad_string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;plaintext&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Plaintext: &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;plaintext&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Blowfish Cyphertext: &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;ciphertext&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Blowfish base64: &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;base64&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;b64encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ciphertext&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The base64 encoded string can then be used in the following API call:&lt;/p&gt;
&lt;blockquote&gt;
&lt;tt class="docutils literal"&gt;curl &lt;span class="pre"&gt;--data&lt;/span&gt; &lt;span class="pre"&gt;&amp;quot;RegionCode=NNA&amp;amp;lg=en-US&amp;amp;initial_app_strings=geORNtsZe5I4lRGjG9GZiA&amp;amp;UserId=YOUREMAIL&amp;quot;&lt;/span&gt; &lt;span class="pre"&gt;--data-urlencode&lt;/span&gt; &amp;quot;Password=YOURBASE64PASSWORD&amp;quot; &lt;span class="pre"&gt;-X&lt;/span&gt; POST &lt;span class="pre"&gt;&amp;quot;https://gdcportalgw.its-mo.com/gworchest_0323A/gdc/UserLoginRequest.php&amp;quot;&lt;/span&gt;&lt;/tt&gt;&lt;/blockquote&gt;
&lt;p&gt;If successful, you will get back the following JSON, where &lt;tt class="docutils literal"&gt;custom_sessionid&lt;/tt&gt; is what you'll be using for subsequent requests.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;status&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;sessionId&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;XXXXXXXX&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;VehicleInfoList&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;VehicleInfo&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;charger20066&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;false&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;nickname&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;VLeaf&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;telematicsEnabled&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;true&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;vin&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;XXXX&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;vehicleInfo&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;charger20066&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;false&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;nickname&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;VLeaf&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;telematicsEnabled&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;true&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;vin&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;XXXX&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;custom_sessionid&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;XXXX&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;vehicle&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;profile&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;vin&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;XXXX&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;gdcUserId&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;gdcPassword&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;encAuthToken&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;XXXX&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;dcmId&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;XXXX&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;nickname&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;XXXX&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;status&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;ACCEPTED&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;statusDate&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Sep 24, 2015 12:00 AM&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;EncAuthToken&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;XXXX&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;CustomerInfo&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;UserId&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;XXXX&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;Language&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;en-US&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;Timezone&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;America/New_York&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;RegionCode&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;NNA&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;OwnerId&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;XXXX&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;Nickname&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;XXXX&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;Country&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;US&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;VehicleImage&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/content/language/default/images/img/ph_car.jpg&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;UserVehicleBoundDurationSec&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;946771200&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;VehicleInfo&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;VIN&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;XXXX&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;DCMID&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;XXXX&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;SIMID&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;XXXX&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;NAVIID&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;XXXX&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;EncryptedNAVIID&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;XXXX&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;MSN&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;XXXX&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;LastVehicleLoginTime&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;UserVehicleBoundTime&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;2015-09-24T18:10:06Z&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;LastDCMUseTime&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Apr  7, 2016 12:27 PM&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;UserInfoRevisionNo&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="request-current-status"&gt;
&lt;h3&gt;1.2&amp;nbsp;&amp;nbsp;&amp;nbsp;Request current status&lt;/h3&gt;
&lt;p&gt;Request the current battery status (not necessarily the latest, but whatever is cached from the last update on Nissan's server), using the urlencoded &lt;tt class="docutils literal"&gt;custom_session_id&lt;/tt&gt;&lt;/p&gt;
&lt;blockquote&gt;
curl --data &amp;quot;RegionCode=NNA&amp;amp;lg=en-US&amp;amp;DCMID=XXXX&amp;amp;VIN=XXXX&amp;amp;tz=America/New_York&amp;quot; --data-urlencode &amp;quot;custom_sessionid=XXXXXXXXXX&amp;quot; -X POST &amp;quot;&lt;a class="reference external" href="https://gdcportalgw.its-mo.com/gworchest_0323A/gdc/BatteryStatusRecordsRequest.php"&gt;https://gdcportalgw.its-mo.com/gworchest_0323A/gdc/BatteryStatusRecordsRequest.php&lt;/a&gt;&amp;quot;&lt;/blockquote&gt;
&lt;p&gt;Response:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;status&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="nt"&gt;&amp;quot;BatteryStatusRecords&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="nt"&gt;&amp;quot;OperationResult&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;START&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="nt"&gt;&amp;quot;OperationDateAndTime&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Apr  6, 2016 05:57 PM&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="nt"&gt;&amp;quot;BatteryStatus&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;BatteryChargingStatus&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;NORMAL_CHARGING&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;BatteryCapacity&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;12&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;BatteryRemainingAmount&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;9&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;BatteryRemainingAmountWH&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;BatteryRemainingAmountkWH&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="nt"&gt;&amp;quot;PluginState&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;CONNECTED&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="nt"&gt;&amp;quot;CruisingRangeAcOn&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;110760.0&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="nt"&gt;&amp;quot;CruisingRangeAcOff&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;112320.0&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="nt"&gt;&amp;quot;TimeRequiredToFull200_6kW&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;HourRequiredToFull&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;2&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;MinutesRequiredToFull&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;30&amp;quot;&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="nt"&gt;&amp;quot;NotificationDateAndTime&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;2016/04/06 21:58&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="nt"&gt;&amp;quot;TargetDate&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;2016/04/06 21:57&amp;quot;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="update-status"&gt;
&lt;h3&gt;1.3&amp;nbsp;&amp;nbsp;&amp;nbsp;Update status&lt;/h3&gt;
&lt;p&gt;Ask for an update from the car:&lt;/p&gt;
&lt;blockquote&gt;
&lt;tt class="docutils literal"&gt;curl &lt;span class="pre"&gt;--data&lt;/span&gt; &lt;span class="pre"&gt;&amp;quot;RegionCode=NNA&amp;amp;lg=en-US&amp;amp;DCMID=XXXX&amp;amp;VIN=XXXX&amp;amp;tz=America/New_York&amp;quot;&lt;/span&gt; &lt;span class="pre"&gt;--data-urlencode&lt;/span&gt; &amp;quot;custom_sessionid=XXXXXXXXXX&amp;quot; &lt;span class="pre"&gt;-X&lt;/span&gt; POST &lt;span class="pre"&gt;&amp;quot;https://gdcportalgw.its-mo.com/gworchest_0323A/gdc/BatteryStatusCheckRequest.php&amp;quot;&lt;/span&gt;&lt;/tt&gt;&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;status&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;message&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;success&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;userId&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;XXXXXX&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;vin&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;XXXXXXXXX&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;resultKey&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;XXXXXXXXXX&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="err"&gt;%&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The resultKey can be used to poll for when the updated value is available:&lt;/p&gt;
&lt;blockquote&gt;
&lt;tt class="docutils literal"&gt;curl &lt;span class="pre"&gt;--data&lt;/span&gt; &lt;span class="pre"&gt;&amp;quot;RegionCode=NNA&amp;amp;lg=en-US&amp;amp;DCMID=XXXX&amp;amp;VIN=XXXX&amp;amp;tz=America/New_York&amp;amp;resultKey=XXXXXX&amp;quot;&lt;/span&gt; &lt;span class="pre"&gt;--data-urlencode&lt;/span&gt; &amp;quot;custom_sessionid=XXXXXXXXXX&amp;quot; &lt;span class="pre"&gt;-X&lt;/span&gt; POST &lt;span class="pre"&gt;&amp;quot;https://gdcportalgw.its-mo.com/gworchest_0323A/gdc/BatteryStatusCheckResultRequest.php&amp;quot;&lt;/span&gt;&lt;/tt&gt;&lt;/blockquote&gt;
&lt;p&gt;If it's not ready yet:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;status&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;message&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;success&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;responseFlag&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;0&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Once status is updated, you get:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;status&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;message&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;success&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;responseFlag&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;operationResult&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;START&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;timeStamp&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;2016-02-20 20:29:33&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;cruisingRangeAcOn&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;129712.0&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;cruisingRangeAcOff&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;133584.0&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;currentChargeLevel&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;0&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;chargeMode&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;NOT_CHARGING&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;pluginState&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;NOT_CONNECTED&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;charging&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;NO&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;chargeStatus&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;CT&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;batteryDegradation&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;11&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;batteryCapacity&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;12&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;timeRequiredToFull&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:{&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;hours&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;minutes&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;timeRequiredToFull200&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:{&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;hours&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;minutes&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;timeRequiredToFull200_6kW&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:{&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;hours&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;minutes&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="remote-climate-control"&gt;
&lt;h3&gt;1.4&amp;nbsp;&amp;nbsp;&amp;nbsp;Remote Climate Control&lt;/h3&gt;
&lt;div class="section" id="get-current-ac-status"&gt;
&lt;h4&gt;1.4.1&amp;nbsp;&amp;nbsp;&amp;nbsp;Get current AC status&lt;/h4&gt;
&lt;blockquote&gt;
&lt;tt class="docutils literal"&gt;curl &lt;span class="pre"&gt;--data&lt;/span&gt; &lt;span class="pre"&gt;&amp;quot;RegionCode=NNA&amp;amp;lg=en-US&amp;amp;DCMID=XXXX&amp;amp;VIN=XXXX&amp;amp;tz=America/New_York&amp;quot;&lt;/span&gt; &lt;span class="pre"&gt;--data-urlencode&lt;/span&gt; &amp;quot;custom_sessionid=XXXXXXXXXX&amp;quot; &lt;span class="pre"&gt;-X&lt;/span&gt; POST &lt;span class="pre"&gt;&amp;quot;https://gdcportalgw.its-mo.com/gworchest_0323A/gdc/remoteACRecordsRequest.php&amp;quot;&lt;/span&gt;&lt;/tt&gt;&lt;/blockquote&gt;
&lt;p&gt;Response:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;status&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;RemoteACRecords&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;              &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;OperationResult&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;FINISH&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;              &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;OperationDateAndTime&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Apr  6, 2016 07:19 PM&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;              &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;RemoteACOperation&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;STOP&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;              &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;ACStartStopDateAndTime&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Apr  6, 2016 07:19 PM&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;              &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;CruisingRangeAcOn&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;152880.0&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;              &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;CruisingRangeAcOff&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;157248.0&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;              &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;ACStartStopURL&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;              &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;PluginState&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;NOT_CONNECTED&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;              &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;ACDurationBatterySec&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;900&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;              &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;ACDurationPluggedSec&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;7200&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;OperationDateAndTime&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="turn-on-ac"&gt;
&lt;h4&gt;1.4.2&amp;nbsp;&amp;nbsp;&amp;nbsp;Turn on AC&lt;/h4&gt;
&lt;blockquote&gt;
&lt;tt class="docutils literal"&gt;curl &lt;span class="pre"&gt;--data&lt;/span&gt; &lt;span class="pre"&gt;&amp;quot;RegionCode=NNA&amp;amp;lg=en-US&amp;amp;DCMID=XXXX&amp;amp;VIN=XXXX&amp;amp;tz=America/New_York&amp;quot;&lt;/span&gt; &lt;span class="pre"&gt;--data-urlencode&lt;/span&gt; &amp;quot;custom_sessionid=XXXXXXXXXX&amp;quot; &lt;span class="pre"&gt;-X&lt;/span&gt; POST &lt;span class="pre"&gt;&amp;quot;https://gdcportalgw.its-mo.com/gworchest_0323A/gdc/ACRemoteRequest.php&amp;quot;&lt;/span&gt;&lt;/tt&gt;&lt;/blockquote&gt;
&lt;p&gt;Response:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;status&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;userId&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;virantha@gmail.com&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;vin&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;XXXX&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;resultKey&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;XXXXXXXXXXXXXX&amp;quot;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Use the &lt;tt class="docutils literal"&gt;resultKey&lt;/tt&gt; to get the status of the AC request:&lt;/p&gt;
&lt;blockquote&gt;
&lt;tt class="docutils literal"&gt;curl &lt;span class="pre"&gt;--data&lt;/span&gt; &lt;span class="pre"&gt;&amp;quot;RegionCode=NNA&amp;amp;lg=en-US&amp;amp;DCMID=XXXX&amp;amp;VIN=XXXX&amp;amp;tz=America/New_York&amp;amp;resultKey=XXXXXX&amp;quot;&lt;/span&gt; &lt;span class="pre"&gt;--data-urlencode&lt;/span&gt; &amp;quot;custom_sessionid=XXXXXXXXXX&amp;quot; &lt;span class="pre"&gt;-X&lt;/span&gt; POST &lt;span class="pre"&gt;&amp;quot;https://gdcportalgw.its-mo.com/gworchest_0323A/gdc/ACRemoteRsult.php&amp;quot;&lt;/span&gt;&lt;/tt&gt;&lt;/blockquote&gt;
&lt;p&gt;If the status is not ready yet:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;status&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;responseFlag&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;0&amp;quot;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Once the AC is turned on, the following response will be sent:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;status&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;responseFlag&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;operationResult&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;START_BATTERY&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;acContinueTime&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;15&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;cruisingRangeAcOn&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;104720.0&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;cruisingRangeAcOff&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;109208.0&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;timeStamp&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;2016-04-07 16:47:41&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;hvacStatus&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;ON&amp;quot;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="turn-off-ac"&gt;
&lt;h4&gt;1.4.3&amp;nbsp;&amp;nbsp;&amp;nbsp;Turn off AC&lt;/h4&gt;
&lt;blockquote&gt;
&lt;tt class="docutils literal"&gt;curl &lt;span class="pre"&gt;--data&lt;/span&gt; &lt;span class="pre"&gt;&amp;quot;RegionCode=NNA&amp;amp;lg=en-US&amp;amp;DCMID=XXXX&amp;amp;VIN=XXXX&amp;amp;tz=America/New_York&amp;quot;&lt;/span&gt; &lt;span class="pre"&gt;--data-urlencode&lt;/span&gt; &amp;quot;custom_sessionid=XXXXXXXXXX&amp;quot; &lt;span class="pre"&gt;-X&lt;/span&gt; POST &lt;span class="pre"&gt;&amp;quot;https://gdcportalgw.its-mo.com/gworchest_0323A/gdc/ACRemoteOffRequest.php&amp;quot;&lt;/span&gt;&lt;/tt&gt;&lt;/blockquote&gt;
&lt;p&gt;The response checking is identical to the AC on request.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="to-be-continued"&gt;
&lt;h2&gt;2&amp;nbsp;&amp;nbsp;&amp;nbsp;to be continued....&lt;/h2&gt;
&lt;/div&gt;
</content><category term="Tech"></category><category term="LEAF"></category><category term="Nissan"></category></entry><entry><title>An Example Provisioning of HACKT on a Centos 7 VM using Vagrant and Ansible</title><link href="https://virantha.com/2016/03/10/example-provisioning-of-hackt-using-vagrant-ansible/" rel="alternate"></link><published>2016-03-10T10:14:00-05:00</published><updated>2016-03-10T10:14:00-05:00</updated><author><name>virantha</name></author><id>tag:virantha.com,2016-03-10:/2016/03/10/example-provisioning-of-hackt-using-vagrant-ansible/</id><summary type="html">&lt;p&gt;I recently needed to get an open-source circuit toolkit (&lt;a class="reference external" href="https://github.com/fangism/hackt/"&gt;HACKT&lt;/a&gt;)compiled and deployed on my local system. I already knew
the C++ source compiled and installed fine on Linux, and didn't want to jump through the hoops to get it running
on my Mac 10.11 (El Capitan) system, so â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;I recently needed to get an open-source circuit toolkit (&lt;a class="reference external" href="https://github.com/fangism/hackt/"&gt;HACKT&lt;/a&gt;)compiled and deployed on my local system. I already knew
the C++ source compiled and installed fine on Linux, and didn't want to jump through the hoops to get it running
on my Mac 10.11 (El Capitan) system, so I decided to bring up a reproducible build on a VM.  I'd used Ansible in the
past but had forgotten some of the syntax, so I decided to write a simple playbook that would get this done, as well
as document some of the build details required for &lt;a class="reference external" href="https://github.com/fangism/hackt/"&gt;HACKT&lt;/a&gt;.  Some of the details on using Ansible locally on a Vagrant
VM weren't also immediately obvious to me, so this is also an attempt to collate that information for future reference.&lt;/p&gt;
&lt;div class="section" id="install-vagrant-and-ansible"&gt;
&lt;h2&gt;1&amp;nbsp;&amp;nbsp;&amp;nbsp;Install Vagrant and Ansible&lt;/h2&gt;
&lt;p&gt;Vagrant is a nice way to bring up a virtual machine (running through
VirtualBox, for example) from predefined 'boxes'
very easily.  Ansible is a separate provisioning system that lets you easily,
and in a reproducible and documented fashion, customize these virtual machines,
and only requires SSH running on the target system.  Vagrant also ships with
some nice bindings to Ansible, allowing for really easy provisioning of the deployed boxes.
Even more, you don't even need Ansible installed on your local machine as Vagrant will
install it automatically in your virtual machine and execute the provisioning inside it,
which is a really lightweight way to do it.&lt;/p&gt;
&lt;p&gt;I won't go into the details of installing these tools, but they were very
straight-forward to get up and running.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="get-the-vanilla-virtual-machine-up"&gt;
&lt;h2&gt;2&amp;nbsp;&amp;nbsp;&amp;nbsp;Get the vanilla virtual machine up&lt;/h2&gt;
&lt;p&gt;First, just go to a directory where you will be keeping all the files needed to build your
server.  Then, within that directory, do the following:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;vagrant&lt;span class="w"&gt; &lt;/span&gt;init
vagrant&lt;span class="w"&gt; &lt;/span&gt;box&lt;span class="w"&gt; &lt;/span&gt;add&lt;span class="w"&gt; &lt;/span&gt;centos/7
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The first writes a template &lt;tt class="docutils literal"&gt;Vagrantfile&lt;/tt&gt; to your current directory, that will contain
the configuration information for customizing your new VM.  The second command downloads
a pre-built CentOS 7 system from the &lt;a class="reference external" href="https://atlas.hashicorp.com/boxes/search?utm_source=vagrantcloud.com&amp;amp;vagrantcloud=1"&gt;Vagrant community&lt;/a&gt; and stores it in your &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;$HOME/.vagrant.d/boxes&lt;/span&gt;&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;Next, we want to configure and provision our VM that will be brought up from this downloaded image.  So,
edit your Vagrantfile, remove all the crud, and insert the following lines:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="no"&gt;Vagrant&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;configure&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;do&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;box&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;centos/7&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now, run the following command to start your VM:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;vagrant&lt;span class="w"&gt; &lt;/span&gt;up
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This will bring up your new CentOS VM, as well as rsync your current directory to the VM under &lt;tt class="docutils literal"&gt;/home/vagrant/sync&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;You can ssh into the VM by doing:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;vagrant&lt;span class="w"&gt; &lt;/span&gt;ssh
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="getting-ansible-provisioning-working"&gt;
&lt;h2&gt;3&amp;nbsp;&amp;nbsp;&amp;nbsp;Getting Ansible Provisioning working&lt;/h2&gt;
&lt;p&gt;To enable Ansible provisioning inside your , add the following lines to your &lt;tt class="docutils literal"&gt;Vagrantfile&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="no"&gt;Vagrant&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;configure&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;do&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;box&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;centos/7&amp;quot;&lt;/span&gt;

&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;provision&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;ansible_local&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;do&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;ansible&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="n"&gt;ansible&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;provisioning_path&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/home/vagrant/sync&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="n"&gt;ansible&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;playbook&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;playbook.yml&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;tt class="docutils literal"&gt;playbook.yml&lt;/tt&gt; is where we'll write the Ansible instructions (in YAML
format) that will provision this VM. This file should stay in your current
directory, but when Vagrant brings up the VM, it will rsync this file to your
&lt;tt class="docutils literal"&gt;/home/vagrant/sync&lt;/tt&gt; directory inside your VM, so that's why we need the
&lt;tt class="docutils literal"&gt;provisioning_path&lt;/tt&gt; option specified.&lt;/p&gt;
&lt;p&gt;Also note that the configuration to Vagrant is specifying &lt;tt class="docutils literal"&gt;ansible_local&lt;/tt&gt;, which means Vagrant will
install and run Ansible inside the VM.&lt;/p&gt;
&lt;p&gt;Next, we'll build up the &lt;tt class="docutils literal"&gt;playbook.yml&lt;/tt&gt; file step by step.&lt;/p&gt;
&lt;div class="section" id="connection-setting"&gt;
&lt;h3&gt;3.1&amp;nbsp;&amp;nbsp;&amp;nbsp;Connection setting&lt;/h3&gt;
&lt;p&gt;At the top of the file is the connection setings:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nn"&gt;---&lt;/span&gt;
&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;hosts&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;all&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;connection&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;local&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This is all that is needed to run the provisioning locally on the VM.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="setup-some-variables"&gt;
&lt;h3&gt;3.2&amp;nbsp;&amp;nbsp;&amp;nbsp;Setup some variables&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;vars&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;src_dir&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;/home/vagrant/src&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;hackt_dir&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;{{&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;src_dir&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;}}/hackt&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="start-the-tasks-section-and-update-packages"&gt;
&lt;h3&gt;3.3&amp;nbsp;&amp;nbsp;&amp;nbsp;Start the tasks section and update packages&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;tasks&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Update yum&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;yum&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;name=* state=latest&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;sudo&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;true&lt;/span&gt;

&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Install packages&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;yum&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;name=&amp;quot;{{ item }}&amp;quot; state=present&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;sudo&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;true&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;with_items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;@Development&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;tools&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;guile&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;libtool-ltdl-devel&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;wget&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;texinfo&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The nice thing about using Ansible is that the actions are idempotent, so you
can reprovision any number of times and it will keep a consistent state, as well as only
running commands that will end up modifying the current state.&lt;/p&gt;
&lt;p&gt;The other tricky thing here is the quotes when installing packages, especially the syntax
for the &amp;quot;Development tools&amp;quot; group.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="downgrading-bison-version"&gt;
&lt;h3&gt;3.4&amp;nbsp;&amp;nbsp;&amp;nbsp;Downgrading Bison version&lt;/h3&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/fangism/hackt/"&gt;HACKT&lt;/a&gt;, as of this writing, seems to have issues with Bison 2.7 on CentOS7.  The work-around for now
is to downgrade to version 2.3.
First, we &lt;tt class="docutils literal"&gt;yum remove bison&lt;/tt&gt;, download version 2.3, build, and then install it.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Remove newest bison&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;yum&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;name=bison state=removed&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;sudo&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;true&lt;/span&gt;

&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Create src directory&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;file&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;path={{ src_dir }} state=directory&lt;/span&gt;

&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Download old bison for hackt&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;get_url&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;url=http://ftp.gnu.org/gnu/bison/bison-2.3.tar.gz dest={{ src_dir }}&lt;/span&gt;

&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Unzip bison&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;unarchive&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;src={{ src_dir }}/bison-2.3.tar.gz dest={{ src_dir }}&lt;/span&gt;

&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Build and install new bison&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;shell&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;{{&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;item&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;}}&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;args&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;chdir&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;{{&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;src_dir&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;}}/bison-2.3&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;with_items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;./configure&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;make&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;sudo make install&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="building-hackt"&gt;
&lt;h3&gt;3.5&amp;nbsp;&amp;nbsp;&amp;nbsp;Building HACKT&lt;/h3&gt;
&lt;p&gt;Next, we clone the &lt;a class="reference external" href="https://github.com/fangism/hackt/"&gt;HACKT&lt;/a&gt; repository and checkout a specific snapshot, bootstrap, configure, and make.&lt;/p&gt;
&lt;p&gt;The bootstrap step has a &lt;tt class="docutils literal"&gt;creates&lt;/tt&gt; arg in it that doesn't rerun it if the &lt;tt class="docutils literal"&gt;configure&lt;/tt&gt; script is already
there.&lt;/p&gt;
&lt;p&gt;The compiler &lt;tt class="docutils literal"&gt;CXXFLAGS&lt;/tt&gt; does require warnings not to turn into errors because of some unused-typedef
warnings in the current gcc.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Get HACKT&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;git&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;repo=https://github.com/fangism/hackt.git&lt;/span&gt;
&lt;span class="w"&gt;       &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;dest={{ src_dir }}/hackt&lt;/span&gt;
&lt;span class="w"&gt;       &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;version=tags/SNAPSHOT-RELEASE-20141024&lt;/span&gt;

&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Bootstrap HACKT&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;shell&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;./bootstrap&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;args&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;chdir&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;{{&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;hackt_dir&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;}}&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;creates&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;{{&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;hackt_dir&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;}}/configure&amp;quot;&lt;/span&gt;

&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Build HACKT&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;shell&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;{{&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;item&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;}}&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;args&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;chdir&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;{{&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;hackt_dir&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;}}&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;creates&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;/usr/local/bin/hackt&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;with_items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;env CXXFLAGS=&amp;#39;-Wno-error&amp;#39; ./configure&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;make&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;sudo make install&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="final-steps-and-other-tips"&gt;
&lt;h2&gt;4&amp;nbsp;&amp;nbsp;&amp;nbsp;Final steps and other tips&lt;/h2&gt;
&lt;p&gt;And that's basically it, for a very simple provisioning system.  Ansible has some really cool
features that we haven't touched on here, and it's probably a good idea to breakdown the playbook
into a more hierarchical structure.  But for now, here's the complete playbook:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nn"&gt;---&lt;/span&gt;
&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;hosts&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;all&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;connection&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;local&lt;/span&gt;

&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;vars&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;src_dir&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;/home/vagrant/src&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;hackt_dir&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;{{&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;src_dir&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;}}/hackt&amp;quot;&lt;/span&gt;

&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;tasks&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Update yum&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;yum&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;name=* state=latest&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;sudo&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;true&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Install packages&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;yum&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;name=&amp;quot;{{ item }}&amp;quot; state=present&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;sudo&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;true&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;with_items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;@Development&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;tools&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;guile&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;libtool-ltdl-devel&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;wget&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;texinfo&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Remove newest bison&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;yum&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;name=bison state=removed&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;sudo&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;true&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Create src directory&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;file&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;path={{ src_dir }} state=directory&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Download old bison for hackt&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;get_url&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;url=http://ftp.gnu.org/gnu/bison/bison-2.3.tar.gz dest={{ src_dir }}&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Unzip bison&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;unarchive&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;src={{ src_dir }}/bison-2.3.tar.gz dest={{ src_dir }}&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Build and install new bison&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;shell&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;{{&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;item&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;}}&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;args&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="nt"&gt;chdir&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;{{&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;src_dir&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;}}/bison-2.3&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;with_items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;./configure&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;make&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;sudo make install&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Get HACKT&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;git&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;repo=https://github.com/fangism/hackt.git&lt;/span&gt;
&lt;span class="w"&gt;           &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;dest={{ src_dir }}/hackt&lt;/span&gt;
&lt;span class="w"&gt;           &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;version=tags/SNAPSHOT-RELEASE-20141024&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Bootstrap HACKT&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;shell&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;./bootstrap&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;args&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="nt"&gt;chdir&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;{{&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;hackt_dir&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;}}&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="nt"&gt;creates&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;{{&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;hackt_dir&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;}}/configure&amp;quot;&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Build HACKT&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;shell&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;{{&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;item&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;}}&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;args&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="nt"&gt;chdir&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;{{&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;hackt_dir&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;}}&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;with_items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;env CXXFLAGS=&amp;#39;-Wno-error&amp;#39; ./configure&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;make&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;sudo make install&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Some further useful commands and tips are below.&lt;/p&gt;
&lt;div class="section" id="utility-commands"&gt;
&lt;h3&gt;4.1&amp;nbsp;&amp;nbsp;&amp;nbsp;Utility commands&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;em&gt;vagrant suspend&lt;/em&gt; - Shuts down but saves state on the disk&lt;/li&gt;
&lt;li&gt;&lt;em&gt;vagrant resume&lt;/em&gt;  - Resumes the suspended VM&lt;/li&gt;
&lt;li&gt;&lt;em&gt;vagrant halt&lt;/em&gt;    - Shutdown&lt;/li&gt;
&lt;li&gt;&lt;em&gt;vagrant destroy&lt;/em&gt; - Destroy all the customizations and disk&lt;/li&gt;
&lt;li&gt;&lt;em&gt;vagrant reload --provision&lt;/em&gt; - Restart a running VM after making changes to Vagrantfile&lt;/li&gt;
&lt;li&gt;&lt;em&gt;vagrant provision&lt;/em&gt; - Rerun the provisioning on a running VM&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="sharing-files"&gt;
&lt;h3&gt;4.2&amp;nbsp;&amp;nbsp;&amp;nbsp;Sharing files&lt;/h3&gt;
&lt;p&gt;I wasn't able to get the NFS shares working, but just stuck to the simple rsync option where a directory
on the host can be copied to your VM on bootup/reload.  Just add the following line to your Vagrantfile:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;synced_folder&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;share&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/share/dev&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;rsync&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This will copy your &lt;tt class="docutils literal"&gt;share/&lt;/tt&gt; subdirectory to the VM's &lt;tt class="docutils literal"&gt;/share/dev&lt;/tt&gt; directory&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content><category term="Tech"></category><category term="virtualization"></category><category term="vagrant"></category><category term="ansible"></category></entry><entry><title>Reverse engineering the remote control protocol for the Nissan LEAF (the new Nissan EV protocol)</title><link href="https://virantha.com/2016/01/12/reverse-engineering-nissan-connect-ev-protocol/" rel="alternate"></link><published>2016-01-12T10:14:00-05:00</published><updated>2016-01-12T10:14:00-05:00</updated><author><name>virantha</name></author><id>tag:virantha.com,2016-01-12:/2016/01/12/reverse-engineering-nissan-connect-ev-protocol/</id><summary type="html">&lt;div class="section" id="nissan-connect-ev"&gt;
&lt;h2&gt;1&amp;nbsp;&amp;nbsp;&amp;nbsp;Nissan Connect EV&lt;/h2&gt;
&lt;div class="admonition note"&gt;
&lt;p class="first admonition-title"&gt;Note&lt;/p&gt;
&lt;p class="last"&gt;&lt;em&gt;Update April 2016&lt;/em&gt;:  Nissan has updated their API calls to actually use the user login information to authenticate instead of just the VIN.
You can see a summary of the newer API in my new post &lt;a class="reference external" href="https://virantha.com/2016/04/07/updated-reverse-engineering-nissan-connect-ev-protocol/"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;For those of you with a Nissan LEAF â€¦&lt;/p&gt;&lt;/div&gt;</summary><content type="html">&lt;div class="section" id="nissan-connect-ev"&gt;
&lt;h2&gt;1&amp;nbsp;&amp;nbsp;&amp;nbsp;Nissan Connect EV&lt;/h2&gt;
&lt;div class="admonition note"&gt;
&lt;p class="first admonition-title"&gt;Note&lt;/p&gt;
&lt;p class="last"&gt;&lt;em&gt;Update April 2016&lt;/em&gt;:  Nissan has updated their API calls to actually use the user login information to authenticate instead of just the VIN.
You can see a summary of the newer API in my new post &lt;a class="reference external" href="https://virantha.com/2016/04/07/updated-reverse-engineering-nissan-connect-ev-protocol/"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;For those of you with a Nissan LEAF, the first cool things you get for free with the car is remote telematics via a web interface or a iOS or Android application.
The car has a built-in cellular modem that can be used to get all kinds of neat stats from the car (like miles driven, energy consumption, efficiency, etc), as well
as send map directions and enable/disable the charging and the climate control.  In the latter part of 2015, Nissan revamped their Carwings servers which provided these
services, and they appear to be combining it with their general telematics interfaces across all their car models.  The new application now talks to a different
REST endpoint and I could find scant documentation on this, so I decided to try my hand at reverse-engineering what the new Nissan EV application is doing.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="older-api"&gt;
&lt;h2&gt;2&amp;nbsp;&amp;nbsp;&amp;nbsp;Older API&lt;/h2&gt;
&lt;p&gt;The following pages and threads have an outdated API:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.mynissanleaf.com/viewtopic.php?f=27&amp;amp;t=2214&amp;amp;start=70"&gt;http://www.mynissanleaf.com/viewtopic.php?f=27&amp;amp;t=2214&amp;amp;start=70&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/haykinson/pycarwings"&gt;https://github.com/haykinson/pycarwings&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Pycarwings actually works, but uses the original API.  The forum thread then
details an updated REST endpoint (v3) but I could never get the authenticate to
take (possibly, I was using the wrong type of headers).&lt;/p&gt;
&lt;p&gt;So the next step was to actually sniff the requests coming out of the Nissan EV
Connect app using a man-in-the-middle-proxy.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="first-steps-to-analyzing-the-nissan-ev-network-traffic"&gt;
&lt;h2&gt;3&amp;nbsp;&amp;nbsp;&amp;nbsp;First steps to analyzing the Nissan EV network traffic&lt;/h2&gt;
&lt;div class="section" id="installing-the-proxy-to-view-the-nissan-ev-ios-app-headers"&gt;
&lt;h3&gt;3.1&amp;nbsp;&amp;nbsp;&amp;nbsp;Installing the proxy to view the Nissan EV iOS app headers&lt;/h3&gt;
&lt;p&gt;I followed the instructions on using &lt;a class="reference external" href="http://jasdev.me/intercepting-ios-traffic/"&gt;mitmproxy here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Of course, just doing:&lt;/p&gt;
&lt;blockquote&gt;
pip install mitmproxy&lt;/blockquote&gt;
&lt;p&gt;unfortunately did not work on my mac running El Capitan, so I had to diagnose the following errors:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;lxml compilation failed, so I realized I had to reinstall the xcode command line tools after upgrading to El Capitan by doing &lt;cite&gt;xcode-select --install&lt;/cite&gt;&lt;/li&gt;
&lt;li&gt;Then, it couldn't find the openssl headers to install the crytography package.   So I had to read up on how El Capitan had &lt;a class="reference external" href="https://github.com/pyca/cryptography/issues/2350"&gt;deprecated the standard openssl headers&lt;/a&gt;. tldr; run &lt;cite&gt;env LDFLAGS=&amp;quot;-L$(brew --prefix openssl)/lib&amp;quot; CFLAGS=&amp;quot;-I$(brew --prefix openssl)/include&amp;quot; pip install mitmproxy&lt;/cite&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Then, it was a matter of running &lt;cite&gt;mitmproxy&lt;/cite&gt; and setting my iOS device to use a manual proxy on port 8080 pointing to my mac.  Then, you browse to the mitm.it using safari and install the
appropriate certificate for your device.  Then I launched the Nissan EV application and started looking at the traffic. (note to self, in order to copy text from the mitmproxy screen,
you need to hold &lt;cite&gt;fn+option&lt;/cite&gt; down as you select)&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="rest-requests"&gt;
&lt;h3&gt;3.2&amp;nbsp;&amp;nbsp;&amp;nbsp;REST requests&lt;/h3&gt;
&lt;p&gt;The request/responses appear to be pretty straight-forward.  On my initial reading, curiously, it seems like you just need the constant DCMID and VIN fields from the
login for subsequent requests.  There doesn't appear to be any session based authentication token used.&lt;/p&gt;
&lt;div class="section" id="initial-login-to-nissan-servers"&gt;
&lt;h4&gt;3.2.1&amp;nbsp;&amp;nbsp;&amp;nbsp;Initial login to Nissan servers&lt;/h4&gt;
&lt;p&gt;Initial logon request, where USERID is your Nissan Portal login (email address) and USERPASSWORD is the accompanying password:&lt;/p&gt;
&lt;blockquote&gt;
&lt;a class="reference external" href="https://gdcportalgw.its-mo.com/orchestration_1111/gdc/UserLoginRequest.php?RegionCode=NNA&amp;amp;lg=en-US&amp;amp;DCMID=&amp;amp;VIN=&amp;amp;tz=&amp;amp;UserId=USERID&amp;amp;Password=USERPASSWORD"&gt;https://gdcportalgw.its-mo.com/orchestration_1111/gdc/UserLoginRequest.php?RegionCode=NNA&amp;amp;lg=en-US&amp;amp;DCMID=&amp;amp;VIN=&amp;amp;tz=&amp;amp;UserId=USERID&amp;amp;Password=USERPASSWORD&lt;/a&gt;&lt;/blockquote&gt;
&lt;p&gt;Results in:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;CustomerInfo&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;Country&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;US&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;Language&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;en-US&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;Nickname&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;XXXXXXXXX&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;OwnerId&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;XXXXXXXXXX&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;RegionCode&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;NNA&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;Timezone&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;America/New_York&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;UserId&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;XXXXXX&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;UserVehicleBoundDurationSec&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;946771200&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;VehicleImage&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/content/language/default/ima&lt;/span&gt;
&lt;span class="s2"&gt;                &amp;quot;&lt;/span&gt;&lt;span class="err"&gt;VehicleI&lt;/span&gt;&lt;span class="kc"&gt;nf&lt;/span&gt;&lt;span class="err"&gt;o&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;: {&lt;/span&gt;
&lt;span class="s2"&gt;                        &amp;quot;&lt;/span&gt;&lt;span class="err"&gt;DCMID&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;: &amp;quot;&lt;/span&gt;&lt;span class="err"&gt;XXXXXXXXXXXX&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;,&lt;/span&gt;
&lt;span class="s2"&gt;                        &amp;quot;&lt;/span&gt;&lt;span class="err"&gt;E&lt;/span&gt;&lt;span class="kc"&gt;n&lt;/span&gt;&lt;span class="err"&gt;cryp&lt;/span&gt;&lt;span class="kc"&gt;te&lt;/span&gt;&lt;span class="err"&gt;dNAVIID&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;: &amp;quot;&lt;/span&gt;&lt;span class="err"&gt;XXXXXXXXXXXXXXXXXXXXXX&lt;/span&gt;
&lt;span class="w"&gt;                        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;LastDCMUseTime&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Jan 12, 2016 03:37 PM&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;LastVehicleLoginTime&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;MSN&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;XXXXXXXXXXXXXXX&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;NAVIID&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;XXXXXXXXXXXX&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;SIMID&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;XXXXXXXXXXXXXXXXXXX&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;UserVehicleBoundTime&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;2015-09-24T18:10:&lt;/span&gt;
&lt;span class="s2"&gt;                        &amp;quot;&lt;/span&gt;&lt;span class="err"&gt;VIN&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;: &amp;quot;&lt;/span&gt;&lt;span class="err"&gt;XXXXXXXXXXXXXXXXX&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="s2"&gt;                }&lt;/span&gt;
&lt;span class="s2"&gt;        },&lt;/span&gt;
&lt;span class="s2"&gt;        &amp;quot;&lt;/span&gt;&lt;span class="err"&gt;E&lt;/span&gt;&lt;span class="kc"&gt;n&lt;/span&gt;&lt;span class="err"&gt;cAu&lt;/span&gt;&lt;span class="kc"&gt;t&lt;/span&gt;&lt;span class="err"&gt;hToke&lt;/span&gt;&lt;span class="kc"&gt;n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;: &amp;quot;&lt;/span&gt;&lt;span class="err"&gt;XXXXXXXXXXXXXXXXXXXXXXXXXXXXX&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;,&lt;/span&gt;
&lt;span class="s2"&gt;        &amp;quot;&lt;/span&gt;&lt;span class="err"&gt;UserI&lt;/span&gt;&lt;span class="kc"&gt;nf&lt;/span&gt;&lt;span class="err"&gt;oRevisio&lt;/span&gt;&lt;span class="kc"&gt;n&lt;/span&gt;&lt;span class="err"&gt;No&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;: &amp;quot;&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;,&lt;/span&gt;
&lt;span class="s2"&gt;        &amp;quot;&lt;/span&gt;&lt;span class="err"&gt;VehicleI&lt;/span&gt;&lt;span class="kc"&gt;nf&lt;/span&gt;&lt;span class="err"&gt;oLis&lt;/span&gt;&lt;span class="kc"&gt;t&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;: {&lt;/span&gt;
&lt;span class="s2"&gt;                &amp;quot;&lt;/span&gt;&lt;span class="err"&gt;VehicleI&lt;/span&gt;&lt;span class="kc"&gt;nf&lt;/span&gt;&lt;span class="err"&gt;o&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;: [&lt;/span&gt;
&lt;span class="s2"&gt;                        {&lt;/span&gt;
&lt;span class="s2"&gt;                                &amp;quot;&lt;/span&gt;&lt;span class="err"&gt;charger&lt;/span&gt;&lt;span class="mi"&gt;20066&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;: &amp;quot;&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;,&lt;/span&gt;
&lt;span class="s2"&gt;                                &amp;quot;&lt;/span&gt;&lt;span class="kc"&gt;n&lt;/span&gt;&lt;span class="err"&gt;ick&lt;/span&gt;&lt;span class="kc"&gt;na&lt;/span&gt;&lt;span class="err"&gt;me&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;: &amp;quot;&lt;/span&gt;&lt;span class="err"&gt;VLea&lt;/span&gt;&lt;span class="kc"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;,&lt;/span&gt;
&lt;span class="s2"&gt;                                &amp;quot;&lt;/span&gt;&lt;span class="kc"&gt;tele&lt;/span&gt;&lt;span class="err"&gt;ma&lt;/span&gt;&lt;span class="kc"&gt;t&lt;/span&gt;&lt;span class="err"&gt;icsE&lt;/span&gt;&lt;span class="kc"&gt;na&lt;/span&gt;&lt;span class="err"&gt;bled&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;: &amp;quot;&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;,&lt;/span&gt;
&lt;span class="s2"&gt;                                &amp;quot;&lt;/span&gt;&lt;span class="err"&gt;vi&lt;/span&gt;&lt;span class="kc"&gt;n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;: &amp;quot;&lt;/span&gt;&lt;span class="err"&gt;XXXXXXXXXXXXXXXXX&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="s2"&gt;                        }&lt;/span&gt;
&lt;span class="s2"&gt;                ],&lt;/span&gt;
&lt;span class="s2"&gt;                &amp;quot;&lt;/span&gt;&lt;span class="err"&gt;vehicleI&lt;/span&gt;&lt;span class="kc"&gt;nf&lt;/span&gt;&lt;span class="err"&gt;o&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;: [&lt;/span&gt;
&lt;span class="s2"&gt;                        {&lt;/span&gt;
&lt;span class="s2"&gt;                                &amp;quot;&lt;/span&gt;&lt;span class="err"&gt;charger&lt;/span&gt;&lt;span class="mi"&gt;20066&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;: &amp;quot;&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;,&lt;/span&gt;
&lt;span class="s2"&gt;                                &amp;quot;&lt;/span&gt;&lt;span class="kc"&gt;n&lt;/span&gt;&lt;span class="err"&gt;ick&lt;/span&gt;&lt;span class="kc"&gt;na&lt;/span&gt;&lt;span class="err"&gt;me&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;: &amp;quot;&lt;/span&gt;&lt;span class="err"&gt;VLea&lt;/span&gt;&lt;span class="kc"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;,&lt;/span&gt;
&lt;span class="s2"&gt;                                &amp;quot;&lt;/span&gt;&lt;span class="kc"&gt;tele&lt;/span&gt;&lt;span class="err"&gt;ma&lt;/span&gt;&lt;span class="kc"&gt;t&lt;/span&gt;&lt;span class="err"&gt;icsE&lt;/span&gt;&lt;span class="kc"&gt;na&lt;/span&gt;&lt;span class="err"&gt;bled&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;: &amp;quot;&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;,&lt;/span&gt;
&lt;span class="s2"&gt;                                &amp;quot;&lt;/span&gt;&lt;span class="err"&gt;vi&lt;/span&gt;&lt;span class="kc"&gt;n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;: &amp;quot;&lt;/span&gt;&lt;span class="err"&gt;XXXXXXXXXXXXXXXXX&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="s2"&gt;                        }&lt;/span&gt;
&lt;span class="s2"&gt;                ]&lt;/span&gt;
&lt;span class="s2"&gt;        },&lt;/span&gt;
&lt;span class="s2"&gt;        &amp;quot;&lt;/span&gt;&lt;span class="err"&gt;message&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;: &amp;quot;&lt;/span&gt;&lt;span class="err"&gt;success&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;,&lt;/span&gt;
&lt;span class="s2"&gt;        &amp;quot;&lt;/span&gt;&lt;span class="err"&gt;sessio&lt;/span&gt;&lt;span class="kc"&gt;n&lt;/span&gt;&lt;span class="err"&gt;Id&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;: &amp;quot;&lt;/span&gt;&lt;span class="mi"&gt;43978&lt;/span&gt;&lt;span class="kc"&gt;f&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="err"&gt;b&lt;/span&gt;&lt;span class="mf"&gt;-e45&lt;/span&gt;&lt;span class="err"&gt;c&lt;/span&gt;&lt;span class="mi"&gt;-498&lt;/span&gt;&lt;span class="err"&gt;c&lt;/span&gt;&lt;span class="mi"&gt;-&lt;/span&gt;&lt;span class="err"&gt;a&lt;/span&gt;&lt;span class="mf"&gt;9e5-&lt;/span&gt;&lt;span class="err"&gt;be&lt;/span&gt;&lt;span class="mf"&gt;85e59&lt;/span&gt;&lt;span class="err"&gt;d&lt;/span&gt;&lt;span class="kc"&gt;f&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="err"&gt;dc&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;,&lt;/span&gt;
&lt;span class="s2"&gt;        &amp;quot;&lt;/span&gt;&lt;span class="err"&gt;s&lt;/span&gt;&lt;span class="kc"&gt;tatus&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;: 200,&lt;/span&gt;
&lt;span class="s2"&gt;        &amp;quot;&lt;/span&gt;&lt;span class="err"&gt;vehicle&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;: {&lt;/span&gt;
&lt;span class="s2"&gt;                &amp;quot;&lt;/span&gt;&lt;span class="err"&gt;pro&lt;/span&gt;&lt;span class="kc"&gt;f&lt;/span&gt;&lt;span class="err"&gt;ile&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;: {&lt;/span&gt;
&lt;span class="s2"&gt;                        &amp;quot;&lt;/span&gt;&lt;span class="err"&gt;dcmId&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;: &amp;quot;&lt;/span&gt;&lt;span class="err"&gt;XXXXXXXXXXXX&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;,&lt;/span&gt;
&lt;span class="s2"&gt;                        &amp;quot;&lt;/span&gt;&lt;span class="err"&gt;e&lt;/span&gt;&lt;span class="kc"&gt;n&lt;/span&gt;&lt;span class="err"&gt;cAu&lt;/span&gt;&lt;span class="kc"&gt;t&lt;/span&gt;&lt;span class="err"&gt;hToke&lt;/span&gt;&lt;span class="kc"&gt;n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;: &amp;quot;&lt;/span&gt;&lt;span class="err"&gt;XXXXXXXXXXXXXXXXXXXXXXXXX&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;,&lt;/span&gt;
&lt;span class="s2"&gt;                        &amp;quot;&lt;/span&gt;&lt;span class="err"&gt;gdcPassword&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;: &amp;quot;&lt;/span&gt;&lt;span class="err"&gt;XXXXXXXX&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;,&lt;/span&gt;
&lt;span class="s2"&gt;                        &amp;quot;&lt;/span&gt;&lt;span class="err"&gt;gdcUserId&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;: &amp;quot;&lt;/span&gt;&lt;span class="err"&gt;XXXXXXXX&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;,&lt;/span&gt;
&lt;span class="s2"&gt;                        &amp;quot;&lt;/span&gt;&lt;span class="kc"&gt;n&lt;/span&gt;&lt;span class="err"&gt;ick&lt;/span&gt;&lt;span class="kc"&gt;na&lt;/span&gt;&lt;span class="err"&gt;me&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;: &amp;quot;&lt;/span&gt;&lt;span class="err"&gt;XXXXXXXXX&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;,&lt;/span&gt;
&lt;span class="s2"&gt;                        &amp;quot;&lt;/span&gt;&lt;span class="err"&gt;s&lt;/span&gt;&lt;span class="kc"&gt;tatus&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;: &amp;quot;&lt;/span&gt;&lt;span class="err"&gt;ACCEPTED&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;,&lt;/span&gt;
&lt;span class="s2"&gt;                        &amp;quot;&lt;/span&gt;&lt;span class="err"&gt;s&lt;/span&gt;&lt;span class="kc"&gt;tatus&lt;/span&gt;&lt;span class="err"&gt;Da&lt;/span&gt;&lt;span class="kc"&gt;te&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;: &amp;quot;&lt;/span&gt;&lt;span class="err"&gt;Sep&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;24&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2015&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;00&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;AM&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;,&lt;/span&gt;
&lt;span class="s2"&gt;                        &amp;quot;&lt;/span&gt;&lt;span class="err"&gt;vi&lt;/span&gt;&lt;span class="kc"&gt;n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;: &amp;quot;&lt;/span&gt;&lt;span class="err"&gt;XXXXXXXXXXXXXXXXX&amp;quot;&lt;/span&gt;
&lt;span class="err"&gt;                }&lt;/span&gt;
&lt;span class="err"&gt;        }&lt;/span&gt;
&lt;span class="err"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="request-current-status"&gt;
&lt;h4&gt;3.2.2&amp;nbsp;&amp;nbsp;&amp;nbsp;Request current status&lt;/h4&gt;
&lt;p&gt;Request an update on the battery status:&lt;/p&gt;
&lt;blockquote&gt;
&lt;a class="reference external" href="https://gdcportalgw.its-mo.com/orchestration_1111/gdc/BatteryStatusRecordsRequest.php?RegionCode=NNA&amp;amp;lg=en-US&amp;amp;DCMID=XXXXXXXXXXXX&amp;amp;VIN=XXXXXXXXXXXXXXXXX&amp;amp;tz=America/New_York&amp;amp;TimeFrom=2015-09-24T18:10:06"&gt;https://gdcportalgw.its-mo.com/orchestration_1111/gdc/BatteryStatusRecordsRequest.php?RegionCode=NNA&amp;amp;lg=en-US&amp;amp;DCMID=XXXXXXXXXXXX&amp;amp;VIN=XXXXXXXXXXXXXXXXX&amp;amp;tz=America/New_York&amp;amp;TimeFrom=2015-09-24T18:10:06&lt;/a&gt;&lt;/blockquote&gt;
&lt;p&gt;Response:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;BatteryStatusRecords&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;BatteryStatus&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;                        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;BatteryCapacity&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;12&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;BatteryChargingStatus&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;NOT_CHARGING&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;BatteryRemainingAmount&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;11&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;BatteryRemainingAmountWH&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;BatteryRemainingAmountkWH&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;CruisingRangeAcOff&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;133840.0&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;CruisingRangeAcOn&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;122368.0&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;NotificationDateAndTime&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;2016/01/12 15:37&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;OperationDateAndTime&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Jan 12, 2016 10:37 AM&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;OperationResult&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;START&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;PluginState&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;NOT_CONNECTED&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;TargetDate&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;2016/01/12 15:37&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;TimeRequiredToFull&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;                        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;HourRequiredToFull&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;3&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;MinutesRequiredToFull&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;30&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;TimeRequiredToFull200&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;                        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;HourRequiredToFull&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;2&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;MinutesRequiredToFull&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;0&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;TimeRequiredToFull200_6kW&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;                        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;HourRequiredToFull&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;2&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;MinutesRequiredToFull&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;0&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;message&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;success&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;status&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="update-status"&gt;
&lt;h4&gt;3.2.3&amp;nbsp;&amp;nbsp;&amp;nbsp;Update status&lt;/h4&gt;
&lt;p&gt;Ask for an update from the car:&lt;/p&gt;
&lt;blockquote&gt;
&lt;a class="reference external" href="https://gdcportalgw.its-mo.com/orchestration_1111/gdc/BatteryStatusCheckRequest.php?RegionCode=NNA&amp;amp;lg=en-US&amp;amp;DCMID=XXXXXXXXXXXX&amp;amp;VIN=XXXXXXXXXXXXXXXXX&amp;amp;tz=America/New_York"&gt;https://gdcportalgw.its-mo.com/orchestration_1111/gdc/BatteryStatusCheckRequest.php?RegionCode=NNA&amp;amp;lg=en-US&amp;amp;DCMID=XXXXXXXXXXXX&amp;amp;VIN=XXXXXXXXXXXXXXXXX&amp;amp;tz=America/New_York&lt;/a&gt;&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;status&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;message&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;success&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;userId&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;XXXXXX&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;vin&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;XXXXXXXXX&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;resultKey&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;XXXXXXXXXX&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="err"&gt;%&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The resultKey can be used to poll for when the updated value is available:&lt;/p&gt;
&lt;blockquote&gt;
&lt;a class="reference external" href="https://gdcportalgw.its-mo.com/orchestration_1111/gdc/BatteryStatusCheckResultRequest.php?RegionCode=NNA&amp;amp;lg=en-US&amp;amp;DCMID=XXXXXXXXXXXX&amp;amp;VIN=XXXXXXXXXXXXXXXXX&amp;amp;tz=America/New_York&amp;amp;resultKey=XXXXXXX"&gt;https://gdcportalgw.its-mo.com/orchestration_1111/gdc/BatteryStatusCheckResultRequest.php?RegionCode=NNA&amp;amp;lg=en-US&amp;amp;DCMID=XXXXXXXXXXXX&amp;amp;VIN=XXXXXXXXXXXXXXXXX&amp;amp;tz=America/New_York&amp;amp;resultKey=XXXXXXX&lt;/a&gt;&lt;/blockquote&gt;
&lt;p&gt;If it's not ready yet:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;status&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;message&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;success&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;responseFlag&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;0&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Once status is updated, you get:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;status&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;message&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;success&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;responseFlag&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;operationResult&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;START&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;timeStamp&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;2016-02-20 20:29:33&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;cruisingRangeAcOn&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;129712.0&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;cruisingRangeAcOff&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;133584.0&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;currentChargeLevel&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;0&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;chargeMode&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;NOT_CHARGING&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;pluginState&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;NOT_CONNECTED&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;charging&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;NO&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;chargeStatus&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;CT&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;batteryDegradation&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;11&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;batteryCapacity&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;12&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;timeRequiredToFull&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:{&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;hours&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;minutes&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;timeRequiredToFull200&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:{&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;hours&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;minutes&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;timeRequiredToFull200_6kW&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:{&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;hours&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;minutes&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="get-various-formats"&gt;
&lt;h4&gt;3.2.4&amp;nbsp;&amp;nbsp;&amp;nbsp;Get various formats&lt;/h4&gt;
&lt;p&gt;Here some misc requests:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;a class="reference external" href="https://gdcportalgw.its-mo.com/orchestration_1111/gdc/GetRegionSetting.php?RegionCode=NNA&amp;amp;lg=en-US&amp;amp;DCMID=XXXXXXXXXXXX&amp;amp;VIN=XXXXXXXXXXXXXXXXX&amp;amp;tz=America/New_York&amp;amp;Country=USA&amp;amp;cartype=15MY"&gt;https://gdcportalgw.its-mo.com/orchestration_1111/gdc/GetRegionSetting.php?RegionCode=NNA&amp;amp;lg=en-US&amp;amp;DCMID=XXXXXXXXXXXX&amp;amp;VIN=XXXXXXXXXXXXXXXXX&amp;amp;tz=America/New_York&amp;amp;Country=USA&amp;amp;cartype=15MY&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;ABOUT_THE_APP&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;APP_NOTICE&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;0&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;CONTACT&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;CUSTOMER_SUPPORT&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;ROADSIDE_ASSISTANCE&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;CUSTOMER_SUPPORT&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;1-877-664-2738&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;DRIVING_HELP&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;https://www.ev.nissanconnect.jp/EV/mycar/driving_help&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;DRIVING_RECORDS&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;ECO_DRIVE_EVALUATION&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;ECO_TREE&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;ELECTRICITY_RATE_SIMULATION&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;ELECTRICITY_USAGE_RECORDS&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;ELECTRIC_REDIRECT&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;https://www.ev.nissanconnect.jp/gw-redirect/gdc/auth-redirect.php&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;FORGOT_PASSWORD&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;https://owners.nissanusa.com/nowners/&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;HOME&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;NEW_REGISTRATION&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;https://owners.nissanusa.com/nowners/&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;NOTIFICATIONS_HISTORY&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;0&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;NOTIFICATION_DETAIL&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;BATTERY_HEATER_NOTIFICATION&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;                        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;Frequency&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;0&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;Mail&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;Push&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;SMS&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;Visible&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;BATTERY_STATUS_NOTIFICATION&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;                        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;Frequency&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;0&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;Mail&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;Push&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;SMS&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;Visible&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;CHARGE_START/FINISH_NOTIFICATION&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;                        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;Frequency&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;0&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;Mail&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;Push&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;SMS&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;Visible&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;CHARGE_STOP_ALERT&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;                        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;Frequency&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;0&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;Mail&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;Push&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;SMS&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;Visible&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;CLIMATE_CONTROL_START/STOP_NOTIFICATION&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;                        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;Frequency&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;0&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;Mail&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;Push&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;SMS&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;Visible&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;ELECTRICITY_COST_NOTIFICATION&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;                        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;Frequency&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;0&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;Mail&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;0&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;Push&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;0&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;SMS&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;0&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;Visible&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;0&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;MAINTENANCE_ALERT&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;                        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;Frequency&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;0&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                 &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;Mail&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;0&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                 &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;Push&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;0&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                 &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;SMS&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;0&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                 &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;Visible&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;0&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;         &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="w"&gt;         &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;MY_CAR_FINDER&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;                 &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;Frequency&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;0&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                 &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;Mail&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;0&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                 &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;Push&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;0&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                 &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;SMS&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;0&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                 &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;Visible&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;0&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;         &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="w"&gt;         &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;UNPLUGGED_STATUS_ALERT&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;                 &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;Frequency&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;0&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                 &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;Mail&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                 &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;Push&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                 &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;SMS&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                 &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;Visible&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;         &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;NOTIFICATION_SETTINGS&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;PATH_VIEWER&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;0&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;PRIVACY_LINK&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;https://m.nissanusa.com/privacy&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;REGIONAL_RANKINGS&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;REMOTE_CHARGE&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;REMOTE_CLIMATE_CONTROL&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;ROADSIDE_ASSISTANCE&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;1-800-801-6161&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;ROUTE&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;ROUTE_PLANNER&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;https://routepln.its-mo.com/RoutePlanner&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;RegionCode&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;NNA&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;UPDATEATSTARTUP&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;USER&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;VEHICLE_SWAP&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;WORLD_RANKINGS&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;Wh&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Wh&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;message&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;success&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;status&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;a class="reference external" href="https://gdcportalgw.its-mo.com/orchestration_1111/gdc/dateformat.php?RegionCode=NNA&amp;amp;lg=en-US&amp;amp;DCMID=XXXXXXXXXXXX&amp;amp;VIN=XXXXXXXXXXXXXXXXX&amp;amp;tz=America/New_York&amp;amp;TargetDate=2016-01-12&amp;amp;type=Y/m&amp;amp;lg=en-US"&gt;https://gdcportalgw.its-mo.com/orchestration_1111/gdc/dateformat.php?RegionCode=NNA&amp;amp;lg=en-US&amp;amp;DCMID=XXXXXXXXXXXX&amp;amp;VIN=XXXXXXXXXXXXXXXXX&amp;amp;tz=America/New_York&amp;amp;TargetDate=2016-01-12&amp;amp;type=Y/m&amp;amp;lg=en-US&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;DisplayDate&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Jan/2016&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;TargetDate&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;2016-01-12&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;message&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;success&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;status&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;a class="reference external" href="https://gdcportalgw.its-mo.com/orchestration_1111/gdc/GetCountrySetting.php?RegionCode=NNA&amp;amp;lg=en-US&amp;amp;DCMID=XXXXXXXXXXXX&amp;amp;VIN=XXXXXXXXXXXXXXXXX&amp;amp;tz=America/New_York"&gt;https://gdcportalgw.its-mo.com/orchestration_1111/gdc/GetCountrySetting.php?RegionCode=NNA&amp;amp;lg=en-US&amp;amp;DCMID=XXXXXXXXXXXX&amp;amp;VIN=XXXXXXXXXXXXXXXXX&amp;amp;tz=America/New_York&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;message&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;success&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;setting&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;Australia&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;Austria&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;Belgium&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;Canada&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;Cyprus&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;0&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;Czech Rep&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;0&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;Denmark&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;Estonia&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;Finland&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;France&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;Germany&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;Greece&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;Guadeloupe&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;0&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;Hungary&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;0&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;Iceland&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;0&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;Ireland&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;Israel&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;Italy&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;Japan&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;Latvia&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;Lithuania&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;Luxembourg&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;Malta&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;0&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;Martinique&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;0&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;Monaco&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;Netherlands&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;Norway&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;Poland&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;0&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;Portugal&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;Reunion&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;0&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;Slovakia&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;0&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;Slovenia&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;0&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;Spain&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;Sweden&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;Switzerland&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;The United States&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;United Kingdom&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;status&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;a class="reference external" href="https://gdcportalgw.its-mo.com/app_notice/AppNoticeRequest.php?RegionCode=NNA&amp;amp;lg=en-US&amp;amp;DCMID=XXXXXXXXXXXX&amp;amp;VIN=XXXXXXXXXXXXXXXXX&amp;amp;tz=America/New_York&amp;amp;DeviceType=ios&amp;amp;DeviceTime=2016-01-12%2010:43&amp;amp;UserId=XXXXXXX"&gt;https://gdcportalgw.its-mo.com/app_notice/AppNoticeRequest.php?RegionCode=NNA&amp;amp;lg=en-US&amp;amp;DCMID=XXXXXXXXXXXX&amp;amp;VIN=XXXXXXXXXXXXXXXXX&amp;amp;tz=America/New_York&amp;amp;DeviceType=ios&amp;amp;DeviceTime=2016-01-12%2010:43&amp;amp;UserId=XXXXXXX&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;AppNotice&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[],&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;message&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;success&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;status&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;a class="reference external" href="https://gdcportalgw.its-mo.com/orchestration_1111/gdc/dateformat.php?TargetDate=2016-01-12%2010:37&amp;amp;type=updateTime&amp;amp;lg=en-US"&gt;https://gdcportalgw.its-mo.com/orchestration_1111/gdc/dateformat.php?TargetDate=2016-01-12%2010:37&amp;amp;type=updateTime&amp;amp;lg=en-US&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;DisplayDate&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Jan 12, 2016 10:37 AM&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;TargetDate&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;2016-01-12 10:37&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;message&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;success&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;status&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;a class="reference external" href="https://gdcportalgw.its-mo.com/orchestration_1111/gdc/dateformat.php?RegionCode=NNA&amp;amp;lg=en-US&amp;amp;DCMID=XXXXXXXXXXXX&amp;amp;VIN=XXXXXXXXXXXXXXXXX&amp;amp;tz=America/New_York&amp;amp;TargetDate=2016-01-12%2010:37&amp;amp;type=updateTime&amp;amp;lg=en-US"&gt;https://gdcportalgw.its-mo.com/orchestration_1111/gdc/dateformat.php?RegionCode=NNA&amp;amp;lg=en-US&amp;amp;DCMID=XXXXXXXXXXXX&amp;amp;VIN=XXXXXXXXXXXXXXXXX&amp;amp;tz=America/New_York&amp;amp;TargetDate=2016-01-12%2010:37&amp;amp;type=updateTime&amp;amp;lg=en-US&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;DisplayDate&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Jan 12, 2016 10:37 AM&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;TargetDate&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;2016-01-12 10:37&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;message&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;success&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;status&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="to-be-continued"&gt;
&lt;h2&gt;4&amp;nbsp;&amp;nbsp;&amp;nbsp;to be continued....&lt;/h2&gt;
&lt;/div&gt;
</content><category term="Tech"></category><category term="LEAF"></category><category term="Nissan"></category></entry><entry><title>OneResumÃ© - Usage Guide</title><link href="https://virantha.com/2015/04/07/oneresume-a-data-driven-resume-generator-for-microsoft-word/" rel="alternate"></link><published>2015-04-07T15:41:00-04:00</published><updated>2015-04-07T15:41:00-04:00</updated><author><name>virantha</name></author><id>tag:virantha.com,2015-04-07:/2015/04/07/oneresume-a-data-driven-resume-generator-for-microsoft-word/</id><summary type="html">&lt;p&gt;OneResumÃ© is a data-driven resumÃ© generator for text and Microsoft Word
documents.  Write your resumÃ© content in &lt;a class="reference external" href="http://en.wikipedia.org/wiki/YAML"&gt;YAML&lt;/a&gt; and quickly and easily generate
multiple versions and formats of your resumÃ© using this program.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Free and open-source software: ASL2 license&lt;/li&gt;
&lt;li&gt;Blog: &lt;a class="reference external" href="http://virantha.com/category/oneresume.html"&gt;http://virantha.com/category/oneresume.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Documentation: &lt;a class="reference external" href="http://virantha.github.io/one_resume/html"&gt;http://virantha.github â€¦&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;OneResumÃ© is a data-driven resumÃ© generator for text and Microsoft Word
documents.  Write your resumÃ© content in &lt;a class="reference external" href="http://en.wikipedia.org/wiki/YAML"&gt;YAML&lt;/a&gt; and quickly and easily generate
multiple versions and formats of your resumÃ© using this program.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Free and open-source software: ASL2 license&lt;/li&gt;
&lt;li&gt;Blog: &lt;a class="reference external" href="http://virantha.com/category/oneresume.html"&gt;http://virantha.com/category/oneresume.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Documentation: &lt;a class="reference external" href="http://virantha.github.io/one_resume/html"&gt;http://virantha.github.io/one_resume/html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Source: &lt;a class="reference external" href="https://github.com/virantha/one_resume"&gt;https://github.com/virantha/one_resume&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="section" id="features"&gt;
&lt;h2&gt;Features&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Keep your resumÃ© content in simple text files and automatically generate
different versions of your resumÃ©s in multiple formats (currently supports
generating text and Microsoft Word .docx format resumÃ©s)&lt;/li&gt;
&lt;li&gt;Allows you to break up your resumÃ© content into multiple files, so you can
pick and choose the sections you want for each generated version. For
example, if you want one resumÃ© with your publications, but want to skip them
for a shorter version, you can maintain the publications list in a separate
input file, and keep both generated resumÃ©s synchronized with the other
content.&lt;/li&gt;
&lt;li&gt;Plugin architecture, so you can easily extend to other formats (LaTex coming soon)&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="usage"&gt;
&lt;h2&gt;Usage:&lt;/h2&gt;
&lt;p&gt;OneResumÃ© can be run in single resumÃ© mode, or batch mode (in order to generate multiple different resumÃ©s in one go).  The former usage is shown
below:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
one_resume.py single -t template_filename -y resumÃ©_content_filename -o output_filename -f Text
&lt;/pre&gt;
&lt;p&gt;The &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-f&lt;/span&gt;&lt;/tt&gt; option is the format you want to use, currently either &lt;tt class="docutils literal"&gt;Text&lt;/tt&gt; or &lt;tt class="docutils literal"&gt;Word&lt;/tt&gt;.  The templates and content files
will be discussed in the next section.&lt;/p&gt;
&lt;p&gt;If you want to run in batch mode:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
one_resume.py batch -c config.yml
&lt;/pre&gt;
&lt;p&gt;The &lt;tt class="docutils literal"&gt;config.yml&lt;/tt&gt; configuration file is a &lt;a class="reference external" href="http://en.wikipedia.org/wiki/YAML"&gt;YAML&lt;/a&gt; file structured as follows:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;sources/resumÃ©1.yaml&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;outputs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;format&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Word&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;template&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;sources/resumÃ©-template1.docx&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;output&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;generated/ResumÃ©_standard.docx&lt;/span&gt;

&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;sources/resumÃ©1.yaml&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;outputs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;format&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Text&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;template&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;sources/resumÃ©-template1.txt&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;output&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;generated/ResumÃ©_standard.txt&lt;/span&gt;

&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;sources/resumÃ©1.yml&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;outputs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;format&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Word&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;template&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;sources/resumÃ©-template-short.docx&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;output&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;generated/ResumÃ©_short.docx&lt;/span&gt;

&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;sources/resumÃ©-jobseeker.yml&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;outputs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;format&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Word&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;template&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;sources/resumÃ©-template-jobseeker.docx&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;output&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;generated/ResumÃ©_jobseeker.docx&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In this example, we are generating 4 different resumÃ©s, 3 of which are Word format, and 1 of which is text.  Three of them
use the same resumÃ© content, with one of them presumably using that content to generate a shortened version (with a different template file).
The fourth one uses a customized resumÃ© content, perhaps with different wording, to generate a specialized resumÃ©.&lt;/p&gt;
&lt;p&gt;Now, let's take a look at how the resumÃ© content and output text files are structured.&lt;/p&gt;
&lt;div class="section" id="writing-resume-content"&gt;
&lt;h3&gt;Writing ResumÃ© Content&lt;/h3&gt;
&lt;p&gt;ResumÃ© content is written using the &lt;a class="reference external" href="http://en.wikipedia.org/wiki/YAML"&gt;YAML&lt;/a&gt; format.  The content is broken up into sections, with each section consisting of a list (can be just a single item list)
of content.  The example below is pretty self-explanatory:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;contact&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;S. Holmes&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;address&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;221B Baker Street, St Marylebone, London, England&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;phone&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;None&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;email&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;sherlock@holmesconsulting.com&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;www&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;http://www.gotcrime.com&lt;/span&gt;

&lt;span class="nt"&gt;skills&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Current&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;skill_list&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p p-Indicator"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="no"&gt;Crime solving, cigarette-ash classification, crypto-analysis, disguise&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Past&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;skill_list&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p p-Indicator"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="no"&gt;Fencing, violin&lt;/span&gt;

&lt;span class="nt"&gt;education&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;degree&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;BA&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;university&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Christ Church College&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;address&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Oxford, England&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;field&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Chemistry&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;date&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;1876&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;gpa&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;5.0&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;degree&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;MA&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;university&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Sidney Sussex&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;address&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Cambridge&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;date&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;1878&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;field&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Criminology&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;gpa&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;3.9&lt;/span&gt;

&lt;span class="nt"&gt;experience&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;company&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Baker Street Detectives&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;location&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;London&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Consulting Detective&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;date&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;1880&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;to&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;1903&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;summary&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p p-Indicator"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="no"&gt;Brought several notorious criminals to justice.  Supported the intelligence services and recovered key&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="no"&gt;government property.&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;company&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Beekeeping Solutions&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;location&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Sussex Downs&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Beekeeper&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;date&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;1904-1914&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;summary&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p p-Indicator"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="no"&gt;Made honey.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can also split the content up into several different files.  For example, the top level file could just be written as:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;contact&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;S. Holmes&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;address&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;221B Baker Street, St Marylebone, London, England&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;phone&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;None&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;email&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;sherlock@holmesconsulting.com&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;www&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;http://www.gotcrime.com&lt;/span&gt;

&lt;span class="nt"&gt;skills&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;!include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;data_skills.yml&lt;/span&gt;

&lt;span class="nt"&gt;education&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;!include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;data_education.yml&lt;/span&gt;

&lt;span class="nt"&gt;experience&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;!include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;data_experience.yml&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="writing-templates-for-text-resumes"&gt;
&lt;h3&gt;Writing Templates for Text ResumÃ©s&lt;/h3&gt;
&lt;p&gt;The text resumÃ© generator uses the &lt;a class="reference external" href="http://www.makotemplates.org"&gt;Mako&lt;/a&gt; templating engine.  Here's an example template that can be used to output
the above data content into a text file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;contact&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;contact&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;contact&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]}&lt;/span&gt;
&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;contact&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;phone&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]}&lt;/span&gt;
&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;contact&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;email&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]}&lt;/span&gt;
&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;contact&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;www&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]}&lt;/span&gt;
&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;endfor&lt;/span&gt;
&lt;span class="o"&gt;=========================================&lt;/span&gt;

&lt;span class="n"&gt;SKILLS&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="o"&gt;-------&lt;/span&gt;
&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;skill&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;skills&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
  &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;skill&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;type&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]}:&lt;/span&gt;
    &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_wrap&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;skill&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;skill_list&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])}&lt;/span&gt;
&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;endfor&lt;/span&gt;

&lt;span class="n"&gt;EDUCATION&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="o"&gt;----------&lt;/span&gt;
&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;education&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
  &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;degree&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]}&lt;/span&gt; &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;university&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]}&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;field&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]}&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;date&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]})&lt;/span&gt;
&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;endfor&lt;/span&gt;

&lt;span class="n"&gt;EXPERIENCE&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="o"&gt;----------&lt;/span&gt;
&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;experience&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
  &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;position&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]}&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;date&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]})&lt;/span&gt;
  &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;company&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]},&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;location&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]}&lt;/span&gt;
  &lt;span class="o"&gt;-----------------------------------&lt;/span&gt;
    &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_wrap&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;summary&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])}&lt;/span&gt;

&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;endfor&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The main things to note are:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;The resume content from the YAML file is stored as a dictionary in &lt;tt class="docutils literal"&gt;d&lt;/tt&gt;.&lt;/li&gt;
&lt;li&gt;Each top-level entry in this dictionary is a list that can be iterated over using Mako syntax.&lt;/li&gt;
&lt;li&gt;There is a helper function called &lt;tt class="docutils literal"&gt;s._wrap&lt;/tt&gt; that can be used to indent some text with the
given number of spaces.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Using this template, and the data content above, would yield the following text:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
S. Holmes
12-3456
sherlock&amp;#64;holmesconsulting.com
http://www.gotcrime.com
=========================================

SKILLS:
-------
  Current:
    Crime solving, cigarette-ash classification, crypto-analysis, disguise
  Past:
    Fencing, violin

EDUCATION:
----------
  BA from Christ Church College in Chemistry (1876)
  MA from Sidney Sussex in Criminology (1878)

EXPERIENCE:
----------
  Consulting Detective (1880 to 1903)
  Baker Street Detectives, London
  -----------------------------------
    Brought several notorious criminals to justice.  Supported the
    intelligence services and recovered key government property.

  Beekeeper (1904-1914)
  Beekeeping Solutions, Sussex Downs
  -----------------------------------
    Made honey.
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="writing-templates-for-word-resumes"&gt;
&lt;h3&gt;Writing Templates for Word ResumÃ©s&lt;/h3&gt;
&lt;p&gt;Word templates are just regular &lt;tt class="docutils literal"&gt;.docx&lt;/tt&gt; files. Please note that you cannot use the old
Word 97 &lt;tt class="docutils literal"&gt;.doc&lt;/tt&gt; format.    You can format it however you want, including bullets and styles.  However, tables
are &lt;em&gt;not&lt;/em&gt; supported at this time.  Here's some simple content you might type into a word document to generate
a resume from the above YAML:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
[!Contact]

&amp;lt;[name]
[email]
[www]
[phone]
&amp;gt;

[Experience]
&amp;lt;[company] â€“ [location] [date]
[position]
[summary]
&amp;gt;
[Education]
&amp;lt;[degree] ([university]) in [field] [date]
&amp;gt;
[Skills|Mad Skillls]
&amp;lt;[type] â€“ [skill_list]&amp;gt;
&lt;/pre&gt;
&lt;p&gt;The syntax is as follows:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Section and item names are enclosed in brackets (&lt;tt class="docutils literal"&gt;[&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;]&lt;/tt&gt;)&lt;/li&gt;
&lt;li&gt;Looping over sections is done using the &lt;tt class="docutils literal"&gt;&amp;lt;&lt;/tt&gt; character for starting the loop, and &lt;tt class="docutils literal"&gt;&amp;gt;&lt;/tt&gt; for closing the loop&lt;/li&gt;
&lt;li&gt;Any section name with a &lt;tt class="docutils literal"&gt;!&lt;/tt&gt; preceding it will not generate the section text (for instance, no text &lt;tt class="docutils literal"&gt;Contact&lt;/tt&gt; will appear in the generated resume).&lt;/li&gt;
&lt;li&gt;Using a &lt;tt class="docutils literal"&gt;|&lt;/tt&gt; symbol in a section header will use the proceeding text instead of the section name in the outputted resume. So, the final section above will be rendered with a title of &lt;tt class="docutils literal"&gt;Mad Skills&lt;/tt&gt; instead of &lt;tt class="docutils literal"&gt;Skills&lt;/tt&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Here's a screenshot of the template .docx (you can also find this in the &lt;a class="reference external" href="https://github.com/virantha/one_resume/blob/master/examples/resume.docx?raw=true"&gt;repository&lt;/a&gt;):&lt;/p&gt;
&lt;img alt="Word resume template" class="align-center" src="https://raw.githubusercontent.com/virantha/one_resume/master/images/word_template.png" style="width: 679px;" /&gt;
&lt;p&gt;And, running OneResumÃ© on it will generate the following:&lt;/p&gt;
&lt;img alt="Word resume output" class="align-center" src="https://raw.githubusercontent.com/virantha/one_resume/master/images/word_output.png" style="width: 679px;" /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="installation"&gt;
&lt;h2&gt;Installation&lt;/h2&gt;
&lt;p&gt;Please note that the lxml python library requires a C compiler.  On Mac OS X, you need to make
sure you have XCode plus the the XCode command line utilities installed:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ xcode-select --install
&lt;/pre&gt;
&lt;p&gt;Then, it's simply a matter of:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ pip install one_resume
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="disclaimer"&gt;
&lt;h2&gt;Disclaimer&lt;/h2&gt;
&lt;p&gt;The software is distributed on an &amp;quot;AS IS&amp;quot; BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&lt;/p&gt;
&lt;/div&gt;
</content><category term="OneResume"></category><category term="python"></category><category term="resume"></category><category term="docx"></category></entry><entry><title>Migrating XenServer Virtual Machine VDIs to KVM</title><link href="https://virantha.com/2015/03/09/migrating-xenserver-vdi-to-kvm/" rel="alternate"></link><published>2015-03-09T12:02:00-04:00</published><updated>2015-03-09T12:02:00-04:00</updated><author><name>virantha</name></author><id>tag:virantha.com,2015-03-09:/2015/03/09/migrating-xenserver-vdi-to-kvm/</id><summary type="html">&lt;p&gt;After having worked with Xenserver 6.2 for over a year now, I've decided to
migrate away from it.  It just wasn't stable enough with SATA
pass-through on my machine, and it had some really annoying bugs with the way
snapshots and backups were handled:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Under load, my SATA 8-bay â€¦&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;After having worked with Xenserver 6.2 for over a year now, I've decided to
migrate away from it.  It just wasn't stable enough with SATA
pass-through on my machine, and it had some really annoying bugs with the way
snapshots and backups were handled:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Under load, my SATA 8-bay enclosure would sometimes hang the entire server (not just the Windows 7 host that was the end-point)&lt;/li&gt;
&lt;li&gt;Snapshots would fail with error saying not enough space, even though the disk was less than three quarters full&lt;/li&gt;
&lt;li&gt;No built-in backup solution (combined with the snapshot unreliability, this is a dealbreaker)&lt;/li&gt;
&lt;li&gt;Need to manually clean up disk clusters/vms (documented bug)&lt;/li&gt;
&lt;li&gt;Network transfers to a remote system/disk across management NICs are throttled (good god)&lt;/li&gt;
&lt;li&gt;No USB 3.0 support, so good luck backing up even to a local disk&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Needless to say, I've been itching to give another solution a shot.  I finally decided to migrate
to KVM, and it took me a while to figure out how to seamlessly migrate my Windows virtual
machines over.  The actual process is very simple and detailed below.&lt;/p&gt;
&lt;div class="contents topic" id="table-of-contents"&gt;
&lt;p class="topic-title"&gt;&lt;a class="reference internal" href="#top"&gt;Table of Contents:&lt;/a&gt;&lt;/p&gt;
&lt;ul class="auto-toc simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#googling-it" id="toc-entry-1"&gt;1&amp;nbsp;&amp;nbsp;&amp;nbsp;Googling it&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#the-easy-way" id="toc-entry-2"&gt;2&amp;nbsp;&amp;nbsp;&amp;nbsp;The easy way&lt;/a&gt;&lt;ul class="auto-toc"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#expose-the-vdi-on-your-xenserver-host" id="toc-entry-3"&gt;2.1&amp;nbsp;&amp;nbsp;&amp;nbsp;Expose the VDI on your Xenserver Host&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#install-the-image-on-your-kvm-host" id="toc-entry-4"&gt;2.2&amp;nbsp;&amp;nbsp;&amp;nbsp;Install the image on your KVM host&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#cleanup" id="toc-entry-5"&gt;2.3&amp;nbsp;&amp;nbsp;&amp;nbsp;Cleanup&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="googling-it"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#toc-entry-1"&gt;1&amp;nbsp;&amp;nbsp;&amp;nbsp;Googling it&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;There are lots of tutorials on the web about using XenCenter in Windows to export disks,
but in my experience, XenCenter was extremely unreliable even for imports and I
didn't want to build another Windows VM just to export disks.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="the-easy-way"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#toc-entry-2"&gt;2&amp;nbsp;&amp;nbsp;&amp;nbsp;The easy way&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Turns out, and it appears not many people are aware of it, there's a simple command line interface
to the &lt;a class="reference external" href="https://github.com/xenserver/transfervm/wiki/Usage-Examples"&gt;Transfer VMs&lt;/a&gt; built into Xenserver 6.x.  Using the Transfer VM on the
host (dom0), you can expose any offline VDI as a raw image over HTTP using
built-in commands with no additional software to install.  Then, on your client
disk system, you simply use &lt;tt class="docutils literal"&gt;curl&lt;/tt&gt; to download the disk image over the
network. Very simple, and no third-party tools involved.  The steps involved are given below:&lt;/p&gt;
&lt;div class="section" id="expose-the-vdi-on-your-xenserver-host"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#toc-entry-3"&gt;2.1&amp;nbsp;&amp;nbsp;&amp;nbsp;Expose the VDI on your Xenserver Host&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;There are three pieces of information (UUIDs) that you're going to need for this process, and
I've summarized them in the table below, including the commands you'll run on dom0 as root.  Just
find the particular UUID that identifies the resource you need in the text output that is generated by each command
below.&lt;/p&gt;
&lt;table border="1" class="docutils" id="uuids"&gt;
&lt;caption&gt;UUIDs you'll need&lt;/caption&gt;
&lt;colgroup&gt;
&lt;col width="20%" /&gt;
&lt;col width="80%" /&gt;
&lt;/colgroup&gt;
&lt;thead valign="bottom"&gt;
&lt;tr&gt;&lt;th class="head"&gt;UUID&lt;/th&gt;
&lt;th class="head"&gt;Command&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;HOST-UUID&lt;/td&gt;
&lt;td&gt;xe host-list&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;NETWORK-UUID&lt;/td&gt;
&lt;td&gt;xe network-list&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;VDI-UUID&lt;/td&gt;
&lt;td&gt;xe vdi-list&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Once you have all of the details above, shut down the VM or detach the VDI, and execute the following:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
xe host-call-plugin host-uuid=HOST-UUID fn=expose args:vdi_uuid=VDI-UUID args:network_uuid=NETWORK-UUID args:transfer_mode=http
&lt;/pre&gt;
&lt;p&gt;This will return (print out) a new record locator UUID that you should copy down.  Let's call it RECORD-UUID
and use it in the following command to get the exposed URL:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
xe host-call-plugin host-uuid=HOST-UUID plugin=transfer fn=get_record args:record_handle=RECORD-UUID
&lt;/pre&gt;
&lt;p&gt;This will print out something like the following:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot;?&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;transfer_record&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="na"&gt;username=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;70f8e0b297fcdd94&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="na"&gt;status=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;exposed&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="na"&gt;url_path=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/vdi_uuid_4b26aeff-bc12-44f0-a5b6-2e07ec37e75c&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="na"&gt;record_handle=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;dda7a17f-2621-a77a-0464-6d95a19fbbc3&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="na"&gt;ip=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;10.80.238.238&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="na"&gt;transfer_mode=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="na"&gt;url_full=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://70f8e0b297fcdd94:8c21f66590fcb08e@10.80.238.238:80/vdi_uuid_4b26aeff-bc12-44f0-a5b6-2e07ec37e75c&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="na"&gt;device=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;xvdn&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="na"&gt;use_ssl=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;false&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="na"&gt;password=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;8c21f66590fcb08e&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="na"&gt;port=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;80&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="na"&gt;vdi_uuid=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;4b26aeff-bc12-44f0-a5b6-2e07ec37e75c&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/transfer_record&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;What you need is the &lt;tt class="docutils literal"&gt;url_full&lt;/tt&gt; entry; let's call it VDI_URL.  This is the url where the Transfer VM will supply the raw disk image of the VDI you specified.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="install-the-image-on-your-kvm-host"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#toc-entry-4"&gt;2.2&amp;nbsp;&amp;nbsp;&amp;nbsp;Install the image on your KVM host&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;On the destination machine, all you have to do is issue the following command to download that VDI as a raw
image:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
curl VDI_URL -o disk.raw
&lt;/pre&gt;
&lt;p&gt;Next, convert this to a .qcow2 image for KVM using the following command:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
qemu-img convert -O qcow2 disk.raw disk.qcow2
&lt;/pre&gt;
&lt;p&gt;Now, you can just attach this disk to any KVM virtual machine.  If you're migrating from a Windows 7
machine, you will probably need to make sure you use the IDE drivers and not the virtio drivers for the
disk for the first boot.  So, you would change something like this in your .xml configuration:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;target&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;dev=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;hda&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;bus=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;virtio&amp;#39;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;address&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;pci&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;domain=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;0x0000&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;bus=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;0x00&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;slot=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;0x04&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;function=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;0x0&amp;#39;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To something like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;target&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;dev=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;hda&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;bus=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;ide&amp;#39;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;address&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;drive&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;controller=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;0&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;bus=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;0&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;target=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;0&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;unit=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;0&amp;#39;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And that's it!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="cleanup"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#toc-entry-5"&gt;2.3&amp;nbsp;&amp;nbsp;&amp;nbsp;Cleanup&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Optional&lt;/strong&gt;: You may also want to go back to your XenServer host and un-expose your VDI, so you can reattach/restart
your VM by executing:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
xe host-call-plugin host-uuid=HOST-UUID plugin=transfer fn=unexpose args:record_handle=RECORD-UUID
&lt;/pre&gt;
&lt;p&gt;You may also want to zero some of the free space on your Windows disk image, to
take full advantage of the compressibility of the
qcow2 image format.  First, in your Windows VM, download the &lt;tt class="docutils literal"&gt;sdelete&lt;/tt&gt; utility from &lt;a class="reference external" href="https://technet.microsoft.com/en-us/sysinternals/bb897443.aspx"&gt;here&lt;/a&gt;.  Then, run the following command from a command prompt in Windows:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
sdelete.exe -z c:
&lt;/pre&gt;
&lt;p&gt;This will take some time to complete. Once that's done, shut down your VM, and run the following command
on your Linux KVM host:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
qemu-img convert -c -O qcow2 original.qcow2 compressed.qcow2
&lt;/pre&gt;
&lt;p&gt;Startup your VM using the new &lt;tt class="docutils literal"&gt;compressed.qcow2&lt;/tt&gt; and if all looks good, you can go ahead and delete the &lt;tt class="docutils literal"&gt;original.qcow2&lt;/tt&gt; image.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content><category term="Tech"></category><category term="virtualization"></category><category term="linux"></category></entry><entry><title>Building a low-power home file server using Intel's Avoton platform</title><link href="https://virantha.com/2015/01/26/building-a-low-power-file-server-intel-avoton/" rel="alternate"></link><published>2015-01-26T11:13:00-05:00</published><updated>2015-01-26T11:13:00-05:00</updated><author><name>virantha</name></author><id>tag:virantha.com,2015-01-26:/2015/01/26/building-a-low-power-file-server-intel-avoton/</id><summary type="html">&lt;p&gt;In this post I'll detail the hardware I used to upgrade my 2 year old home
server that was getting a little bit long in the tooth.  I wanted to replace a
Core i7 based XenServer host connected to an external 8-bay SATA enclosure that
had an idle power consumption â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;In this post I'll detail the hardware I used to upgrade my 2 year old home
server that was getting a little bit long in the tooth.  I wanted to replace a
Core i7 based XenServer host connected to an external 8-bay SATA enclosure that
had an idle power consumption of over 100W for machine+enclosure
with all drives spun down.  In my new build, with 8 hard drives and
3 SSDs, I can get it under 40W with drives spun down but the system awake.&lt;/p&gt;
&lt;div class="contents topic" id="table-of-contents"&gt;
&lt;p class="topic-title"&gt;&lt;a class="reference internal" href="#top"&gt;Table of Contents:&lt;/a&gt;&lt;/p&gt;
&lt;ul class="auto-toc simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#getting-the-components" id="toc-entry-1"&gt;1&amp;nbsp;&amp;nbsp;&amp;nbsp;Getting the components&lt;/a&gt;&lt;ul class="auto-toc"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#build-details" id="toc-entry-2"&gt;1.1&amp;nbsp;&amp;nbsp;&amp;nbsp;Build details&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#motherboard" id="toc-entry-3"&gt;1.2&amp;nbsp;&amp;nbsp;&amp;nbsp;Motherboard&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#case" id="toc-entry-4"&gt;1.3&amp;nbsp;&amp;nbsp;&amp;nbsp;Case&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#memory" id="toc-entry-5"&gt;1.4&amp;nbsp;&amp;nbsp;&amp;nbsp;Memory&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#power-supply" id="toc-entry-6"&gt;1.5&amp;nbsp;&amp;nbsp;&amp;nbsp;Power supply&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="getting-the-components"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#toc-entry-1"&gt;1&amp;nbsp;&amp;nbsp;&amp;nbsp;Getting the components&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Here's the list and summary of each part.  I have more details and options
listed in the next section.&lt;/p&gt;
&lt;table border="1" class="docutils" id="components"&gt;
&lt;caption&gt;File-server components&lt;/caption&gt;
&lt;colgroup&gt;
&lt;col width="15%" /&gt;
&lt;col width="10%" /&gt;
&lt;col width="10%" /&gt;
&lt;col width="65%" /&gt;
&lt;/colgroup&gt;
&lt;thead valign="bottom"&gt;
&lt;tr&gt;&lt;th class="head"&gt;Component&lt;/th&gt;
&lt;th class="head"&gt;Retail&lt;/th&gt;
&lt;th class="head"&gt;Paid&lt;/th&gt;
&lt;th class="head"&gt;Comments&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;&lt;div class="first last"&gt;&lt;div&gt;&lt;a class="amazon" href="http://www.amazon.com/gp/product/B00HIDQG6E/ref=as_li_tf_il?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=B00HIDQG6E&amp;linkCode=am2&amp;tag=virantha-20"&gt;&lt;img src="http://images.amazon.com/images/P/B00HIDQG6E.01._SCMZZZZZZZ_.jpg"/&gt;ASRock C2550I Intel Avoton Motherboard and CPU&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td&gt;$309&lt;/td&gt;
&lt;td&gt;$223 &amp;#64; newegg&lt;/td&gt;
&lt;td&gt;Mini-itx 12 SATA ports (!), quad-core Intel Atom 14W TDP CPU&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;div class="first last"&gt;&lt;div&gt;&lt;a class="amazon" href="http://www.amazon.com/gp/product/B00IAELTAI/ref=as_li_tf_il?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=B00IAELTAI&amp;linkCode=am2&amp;tag=virantha-20"&gt;&lt;img src="http://images.amazon.com/images/P/B00IAELTAI.01._SCMZZZZZZZ_.jpg"/&gt;Silverstone DS380B Case&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td&gt;$149&lt;/td&gt;
&lt;td&gt;$149&lt;/td&gt;
&lt;td&gt;Supports 8 hard drives with hot-swappable trays (only 2x molex power connectors for all 8 drives) plus 4x 2.5in drive cage.  SFX power supply required.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;div class="first last"&gt;&lt;div&gt;&lt;a class="amazon" href="http://www.amazon.com/gp/product/B00C249PEO/ref=as_li_tf_il?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=B00C249PEO&amp;linkCode=am2&amp;tag=virantha-20"&gt;&lt;img src="http://images.amazon.com/images/P/B00C249PEO.01._SCMZZZZZZZ_.jpg"/&gt;Corsair Air Series SP120 PWM Quiet Edition Case fans&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td&gt;$20 each&lt;/td&gt;
&lt;td&gt;~$15 &amp;#64; newegg wih twin pack&lt;/td&gt;
&lt;td&gt;PWM (4-pin) so speed is controllable and reportable via BIOS.  Very quiet and high CFM and pressure&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;div class="first last"&gt;&lt;div&gt;&lt;a class="amazon" href="http://www.amazon.com/gp/product/B00H46JSVU/ref=as_li_tf_il?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=B00H46JSVU&amp;linkCode=am2&amp;tag=virantha-20"&gt;&lt;img src="http://images.amazon.com/images/P/B00H46JSVU.01._SCMZZZZZZZ_.jpg"/&gt;Kingston 8GB DDR3 1600 Low Voltage (1.35V) with ECC&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td&gt;$84&lt;/td&gt;
&lt;td&gt;$84&lt;/td&gt;
&lt;td&gt;Used a single stick and will upgrade later. Important to note this is server memory with ECC support and 1.35V (low-voltage) vs standard 1.5V&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;div class="first last"&gt;&lt;div&gt;&lt;a class="amazon" href="http://www.amazon.com/gp/product/B00FA4KP8S/ref=as_li_tf_il?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=B00FA4KP8S&amp;linkCode=am2&amp;tag=virantha-20"&gt;&lt;img src="http://images.amazon.com/images/P/B00FA4KP8S.01._SCMZZZZZZZ_.jpg"/&gt;Silverstone Tek 300W (ST30SF) Power Supply&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td&gt;$55&lt;/td&gt;
&lt;td&gt;$55&lt;/td&gt;
&lt;td&gt;SFX form factor.  Temperature controlled fan that stays off under 50W load in typical usage. Non-modular&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;div class="first last"&gt;&lt;div&gt;&lt;a class="amazon" href="http://www.amazon.com/gp/product/B009GUXWDM/ref=as_li_tf_il?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=B009GUXWDM&amp;linkCode=am2&amp;tag=virantha-20"&gt;&lt;img src="http://images.amazon.com/images/P/B009GUXWDM.01._SCMZZZZZZZ_.jpg"/&gt;Monoprice SATA cable&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td&gt;$2.50&lt;/td&gt;
&lt;td&gt;$2.50&lt;/td&gt;
&lt;td&gt;Good length for this case/MB, and locking latches and good build quality&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;div class="section" id="build-details"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#toc-entry-2"&gt;1.1&amp;nbsp;&amp;nbsp;&amp;nbsp;Build details&lt;/a&gt;&lt;/h3&gt;
&lt;/div&gt;
&lt;div class="section" id="motherboard"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#toc-entry-3"&gt;1.2&amp;nbsp;&amp;nbsp;&amp;nbsp;Motherboard&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;I went with the new Avoton series of server boards based on the Silvermont Atom
platform (the passively cooled CPU is soldered onto the motherboard).  These
are surprisingly capable and extremely low power.  For example, the 4-core
&lt;a class="amazon" href="http://www.amazon.com/gp/product/B00LS34SJM?ie=UTF8&amp;linkCode=as2&amp;camp=1634&amp;tag=virantha-20"&gt;ASRock C2550D4l&lt;/a&gt; mini-ITX motherboard has 14W TDP, and is
usually under 10W.  This server-class motherboard has no problem playing back
my high-bit-rate 1080P Plex streams, and supports 64GB ECC RAM (regular RAM
also works), 12 SATA ports, and has an IPMI interface.  IPMI uses a dedicated
ethernet port and lets you get a console via a web interface over the network,
letting you physically place this machine anywhere you like and do everything
without a keyboard and monitor.  You get access to all the sensors, BIOS, and
even BIOS updates through this web interface, which makes everything
hassle-free, and makes me wonder why I didn't splurge for this feature years
ago.&lt;/p&gt;
&lt;p&gt;If you're planning on doing any kind of virtualization or multiple Plex
streams, then I recommend jumping up to the 8-core version, the
&lt;a class="amazon" href="http://www.amazon.com/gp/product/B00HIDQG6E?ie=UTF8&amp;linkCode=as2&amp;camp=1634&amp;tag=virantha-20"&gt;ASRock C2750D4I&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="case"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#toc-entry-4"&gt;1.3&amp;nbsp;&amp;nbsp;&amp;nbsp;Case&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;I decided to go with the new NAS desktop &lt;a class="amazon" href="http://www.amazon.com/gp/product/B00IAELTAI?ie=UTF8&amp;linkCode=as2&amp;camp=1634&amp;tag=virantha-20"&gt;DS380B case&lt;/a&gt; from
Silverstone that has a built-in 8x3.5in bay hot-swappable backplane, plus an
internal bracket for mounting up to 4x2.5in hard drives or SSDs.  It comes with
3x120mm fans that are relatively quiet, but I upgraded to 3 [amazon B00C249PEO
Corsair SP120 Quiet fans] that support fan speed control via PWM and also
report RPMs to the BIOS.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="memory"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#toc-entry-5"&gt;1.4&amp;nbsp;&amp;nbsp;&amp;nbsp;Memory&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Here is a list of all the Kingston memory that will work with this board:
&lt;a class="reference external" href="http://www.kingston.com/us/memory/search?DeviceType=8&amp;amp;Mfr=ASR&amp;amp;Line=Server%20Board&amp;amp;Model=87350&amp;amp;Description=Kingston_ValueRam_Memory_Server_Premier_Memory_HyperX_Memory_for_ASRock_Server_Board_C2550D4I"&gt;Kingston ECC memory&lt;/a&gt;
I decided to pay the slight premium for a stick of ECC low-voltage RAM.&lt;/p&gt;
&lt;p&gt;See &lt;a class="reference external" href="http://www.servethehome.com/testing-power-savings-low-voltage-135v-kingston-memory-intel-avoton/"&gt;this article&lt;/a&gt; for the benefits of using 1.35V vs 1.5V RAM.  You'd probably end up saving about 1 to 2W on a 16GB system, or almost 10% on a ~20W TDP system like the Avoton.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="power-supply"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#toc-entry-6"&gt;1.5&amp;nbsp;&amp;nbsp;&amp;nbsp;Power supply&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;I originally considered getting a &lt;a class="amazon" href="http://www.amazon.com/gp/product/B005TWE6B8?ie=UTF8&amp;linkCode=as2&amp;camp=1634&amp;tag=virantha-20"&gt;PicoPSU-160-XT&lt;/a&gt; with 16A
brick, but the power brick was sold out, and I wasn't too keen in the end on
running the 12V directly to my system.  Plus, it was tough to find an adapter
plate to have a nice DC-plugin come into the case.  Moreover, I was looking
at combined over $100 for this combination, so I ended up settling for a
&lt;a class="amazon" href="http://www.amazon.com/gp/product/B00FA4KP8S?ie=UTF8&amp;linkCode=as2&amp;camp=1634&amp;tag=virantha-20"&gt;300W power supply&lt;/a&gt; that's fanless under 50W draw from
Silverstone listed below. I probably could've saved a few watts with the
PicoPSU with a good adapter, but this was the easier solution.  Keep in mind
that the Silvestone DS308B NAS case uses a SFX form-factor power supply, like
this power supply, and not a standard ATX sized power supply.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content><category term="Tech"></category><category term="hardware"></category></entry><entry><title>Setting up the Edgemax EdgeRouter Lite (ERLite-3) in a Home Environment</title><link href="https://virantha.com/2014/08/22/setting-up-edgemax-edgerouter-lite-erlite-3/" rel="alternate"></link><published>2014-08-22T09:46:00-04:00</published><updated>2014-08-22T09:46:00-04:00</updated><author><name>virantha</name></author><id>tag:virantha.com,2014-08-22:/2014/08/22/setting-up-edgemax-edgerouter-lite-erlite-3/</id><summary type="html">&lt;p&gt;This is just my cheat sheet on setting up the &lt;a class="amazon" href="http://www.amazon.com/gp/product/B00CPRVF5K?ie=UTF8&amp;linkCode=as2&amp;camp=1634&amp;tag=virantha-20"&gt;EdgeRouter ERLite-3&lt;/a&gt;
in a home environment.  I recently migrated to this after a long
search for a low-power firewall and router solution.  Prior to getting this
beauty, I'd migrated my stand-alone PC running Ipcop/Smoothwall to a Xen
virtual machine â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;This is just my cheat sheet on setting up the &lt;a class="amazon" href="http://www.amazon.com/gp/product/B00CPRVF5K?ie=UTF8&amp;linkCode=as2&amp;camp=1634&amp;tag=virantha-20"&gt;EdgeRouter ERLite-3&lt;/a&gt;
in a home environment.  I recently migrated to this after a long
search for a low-power firewall and router solution.  Prior to getting this
beauty, I'd migrated my stand-alone PC running Ipcop/Smoothwall to a Xen
virtual machine firewall, which unfortunately had some usability issues.&lt;/p&gt;
&lt;div class="contents topic" id="table-of-contents"&gt;
&lt;p class="topic-title"&gt;&lt;a class="reference internal" href="#top"&gt;Table of Contents:&lt;/a&gt;&lt;/p&gt;
&lt;ul class="auto-toc simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#command-line-interface" id="toc-entry-1"&gt;1&amp;nbsp;&amp;nbsp;&amp;nbsp;Command-line interface&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#setting-up-dyndns" id="toc-entry-2"&gt;2&amp;nbsp;&amp;nbsp;&amp;nbsp;Setting up DynDNS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#setting-up-web-filtering-using-squidguard" id="toc-entry-3"&gt;3&amp;nbsp;&amp;nbsp;&amp;nbsp;Setting up web filtering using SquidGuard&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#qos-for-voip-calls" id="toc-entry-4"&gt;4&amp;nbsp;&amp;nbsp;&amp;nbsp;QOS for VOIP calls&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#installing-pound-reverse-proxy" id="toc-entry-5"&gt;5&amp;nbsp;&amp;nbsp;&amp;nbsp;Installing Pound Reverse Proxy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#setting-up-vpn-for-example-your-ios-device" id="toc-entry-6"&gt;6&amp;nbsp;&amp;nbsp;&amp;nbsp;Setting up VPN (for example, your iOS device)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="command-line-interface"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#toc-entry-1"&gt;1&amp;nbsp;&amp;nbsp;&amp;nbsp;Command-line interface&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Although the gui is fairly responsive, a lot of the features are only exposed through the
underlying command line.  The Ubiquiti EdgeOS products run a fork of the open-source
Vyatta firewall OS, and you can usually find what you're looking for with a quick web search.&lt;/p&gt;
&lt;p&gt;You can either access the CLI through the GUI (seems to have issues running on Safari though), or
directly through ssh.  The former has issues with timeouts, however, for long-running jobs.&lt;/p&gt;
&lt;p&gt;Once you're in the command-line, you are in regular mode.  To switch to changing the configuration,
type:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
configure
&lt;/pre&gt;
&lt;p&gt;Once you are done making configuration changes with 'set' commands, you'll want to commit the changes to
the current firewall state.  After doing that, if everything looks good, you'll want to save the changes
to /config/config.boot&lt;/p&gt;
&lt;pre class="literal-block"&gt;
commit
save
exit
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="setting-up-dyndns"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#toc-entry-2"&gt;2&amp;nbsp;&amp;nbsp;&amp;nbsp;Setting up DynDNS&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;If you use No-IP.com you have to rely on the built-in dyndns service but modify the server setting
as detailed in this &lt;a class="reference external" href="http://www.ubnt.com/t5/EdgeMAX/DDNS-for-NO-IP/td-p/492809"&gt;post&lt;/a&gt;.&lt;/p&gt;
&lt;pre class="literal-block"&gt;
set service dns dynamic interface eth1 service dyndns server dynupdate.no-ip.com
set service dns dynamic interface eth1 service dyndns host-name &amp;lt;host&amp;gt;
set service dns dynamic interface eth1 service dyndns login &amp;lt;username&amp;gt;
set service dns dynamic interface eth1 service dyndns password &amp;lt;password&amp;gt;
&lt;/pre&gt;
&lt;p&gt;To force update the dynamic interface:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
update dns dynamic interface eth1
&lt;/pre&gt;
&lt;p&gt;To get the status (from regular mode)&lt;/p&gt;
&lt;pre class="literal-block"&gt;
show dns dynamic status
&lt;/pre&gt;
&lt;p&gt;To schedule this using the built-in task scheduler (1.5.0 firmware)&lt;/p&gt;
&lt;pre class="literal-block"&gt;
set system task-scheduler task dyndns_update executable path /opt/vyatta/bin/vyatta-op-cmd-wrapper
set system task-scheduler task dyndns_update executable arguments &amp;quot;update dns dynamic interface eth1&amp;quot;
set system task-scheduler task dyndns_update interval 7d
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="setting-up-web-filtering-using-squidguard"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#toc-entry-3"&gt;3&amp;nbsp;&amp;nbsp;&amp;nbsp;Setting up web filtering using SquidGuard&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;First, get the blacklists&lt;/p&gt;
&lt;pre class="literal-block"&gt;
update webproxy blacklists
&lt;/pre&gt;
&lt;p&gt;Will take a long time to build the adult database. You probably want to do it in a ssh terminal
and not in the web CLI, because the latter will timeout.&lt;/p&gt;
&lt;pre class="literal-block"&gt;
set service webproxy listen-address 192.168.9.1
set service webproxy url-filtering squidguard allow-ipaddr-url
set service webproxy url-filtering squidguard block-category ads
set service webproxy url-filtering squidguard block-category malware
set service webproxy url-filtering squidguard block-category phishing
set service webproxy url-filtering squidguard auto-update update-hour 15
set service webproxy url-filtering squidguard redirect-url &amp;quot;http://192.168.9.1/cgi-bin/squidGuard-simple.cgi?targetclass=%t&amp;amp;url=%u&amp;quot;
&lt;/pre&gt;
&lt;p&gt;I'm not convinced I'll stick with the ad blocks, as the redirects cause my browsing sessions to sometimes
fail.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="qos-for-voip-calls"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#toc-entry-4"&gt;4&amp;nbsp;&amp;nbsp;&amp;nbsp;QOS for VOIP calls&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Taken directly from &lt;a class="reference external" href="https://community.ubnt.com/t5/EdgeMAX-Configuration-Examples/EdgeMAX-Quality-of-Service-for-Voice-Over-IP-QoS-for-VoIP/ta-p/529077"&gt;this page&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Assumes your LAN is on eth0, Internet is eth1, and 30/6Mbps connection.&lt;/p&gt;
&lt;pre class="literal-block"&gt;
# Set-up the details of the DownStream Policy
set traffic-policy shaper DownStream description &amp;quot;DownStream QoS policy&amp;quot;
set traffic-policy shaper DownStream bandwidth 30000kbit
set traffic-policy shaper DownStream class 10 description &amp;quot;RTP&amp;quot;
set traffic-policy shaper DownStream class 10 bandwidth 25%
set traffic-policy shaper DownStream class 10 ceiling 100%
set traffic-policy shaper DownStream class 10 match VOIP-RTP ip dscp 46
set traffic-policy shaper DownStream class 20 description &amp;quot;SIP&amp;quot;
set traffic-policy shaper DownStream class 20 bandwidth 5%
set traffic-policy shaper DownStream class 20 ceiling 100%
set traffic-policy shaper DownStream class 20 match VOIP-SIP ip dscp 24
set traffic-policy shaper DownStream default bandwidth 70%
set traffic-policy shaper DownStream default ceiling 100%
#  Set-up the details of the UpStream Policy
set traffic-policy shaper UpStream description &amp;quot;UpStream QoS policy&amp;quot;
set traffic-policy shaper UpStream bandwidth 6000kbit
set traffic-policy shaper UpStream class 10 description &amp;quot;RTP&amp;quot;
set traffic-policy shaper UpStream class 10 bandwidth 50%
set traffic-policy shaper UpStream class 10 ceiling 100%
set traffic-policy shaper UpStream class 10 match VOIP-RTP ip dscp 46
set traffic-policy shaper UpStream class 20 description &amp;quot;SIP&amp;quot;
set traffic-policy shaper UpStream class 20 bandwidth 10%
set traffic-policy shaper UpStream class 20 ceiling 100%
set traffic-policy shaper UpStream class 20 match VOIP-SIP ip dscp 24
set traffic-policy shaper UpStream default bandwidth 40%
set traffic-policy shaper UpStream default ceiling 100%
# Apply the policies to the interfaces
set interfaces ethernet eth0 traffic-policy out DownStream
set interfaces ethernet eth1 traffic-policy out UpStream
# Commit, Save, and Exit
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="installing-pound-reverse-proxy"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#toc-entry-5"&gt;5&amp;nbsp;&amp;nbsp;&amp;nbsp;Installing Pound Reverse Proxy&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;First, follow the &lt;a class="reference external" href="http://wiki.ubnt.com/Add_Other_Debian_Packages_to_EdgeOS"&gt;instructions here&lt;/a&gt; to add Debian packages
with apt.&lt;/p&gt;
&lt;pre class="literal-block"&gt;
configure
set system package repository wheezy components 'main contrib non-free'
set system package repository wheezy distribution squeeze
set system package repository wheezy url http://http.us.debian.org/debian

set system package repository wheezy-security components main
set system package repository wheezy-security distribution squeeze/updates
set system package repository wheezy-security url http://security.debian.org
commit
save
exit
sudo apt-get update
&lt;/pre&gt;
&lt;p&gt;Then, install Pound:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
sudo apt-get install pound
&lt;/pre&gt;
&lt;p&gt;You'll need to set the bind port to something other than 80, and follow the rest of the instructions &lt;a class="reference external" href="http://virantha.com/2014/03/08/pound-reverse-proxy-easy-to-use-hostnames/"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="setting-up-vpn-for-example-your-ios-device"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#toc-entry-6"&gt;6&amp;nbsp;&amp;nbsp;&amp;nbsp;Setting up VPN (for example, your iOS device)&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Follow the &lt;a class="reference external" href="https://help.ubnt.com/hc/en-us/articles/205146070-EdgeMAX-L2TP-Server"&gt;procedure here&lt;/a&gt; .  Here is the relevant configuration after following all the commands:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
admin&amp;#64;ubnt# show vpn ipsec
 auto-firewall-nat-exclude disable
 ipsec-interfaces {
     interface eth1
 }
 nat-networks {
     allowed-network 0.0.0.0/0 {
     }
 }
 nat-traversal enable

admin&amp;#64;ubnt# show vpn l2tp
 remote-access {
     authentication {
         local-users {
             username virantha {
                 password **************
             }
         }
         mode local
     }
     client-ip-pool {
         start 192.168.101.2
         stop 192.168.101.100
     }
     dhcp-interface eth1
     dns-servers {
         server-1 192.168.9.1
     }
     ipsec-settings {
         authentication {
             mode pre-shared-secret
             pre-shared-secret **************
         }
         ike-lifetime 3600
     }
     mtu 1492
 }

admin&amp;#64;ubnt# show firewall name WAN_LOCAL
 name WAN_LOCAL {
     default-action drop
     description &amp;quot;WAN to router&amp;quot;
     rule 1 {
         action accept
         description &amp;quot;Allow L2tp&amp;quot;
         destination {
             port 500,1701,4500
         }
         log disable
         protocol udp
     }
     rule 2 {
         action accept
         description ESP
         log disable
         protocol esp
     }
    .
    .
    .
 }
&lt;/pre&gt;
&lt;p&gt;If for some reason you forget all the passwords and secrets, you can get a list of them by doing:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
configure
show vpn l2tp
&lt;/pre&gt;
&lt;/div&gt;
</content><category term="Tech"></category><category term="router"></category></entry><entry><title>Installing Ubuntu 14.04 LTS (Trusty Tahir) VM on a XenServer 6.2 host</title><link href="https://virantha.com/2014/05/21/ubuntu-14-04-trusty-on-xenserver-62/" rel="alternate"></link><published>2014-05-21T13:12:00-04:00</published><updated>2014-05-21T13:12:00-04:00</updated><author><name>virantha</name></author><id>tag:virantha.com,2014-05-21:/2014/05/21/ubuntu-14-04-trusty-on-xenserver-62/</id><summary type="html">&lt;p&gt;I had a hard time getting Xenserver 6.2 to install a new VM with the latest
long-term-support version of Ubuntu (14.04).  The process documented below, pieced together from
several posts, leads to a fairly straight-forward install.&lt;/p&gt;
&lt;div class="section" id="fix-your-pygrub-on-the-xenserver-host"&gt;
&lt;h2&gt;Fix your pygrub on the Xenserver host&lt;/h2&gt;
&lt;p&gt;Based on &lt;a class="reference external" href="http://ubuntuforums.org/showthread.php?t=2216358&amp;amp;page=2&amp;amp;p=13006428#post13006428"&gt;this post&lt;/a&gt;, do â€¦&lt;/p&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;I had a hard time getting Xenserver 6.2 to install a new VM with the latest
long-term-support version of Ubuntu (14.04).  The process documented below, pieced together from
several posts, leads to a fairly straight-forward install.&lt;/p&gt;
&lt;div class="section" id="fix-your-pygrub-on-the-xenserver-host"&gt;
&lt;h2&gt;Fix your pygrub on the Xenserver host&lt;/h2&gt;
&lt;p&gt;Based on &lt;a class="reference external" href="http://ubuntuforums.org/showthread.php?t=2216358&amp;amp;page=2&amp;amp;p=13006428#post13006428"&gt;this post&lt;/a&gt;, do the following:&lt;/p&gt;
&lt;ol class="arabic"&gt;
&lt;li&gt;&lt;p class="first"&gt;Login as root on your Xenserver host (dom0):&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;Edit the file &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;/usr/lib/python2.4/site-packages/grub/GrubConf.py&lt;/span&gt;&lt;/tt&gt;.&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last"&gt;
&lt;li&gt;&lt;p class="first"&gt;Change line 428 from:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
if arg.strip() == &amp;quot;${saved_entry}&amp;quot;:
&lt;/pre&gt;
&lt;p&gt;into:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
if arg.strip() == &amp;quot;${saved_entry}&amp;quot; or arg.strip() == &amp;quot;${next_entry}&amp;quot;:
&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Apparently this is patched in the xenserver sources, but no idea why there's no update to the release yet.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="create-a-new-vm-template-for-xencenter"&gt;
&lt;h2&gt;Create a new VM template for XenCenter&lt;/h2&gt;
&lt;p&gt;Now, &lt;a class="reference external" href="http://invalidlogic.com/2012/05/01/deploying-ubuntu-12-04-on-xenserver-made-easy/"&gt;make a new template&lt;/a&gt;
that you can use in XenCenter to create a Ubuntu &lt;tt class="docutils literal"&gt;Trusty&lt;/tt&gt; VM.&lt;/p&gt;
&lt;ol class="arabic"&gt;
&lt;li&gt;&lt;p class="first"&gt;Login as root on your Xenserver host (dom0):&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Execute the following 3 commands:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
TEMPLATE_UUID=`xe template-list name-label=&amp;quot;Ubuntu Lucid Lynx 10.04 (64-bit)&amp;quot; params=uuid --minimal`
NEW_TEMPLATE_UUID=`xe vm-clone uuid=$TEMPLATE_UUID new-name-label=&amp;quot;Ubuntu Trusty 14.04 (64-bit)&amp;quot;`
xe template-param-set other-config:default_template=true other-config:debian-release=trusty uuid=$NEW_TEMPLATE_UUID
&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class="section" id="create-the-vm-from-template-using-xencenter"&gt;
&lt;h2&gt;Create the VM from template using XenCenter&lt;/h2&gt;
&lt;p&gt;Now, run XenCenter on a Windows box, and go to &lt;tt class="docutils literal"&gt;VM &lt;span class="pre"&gt;-&amp;gt;&lt;/span&gt; New VM&lt;/tt&gt;, and scroll down to this new template you created:&lt;/p&gt;
&lt;div class="figure"&gt;
&lt;img alt="Something" src="/images/2014/ubuntu-xenserver/templateview.png" /&gt;
&lt;/div&gt;
&lt;p&gt;Next, when, prompted for install media, use the following URL:&lt;/p&gt;
&lt;blockquote&gt;
&lt;a class="reference external" href="http://us.archive.ubuntu.com/ubuntu"&gt;http://us.archive.ubuntu.com/ubuntu&lt;/a&gt;&lt;/blockquote&gt;
&lt;div class="figure"&gt;
&lt;img alt="Something" src="/images/2014/ubuntu-xenserver/installmedia.png" /&gt;
&lt;/div&gt;
&lt;p&gt;And follow the remaining steps in the normal way.&lt;/p&gt;
&lt;/div&gt;
</content><category term="Snippets"></category><category term="virtualization"></category><category term="linux"></category></entry><entry><title>Changing tab stops in Vim</title><link href="https://virantha.com/2014/05/12/existing-tab-stop-manipulation-in-vim/" rel="alternate"></link><published>2014-05-12T09:46:00-04:00</published><updated>2014-05-12T09:46:00-04:00</updated><author><name>virantha</name></author><id>tag:virantha.com,2014-05-12:/2014/05/12/existing-tab-stop-manipulation-in-vim/</id><summary type="html">&lt;p&gt;I normally use spaces in my files instead of tabs for indentation, with 4 being my default indent width.  Sometimes, I need
to change this on existing files to 2, so for the most part, the following sequence works.  First,&lt;/p&gt;
&lt;pre class="literal-block"&gt;
set ts=4 sts=4 noet
retab!
&lt;/pre&gt;
&lt;p&gt;This changes every â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;I normally use spaces in my files instead of tabs for indentation, with 4 being my default indent width.  Sometimes, I need
to change this on existing files to 2, so for the most part, the following sequence works.  First,&lt;/p&gt;
&lt;pre class="literal-block"&gt;
set ts=4 sts=4 noet
retab!
&lt;/pre&gt;
&lt;p&gt;This changes every 4-space to a tab, then retabs (exclamation point is important).&lt;/p&gt;
&lt;p&gt;Then, change the tabs into spaces:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
set ts=2 sts=2 et
retab!
&lt;/pre&gt;
&lt;p&gt;You can also setup your vimrc to have certain files like HTML use a different tabstop than  your regular files:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
autocmd FileType html :setlocal sw=2 ts=2 sts=2
&lt;/pre&gt;
</content><category term="Snippets"></category><category term="vim"></category></entry><entry><title>Setting up Google Oauth2 API</title><link href="https://virantha.com/2014/05/08/setting-up-new-project-using-google-oauth2-api/" rel="alternate"></link><published>2014-05-08T11:46:00-04:00</published><updated>2014-05-08T11:46:00-04:00</updated><author><name>virantha</name></author><id>tag:virantha.com,2014-05-08:/2014/05/08/setting-up-new-project-using-google-oauth2-api/</id><summary type="html">&lt;p class="first last"&gt;This documents the steps necessary to enable Google Oauth in your web application for authentication.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;This documents the steps necessary to enable Google Oauth in your web application for authentication.&lt;/p&gt;
&lt;p&gt;Go to &lt;a class="reference external" href="https://console.developers.google.com/project"&gt;https://console.developers.google.com/project&lt;/a&gt; and following the steps below:&lt;/p&gt;
&lt;ol class="arabic"&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;Create your project&lt;/dt&gt;
&lt;dd&gt;&lt;div class="first last figure"&gt;
&lt;img alt="Something" src="/images/2014/google-oauth/page1.jpg" /&gt;
&lt;/div&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;Enter project name/id&lt;/dt&gt;
&lt;dd&gt;&lt;div class="first last figure"&gt;
&lt;img alt="Something" src="/images/2014/google-oauth/page2.jpg" /&gt;
&lt;/div&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;Go to APIs &amp;amp; auth&lt;/dt&gt;
&lt;dd&gt;&lt;div class="first last figure"&gt;
&lt;img alt="Something" src="/images/2014/google-oauth/page3.jpg" /&gt;
&lt;/div&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;Click on credentials&lt;/dt&gt;
&lt;dd&gt;&lt;div class="first last figure"&gt;
&lt;img alt="Something" src="/images/2014/google-oauth/page4.jpg" /&gt;
&lt;/div&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;Create a new client id in the Oauth section&lt;/dt&gt;
&lt;dd&gt;&lt;div class="first last figure"&gt;
&lt;img alt="Something" src="/images/2014/google-oauth/page5.jpg" /&gt;
&lt;/div&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;As a web application, fill in where the request will be coming in from to Google, as well as the callback URL so Google can send you the auth token.&lt;/dt&gt;
&lt;dd&gt;&lt;div class="first last figure"&gt;
&lt;img alt="Something" src="/images/2014/google-oauth/page6.jpg" /&gt;
&lt;/div&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;Now, use the Client ID for your application (if you're doing this server side, you may need the Client Secret as well).  Finally, don't forget to go to the Consent Screen.&lt;/dt&gt;
&lt;dd&gt;&lt;div class="first last figure"&gt;
&lt;img alt="Something" src="/images/2014/google-oauth/page7.jpg" /&gt;
&lt;/div&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;And make sure there is something in the project name field (otherwise the google authentication window will give your user a very cryptic error message):&lt;/dt&gt;
&lt;dd&gt;&lt;div class="first last figure"&gt;
&lt;img alt="Something" src="/images/2014/google-oauth/page8.jpg" /&gt;
&lt;/div&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;/ol&gt;
</content><category term="Snippets"></category><category term="oauth"></category></entry><entry><title>Example of how to authenticate using Oauth2 in Ember.js using Implicit Grant (client-side)</title><link href="https://virantha.com/2014/05/07/ember-js-oauth2-implicit-grant-example/" rel="alternate"></link><published>2014-05-07T21:12:00-04:00</published><updated>2014-05-07T21:12:00-04:00</updated><author><name>virantha</name></author><id>tag:virantha.com,2014-05-07:/2014/05/07/ember-js-oauth2-implicit-grant-example/</id><summary type="html">&lt;p&gt;This post will show a quick and complete example on how to authenticate someone
using their Google credentials in your &lt;a class="reference external" href="http://emberjs.com"&gt;Ember.js&lt;/a&gt;  web
application.  This uses the implicit-grant scheme in Oauth2, so everything
happens on the client side, without exposing the user's Google credentials or
requiring a back-end server.  Obviously â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;This post will show a quick and complete example on how to authenticate someone
using their Google credentials in your &lt;a class="reference external" href="http://emberjs.com"&gt;Ember.js&lt;/a&gt;  web
application.  This uses the implicit-grant scheme in Oauth2, so everything
happens on the client side, without exposing the user's Google credentials or
requiring a back-end server.  Obviously, at some point you'll have a server to
store the authentication token and persist other user information, but the
whole authentication infrastructure will stay on the client.&lt;/p&gt;
&lt;div class="contents topic" id="table-of-contents"&gt;
&lt;p class="topic-title"&gt;&lt;a class="reference internal" href="#top"&gt;Table of Contents&lt;/a&gt;&lt;/p&gt;
&lt;ul class="auto-toc simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#what-we-re-building" id="toc-entry-1"&gt;1&amp;nbsp;&amp;nbsp;&amp;nbsp;What we're building&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#getting-the-code-and-running-it" id="toc-entry-2"&gt;2&amp;nbsp;&amp;nbsp;&amp;nbsp;Getting the code and running it&lt;/a&gt;&lt;ul class="auto-toc"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#pre-requisites" id="toc-entry-3"&gt;2.1&amp;nbsp;&amp;nbsp;&amp;nbsp;Pre-requisites&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#source-code" id="toc-entry-4"&gt;2.2&amp;nbsp;&amp;nbsp;&amp;nbsp;Source code&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#code-discussion" id="toc-entry-5"&gt;3&amp;nbsp;&amp;nbsp;&amp;nbsp;Code discussion&lt;/a&gt;&lt;ul class="auto-toc"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#ember-index-html" id="toc-entry-6"&gt;3.1&amp;nbsp;&amp;nbsp;&amp;nbsp;Ember index.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#ember-app-js" id="toc-entry-7"&gt;3.2&amp;nbsp;&amp;nbsp;&amp;nbsp;Ember app.js&lt;/a&gt;&lt;ul class="auto-toc"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#initialize" id="toc-entry-8"&gt;3.2.1&amp;nbsp;&amp;nbsp;&amp;nbsp;Initialize&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#define-routes" id="toc-entry-9"&gt;3.2.2&amp;nbsp;&amp;nbsp;&amp;nbsp;Define routes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#simpleauth-boiler-plate" id="toc-entry-10"&gt;3.2.3&amp;nbsp;&amp;nbsp;&amp;nbsp;SimpleAuth boiler-plate&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#oauth2-authenticator" id="toc-entry-11"&gt;3.2.4&amp;nbsp;&amp;nbsp;&amp;nbsp;Oauth2 Authenticator&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#summary" id="toc-entry-12"&gt;3.3&amp;nbsp;&amp;nbsp;&amp;nbsp;Summary&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="what-we-re-building"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#toc-entry-1"&gt;1&amp;nbsp;&amp;nbsp;&amp;nbsp;What we're building&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I'm going to use a toy example that displays a list of events to an authenticated user.
When you first go to the app, it will show you nothing:&lt;/p&gt;
&lt;div class="figure"&gt;
&lt;img alt="Logged out view" src="/images/2014/ember-oauth/loggedout.jpg" /&gt;
&lt;/div&gt;
&lt;p&gt;Any attempt to access it without being authenticated will redirect to the login
page, which will pop-up a window to enter your Google credentials.&lt;/p&gt;
&lt;div class="figure"&gt;
&lt;img alt="Login page" src="/images/2014/ember-oauth/login_page.jpg" /&gt;
&lt;/div&gt;
&lt;p&gt;Once the credentials are entered succesfully, the app will automatically redirect to your events list.&lt;/p&gt;
&lt;div class="figure"&gt;
&lt;img alt="Logged in view" src="/images/2014/ember-oauth/loggedin.jpg" /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="getting-the-code-and-running-it"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#toc-entry-2"&gt;2&amp;nbsp;&amp;nbsp;&amp;nbsp;Getting the code and running it&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="pre-requisites"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#toc-entry-3"&gt;2.1&amp;nbsp;&amp;nbsp;&amp;nbsp;Pre-requisites&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;This method relies on a couple of great third-party extensions for Ember, which do all the heavy lifting
in my example.&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://ember-simple-auth.simplabs.com/"&gt;Ember Simple Auth&lt;/a&gt; - This really flexible and simple library
provides the basic framework for authentication and restricting certain routes to authenticated users.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/amkirwan/ember-oauth2"&gt;Ember Oauth2&lt;/a&gt; - A simple but cool library to handle the communication
with Oauth2 services like Google or Facebook.&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class="section" id="source-code"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#toc-entry-4"&gt;2.2&amp;nbsp;&amp;nbsp;&amp;nbsp;Source code&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;You can find the source on &lt;a class="reference external" href="https://github.com/virantha/ember-oauth-example"&gt;github&lt;/a&gt;.  Just
&lt;cite&gt;git clone&lt;/cite&gt; this repository, and start a simple web server in that directory and you should be good
to go.  For example, if you're on a Mac, you can just do:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git&lt;span class="w"&gt; &lt;/span&gt;clone&lt;span class="w"&gt; &lt;/span&gt;https://github.com/virantha/ember-oauth-example.git
&lt;span class="nb"&gt;cd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;ember-oauth-example
python&lt;span class="w"&gt; &lt;/span&gt;-m&lt;span class="w"&gt; &lt;/span&gt;SimpleHttpServer&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;5000&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and then go visit &lt;a class="reference external" href="http://127.0.0.1:5000/"&gt;http://127.0.0.1:5000/&lt;/a&gt; in your browser.  Remember, when dealing with Oauth, for local
testing, always use 127.0.0.1 instead of localhost, because a lot of the service providers don't like
providing authentication tokens to localhost.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="code-discussion"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#toc-entry-5"&gt;3&amp;nbsp;&amp;nbsp;&amp;nbsp;Code discussion&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="ember-index-html"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#toc-entry-6"&gt;3.1&amp;nbsp;&amp;nbsp;&amp;nbsp;Ember index.html&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The html is pretty trivial, but here's a quick walk through:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;html&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;head&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;meta&lt;/span&gt; &lt;span class="na"&gt;charset&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;utf-8&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;title&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Events&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;title&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;link&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;//netdna.bootstrapcdn.com/bootstrap/3.0.0/css/bootstrap.min.css&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;rel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;stylesheet&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;head&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/x-handlebars&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;nav&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;navbar navbar-default&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;role&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;navigation&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;container-fluid&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;ul&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;nav navbar-nav&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;li&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="nx"&gt;link&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;events&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;&lt;span class="nx"&gt;List&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;of&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;Events&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt;&lt;span class="err"&gt;/link-to}}&amp;lt;/li&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;/ul&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;                    &lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;session&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isAuthenticated&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;
&lt;span class="w"&gt;                        &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;invalidateSession&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;btn btn-danger navbar-btn navbar-left&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Logout&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;/a&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;                        &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;navbar-right&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Logged&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kr"&gt;as&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt;&lt;span class="nx"&gt;session&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;userFn&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt;&lt;span class="nx"&gt;session&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;userLn&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;/p&lt;/span&gt;
&lt;span class="w"&gt;                    &lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;
&lt;span class="w"&gt;                        &lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="nx"&gt;link&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;login&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;btn navbar-btn navbar-left&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;&lt;span class="nx"&gt;Login&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt;&lt;span class="err"&gt;/link-to}}&lt;/span&gt;
&lt;span class="w"&gt;                    &lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt;&lt;span class="err"&gt;/if}}&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;/div&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;/nav&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt;&lt;span class="nx"&gt;outlet&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The first script is our main application outlet for Ember.  Obviously, it's a &lt;a class="reference external" href="http://handlebarsjs.com"&gt;handlebars&lt;/a&gt; template, and
it defines a quick &lt;a class="reference external" href="http://getbootstrap.com"&gt;Bootstrap&lt;/a&gt; navigation bar that has a link to our Events page.  After that,
it has a conditional statement that checks if the session is authenticated. If it is, it displays
the logout button as well as some user information retrieved from Google after a successful
authentication.  Otherwise, it just links to our Login route.&lt;/p&gt;
&lt;p&gt;Here's the next template that handles the listing of the Events:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/x-handlebars&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;data-template-name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;events&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;table&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;table table-striped table-bordered table-condensed&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;thead&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;tr&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;th&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;/th&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;th&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Event&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;/th&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;/tr&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;/thead&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;tbody&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="nx"&gt;each&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;model&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;tr&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;td&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt;&lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;/td&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;td&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;/td&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;/tr&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt;&lt;span class="err"&gt;/each}}&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;/tbody&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;/table&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;/div&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In this &lt;tt class="docutils literal"&gt;events&lt;/tt&gt; template, we just display a table and for each row, we iterate through an
array of events returned by the &lt;tt class="docutils literal"&gt;EventsModel&lt;/tt&gt; in our Ember app, and display the date and title per
event.  Nothing in this template has any reference to authentication; all the protecting is done
in the app itself as we'll see shortly.&lt;/p&gt;
&lt;p&gt;Finally, we need a &lt;tt class="docutils literal"&gt;Login&lt;/tt&gt; template as shown below:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/x-handlebars&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;data-template-name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;login&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;page-header&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Login&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;/h1&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;/div&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;#&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt;&lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;authenticate&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Login&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;using&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;Google&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;/a&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;/div&amp;gt;&lt;/span&gt;

&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;errorMessage&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;alert alert-danger&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;strong&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Login&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;failed&lt;/span&gt;&lt;span class="o"&gt;:&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;/strong&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;code&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt;&lt;span class="nx"&gt;errorMessage&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;/code&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;/p&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;/div&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt;&lt;span class="err"&gt;/if}}&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This just shows link with an &lt;tt class="docutils literal"&gt;authenticate&lt;/tt&gt; action that will be triggered in our
Authenticator in our app.  In addition, it has an additional rendering part to display
any authentication errors (e.g. if the user decided not to authorize access to their information. )&lt;/p&gt;
&lt;p&gt;Finally, we have all the javascript includes.  I've gone ahead and bundled the dependencies in the
example code, but usually this would be more modular and perhaps pointing to a CDN:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;jquery.js&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;handlebars.js&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;ember.js&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;ember-simple-auth.js&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;ember-oauth2.js&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;//netdna.bootstrapcdn.com/bootstrap/3.0.0/js/bootstrap.min.js&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;app.js&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;html&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="ember-app-js"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#toc-entry-7"&gt;3.2&amp;nbsp;&amp;nbsp;&amp;nbsp;Ember app.js&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Now, let's discuss the second part of our app, the main javascript code that implements
the Ember App, located in &lt;tt class="docutils literal"&gt;app.js&lt;/tt&gt;.&lt;/p&gt;
&lt;div class="section" id="initialize"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#toc-entry-8"&gt;3.2.1&amp;nbsp;&amp;nbsp;&amp;nbsp;Initialize&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Here, we initialize our authentication plugins as well as the authorizer.  This is taken
straight from the Ember-Simple-Auth guides:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="nx"&gt;Ember&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Application&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;initializer&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
&lt;span class="w"&gt;         &lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;authentication&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;         &lt;/span&gt;&lt;span class="nx"&gt;initialize&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;container&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;application&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;             &lt;/span&gt;&lt;span class="nx"&gt;container&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;register&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;authenticator:custom&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;GoogleAuthenticator&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;             &lt;/span&gt;&lt;span class="nx"&gt;container&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;register&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;authorizer:custom&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;CustomAuthorizer&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;             &lt;/span&gt;&lt;span class="nx"&gt;Ember&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;SimpleAuth&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;container&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;application&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;                 &lt;/span&gt;&lt;span class="nx"&gt;authorizerFactory&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;authorizer:custom&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;             &lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="w"&gt;         &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="p"&gt;...&lt;/span&gt;

&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Next, let's turn on some debugging so we can see what happens inside Ember as
we transition from route to route:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;Ember&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Application&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;create&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;LOG_TRANSITIONS&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;LOG_TRANSITIONS_INTERNAL&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;LOG_ACTIVE_GENERATION&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="define-routes"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#toc-entry-9"&gt;3.2.2&amp;nbsp;&amp;nbsp;&amp;nbsp;Define routes&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Now, here's the usual Ember code that defines our routes.  We only have two in this app,
a login page, and an events page.  Notice that the EventsRoute is now using
a special mixin &lt;tt class="docutils literal"&gt;AuthenticatedRouteMixin&lt;/tt&gt; that marks it as requiring authentication.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;// Add some routes&lt;/span&gt;
&lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Router&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;login&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;resource&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;events&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;events&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;


&lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;EventsRoute&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;Ember&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Route&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;extend&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;Ember&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;SimpleAuth&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;AuthenticatedRouteMixin&lt;/span&gt;&lt;span class="p"&gt;,{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;model&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Apr 26th&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Science festival&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="w"&gt;                 &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Apr 27th&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Swim class&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="simpleauth-boiler-plate"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#toc-entry-10"&gt;3.2.3&amp;nbsp;&amp;nbsp;&amp;nbsp;SimpleAuth boiler-plate&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Next up is the code that is common to any application that uses SimpleAuth, whether you're
using the default password authentication or the custom Oauth authenticator we're building.  All
this code is taken from the examples and documentation of this library.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;// Simple authentication&lt;/span&gt;
&lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Router&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;reopen&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;rootURL&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;index.html&amp;#39;&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ApplicationRoute&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;Ember&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Route&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;extend&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;Ember&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;SimpleAuth&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ApplicationRouteMixin&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;LoginRoute&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;Ember&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Route&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;extend&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;setupController&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;controller&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;model&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nx"&gt;controller&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;errorMessage&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;actions&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nx"&gt;sessionAuthenticationFailed&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;controller&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;errorMessage&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;LoginController&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;Ember&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Controller&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;extend&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;Ember&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;SimpleAuth&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;LoginControllerMixin&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;authenticatorFactory&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;authenticator:custom&amp;#39;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="c1"&gt;// The authorizer that injects the auth token into every api request&lt;/span&gt;
&lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;CustomAuthorizer&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;Ember&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;SimpleAuth&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Authorizers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Base&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;extend&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;authorize&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;jqXHR&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;requestOptions&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;session.isAuthenticated&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;Ember&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isEmpty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;session.token&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nx"&gt;jqXHR&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setRequestHeader&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Authorization&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Token: &amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;session.token&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can see in the &lt;tt class="docutils literal"&gt;LoginRoute&lt;/tt&gt; we have a authentication failure action handler that sets
the &lt;tt class="docutils literal"&gt;errorMessage&lt;/tt&gt; for the &lt;tt class="docutils literal"&gt;login&lt;/tt&gt; handlebars template in our &lt;tt class="docutils literal"&gt;index.html&lt;/tt&gt;.  The &lt;tt class="docutils literal"&gt;setupController&lt;/tt&gt;
is there to clear out any stale/old error messages.&lt;/p&gt;
&lt;div class="admonition note"&gt;
&lt;p class="first admonition-title"&gt;Note&lt;/p&gt;
&lt;p class="last"&gt;The final block shows the &lt;tt class="docutils literal"&gt;Authorizer&lt;/tt&gt; that will inject a custom header
into any back-end ajax calls with the session token (or authentication token,
if you want to be that crazy :-) ).  We don't need this here since we're not
even dealing with a back-end server, but I thought I'd leave this code in to
show you how easy it is to transfer the token to your REST API.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="oauth2-authenticator"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#toc-entry-11"&gt;3.2.4&amp;nbsp;&amp;nbsp;&amp;nbsp;Oauth2 Authenticator&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Now we come to the main portion of the example that leverages both the SimpleAuth library
as well as the Oauth library.  First there's a bit of configuration that needs to happen in
your app that specifies the oauth server.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nx"&gt;Ember&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;OAuth2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;config&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;google&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nx"&gt;clientId&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;XXXXXXXX.apps.googleusercontent.com&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nx"&gt;authBaseUri&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;https://accounts.google.com/o/oauth2/auth&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nx"&gt;redirectUri&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;http://127.0.0.1:5000/redirect.html&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nx"&gt;scope&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;https://www.googleapis.com/auth/userinfo.email https://www.googleapis.com/auth/userinfo.profile&amp;#39;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;oauth&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;Ember&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;OAuth2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;create&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nx"&gt;providerId&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;google&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You need to go to the &lt;a class="reference external" href="https://console.developers.google.com/project"&gt;developer google panel&lt;/a&gt;, and setup a new application
as detailed in &lt;a class="reference external" href="https://virantha.com/2014/05/08/setting-up-new-project-using-google-oauth2-api/"&gt;this post&lt;/a&gt;,
where you will enter things like application
name, authorized domain (use &lt;a class="reference external" href="http://127.0.0.1:5000"&gt;http://127.0.0.1:5000&lt;/a&gt;), and the redirect URL where
Google will send you the token via a GET request.&lt;/p&gt;
&lt;p&gt;In this case, we're going to use &lt;tt class="docutils literal"&gt;redirect.html&lt;/tt&gt; file that comes straight from
the docs for &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;ember-oauth2&lt;/span&gt;&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;html&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;head&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;title&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Authorize&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;title&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="kd"&gt;var&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;hash&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;location&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;hash&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;opener&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;oauth&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;trigger&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;redirect&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;hash&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;close&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;head&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;html&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Finally, here's the Ember code where we actually do the authentication:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;GoogleAuthenticator&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;Ember&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;SimpleAuth&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Authenticators&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Base&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;extend&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;restore&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;new&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;Ember&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;RSVP&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;reject&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;Ember&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isEmpty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;token&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="nx"&gt;reject&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;get_email&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;access_token&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="c1"&gt;// Call the google api with our token to get the user info&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;new&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;Ember&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;RSVP&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;reject&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="nx"&gt;Ember&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ajax&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt;         &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;https://www.googleapis.com/oauth2/v2/userinfo?access_token=&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;access_token&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;GET&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="nx"&gt;contentType&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;application/json&amp;#39;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="p"&gt;}).&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;xhr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="nx"&gt;reject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;authenticate&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;credentials&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="kd"&gt;var&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;_this&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;new&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;Ember&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;RSVP&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;reject&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="c1"&gt;// Setup handlers&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;oauth&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;success&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;stateObj&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="c1"&gt;// Setup the callback to resolve this function&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="nx"&gt;token&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getAccessToken&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="c1"&gt;// Get all the user info&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="nx"&gt;_this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;get_email&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;token&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;span class="w"&gt;                   &lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;resp&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;                       &lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;token&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;token&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                                &lt;/span&gt;&lt;span class="nx"&gt;userEmail&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;resp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                                &lt;/span&gt;&lt;span class="nx"&gt;userFn&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;resp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;given_name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                                &lt;/span&gt;&lt;span class="nx"&gt;userLn&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;resp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;family_name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                                &lt;/span&gt;&lt;span class="nx"&gt;userPic&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;resp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;picture&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                                &lt;/span&gt;&lt;span class="nx"&gt;userGender&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;resp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;gender&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                       &lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="w"&gt;                   &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="w"&gt;                   &lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;rej&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;                       &lt;/span&gt;&lt;span class="nx"&gt;reject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;rej&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;                   &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;               &lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;&lt;span class="c1"&gt;// oauth.on&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;oauth&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;error&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;reject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;);});&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;oauth&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;authorize&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;&lt;span class="c1"&gt;// return&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;invalidate&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="kd"&gt;var&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;_this&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;new&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;Ember&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;RSVP&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="c1"&gt;// Do something with your API&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The main entry point is &lt;tt class="docutils literal"&gt;authenticate&lt;/tt&gt; which gets triggered with the action in your
handlebars template.  Normally, it will submit the form with &lt;tt class="docutils literal"&gt;identifiation&lt;/tt&gt; (username)
and &lt;tt class="docutils literal"&gt;password&lt;/tt&gt; fields, which will be sent in via the &lt;tt class="docutils literal"&gt;credentials&lt;/tt&gt; hash, but for our purposes
we don't need any parameters.&lt;/p&gt;
&lt;p&gt;In this function, we basically return a new promise that does the following.&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Register a handler for &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;App.oauth.on('success')&lt;/span&gt;&lt;/tt&gt; that gets called by &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;ember-oauth2&lt;/span&gt;&lt;/tt&gt; if the
Google authentication succeeds.  At this point, we get the access token, and then using this
token, we call the Google API to get the user information that has been authorized to us. This
call to Google is done in the &lt;tt class="docutils literal"&gt;get_email&lt;/tt&gt; method that returns a promise.  With this information
we set more variables in our session object, such as first name, last name, email, etc.&lt;/li&gt;
&lt;li&gt;Register a handler for &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;App.oauth.on('error')&lt;/span&gt;&lt;/tt&gt; where we reject the promise with the error text
that will bubble its way into the &lt;tt class="docutils literal"&gt;errorMessage&lt;/tt&gt; in the handlebars template on our login route.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;And finally, we have the &lt;tt class="docutils literal"&gt;invalidate&lt;/tt&gt; function that gets called when the user hits the &lt;tt class="docutils literal"&gt;Logout&lt;/tt&gt;
button that clears out the session information.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="summary"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#toc-entry-12"&gt;3.3&amp;nbsp;&amp;nbsp;&amp;nbsp;Summary&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;And there you have it: A really concise example of how to use Oauth2 authentication using
implicit grant, all handled in the client-side Ember application!  Hope you find this useful!&lt;/p&gt;
&lt;div class="admonition note"&gt;
&lt;p class="first admonition-title"&gt;Note&lt;/p&gt;
&lt;p class="last"&gt;Please do let me know if you find any mistakes or more efficient ways of doing things. I'm
still fairly new to Ember, so I may have trodden over certain best-known-methods.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</content><category term="Tech"></category><category term="ember"></category><category term="javascript"></category><category term="oauth"></category></entry><entry><title>Replacing a Noisy Broan Bathroom Fan (Builder's grade 688)</title><link href="https://virantha.com/2014/04/15/replacing-noisy-fan-broan-bathroom-688/" rel="alternate"></link><published>2014-04-15T23:41:00-04:00</published><updated>2014-04-15T23:41:00-04:00</updated><author><name>virantha</name></author><id>tag:virantha.com,2014-04-15:/2014/04/15/replacing-noisy-fan-broan-bathroom-688/</id><summary type="html">&lt;p&gt;Here are my quick notes on replacing noisy contractor grade fans
in bathrooms.  The &lt;a class="amazon" href="http://www.amazon.com/gp/product/B00004TTZZ?ie=UTF8&amp;linkCode=as2&amp;camp=1634&amp;tag=virantha-20"&gt;Broan 688&lt;/a&gt; and variants
are common installations in new and rehabbed homes because they're
relatively cheap.  But boy, at 4 sones sound output, they're very loud
and irritating to leave running for a long time.&lt;/p&gt;
&lt;div class="contents topic" id="table-of-contents"&gt;
&lt;p class="topic-title"&gt;&lt;a class="reference internal" href="#top"&gt;Table â€¦&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;Here are my quick notes on replacing noisy contractor grade fans
in bathrooms.  The &lt;a class="amazon" href="http://www.amazon.com/gp/product/B00004TTZZ?ie=UTF8&amp;linkCode=as2&amp;camp=1634&amp;tag=virantha-20"&gt;Broan 688&lt;/a&gt; and variants
are common installations in new and rehabbed homes because they're
relatively cheap.  But boy, at 4 sones sound output, they're very loud
and irritating to leave running for a long time.&lt;/p&gt;
&lt;div class="contents topic" id="table-of-contents"&gt;
&lt;p class="topic-title"&gt;&lt;a class="reference internal" href="#top"&gt;Table of Contents:&lt;/a&gt;&lt;/p&gt;
&lt;ul class="auto-toc simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#background" id="toc-entry-1"&gt;1&amp;nbsp;&amp;nbsp;&amp;nbsp;Background&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#alternatives" id="toc-entry-2"&gt;2&amp;nbsp;&amp;nbsp;&amp;nbsp;Alternatives&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="background"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#toc-entry-1"&gt;1&amp;nbsp;&amp;nbsp;&amp;nbsp;Background&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The Broan 688 is very small, which limits your choices if you're retrofitting
an upgrade without cutting out a bigger hole in your drywall.  The dimensions
are basically 7.25&amp;quot; square, with a 3&amp;quot; round duct, and moves 50CFM of air.  A
lot of installs with long runs use 4&amp;quot; ducts, so you may have an adapter inside
your ceiling as well, to connect this. On the plus side, these fans are very
low-profile, so you don't need much height going up into your ceiling to fit
them.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="alternatives"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#toc-entry-2"&gt;2&amp;nbsp;&amp;nbsp;&amp;nbsp;Alternatives&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Here were my upgrade options, ordered in terms of increasing
difficulty and quality.  I picked the same low-profile ones so that I
could fit them without difficulty between my joists.  If you have 8&amp;quot; joists,
you could probably go with something cheaper that are not low-profile.&lt;/p&gt;
&lt;ol class="arabic"&gt;
&lt;li&gt;&lt;p class="first"&gt;Upgrade kit specifically designed for the Broan:&lt;/p&gt;
&lt;div&gt;&lt;a class="amazon" href="http://www.amazon.com/gp/product/B000NJT45A/ref=as_li_tf_il?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=B000NJT45A&amp;linkCode=am2&amp;tag=virantha-20"&gt;&lt;img src="http://images.amazon.com/images/P/B000NJT45A.01._SCMZZZZZZZ_.jpg"/&gt;Broan 690 60 CFM Bathroom Fan Upgrade Kit&lt;/a&gt;&lt;/div&gt;&lt;p&gt;This kit allows you to replace the fan without having to remove the
housing that's screwed into your ceiling joist, or rewiring the electrical
connections.  Just unscrew the old fan, disconnect the plug, and then
remove it, and screw in the upgrade and connect the plug.  Very easy, but
from reviews (like &lt;a class="reference external" href="FV-08VF2WhisperFit"&gt;this one&lt;/a&gt; ), it didn't seem that quiet at 3 sones, since you're just
reducing the sound output by about 25%.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Fan with 50CFM that's an exact fit for the ceiling cavity:&lt;/p&gt;
&lt;div&gt;&lt;a class="amazon" href="http://www.amazon.com/gp/product/B00C2N9CP2/ref=as_li_tf_il?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=B00C2N9CP2&amp;linkCode=am2&amp;tag=virantha-20"&gt;&lt;img src="http://images.amazon.com/images/P/B00C2N9CP2.01._SCMZZZZZZZ_.jpg"/&gt;Delta Breez Slim SLM50&lt;/a&gt;&lt;/div&gt;&lt;p&gt;This fan will let you use the same ceiling cavity (no need to cut out
more drywall), and it's much quieter at 1 sone.  This is the one that
I went with for one of my bathrooms, that worked really well.  It does
require that you remove the old enclosure and rewire the power, but
the good news is that the location of the vent, mounting screws, and
wiring inlets are almost identical to the Broan you're replacing, so
there's a very good chance you won't be in for any surprises during
the install.&lt;/p&gt;
&lt;p&gt;This measures right around 60dB in operation.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;A slightly higher 70CFM replacement that's the same dimensions as the previous one but louder at 2 sones:&lt;/p&gt;
&lt;div&gt;&lt;a class="amazon" href="http://www.amazon.com/gp/product/B00C2N9CS4/ref=as_li_tf_il?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=B00C2N9CS4&amp;linkCode=am2&amp;tag=virantha-20"&gt;&lt;img src="http://images.amazon.com/images/P/B00C2N9CS4.01._SCMZZZZZZZ_.jpg"/&gt;Delta Breez Slim 70CFM&lt;/a&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;An even quieter option per unit volume are the Panasonic WhisperFit options, like the 80CFM below, rated at 0.8 sones:&lt;/p&gt;
&lt;div&gt;&lt;a class="amazon" href="http://www.amazon.com/gp/product/B000G7M3GQ/ref=as_li_tf_il?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=B000G7M3GQ&amp;linkCode=am2&amp;tag=virantha-20"&gt;&lt;img src="http://images.amazon.com/images/P/B000G7M3GQ.01._SCMZZZZZZZ_.jpg"/&gt;Panasonic FV-08VF2 WhisperFit&lt;/a&gt;&lt;/div&gt;&lt;p&gt;This one has a much larger footprint (almost 12&amp;quot; square cutout, and 5.5&amp;quot;
up into the ceiling), and slightly different locations for wiring and
vents (this has a 4&amp;quot; duct, but comes with a 3&amp;quot; adapter).  I spent much
more time installing this one in my main bathroom, but was happy in the end at
the amount of air moved for the same sound (80CFM vs 50CFM against the
Delta Slim Breez for the same 60 decibels).&lt;/p&gt;
&lt;p&gt;Keep in mind that if you don't have anough clearance in your ceiling,
you may have to go with an even slimmer version of this called
&lt;a class="amazon" href="http://www.amazon.com/gp/product/B00ECMTXPA?ie=UTF8&amp;linkCode=as2&amp;camp=1634&amp;tag=virantha-20"&gt;Panasonic FV-10VS3&lt;/a&gt; that is &amp;lt; 3.5&amp;quot; in height,
but will require an oval to round duct adapter.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content><category term="DIY"></category><category term="diy"></category></entry><entry><title>Detecting color vs greyscale and blank pages during scanning</title><link href="https://virantha.com/2014/03/30/images-color-and-blank-detection/" rel="alternate"></link><published>2014-03-30T23:39:00-04:00</published><updated>2014-03-30T23:39:00-04:00</updated><author><name>virantha</name></author><id>tag:virantha.com,2014-03-30:/2014/03/30/images-color-and-blank-detection/</id><summary type="html">&lt;p&gt;Recently, I &lt;a class="reference external" href="http://virantha.com/category/scanpdf.html"&gt;needed&lt;/a&gt; a way to detect if a color scanned image was actually color or just contained greyscale/BW
content.  I also wanted to detect if an image was &amp;quot;blank&amp;quot;, or just a continuous shade of one color.  I couldn't
really find a simple solution on the web, so â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;Recently, I &lt;a class="reference external" href="http://virantha.com/category/scanpdf.html"&gt;needed&lt;/a&gt; a way to detect if a color scanned image was actually color or just contained greyscale/BW
content.  I also wanted to detect if an image was &amp;quot;blank&amp;quot;, or just a continuous shade of one color.  I couldn't
really find a simple solution on the web, so I pieced together my own using ImageMagick, as described below.  I
am not an image processing person by any means, but these quick hacks worked well in practice for my needs.&lt;/p&gt;
&lt;div class="section" id="detecting-color-vs-greyscale"&gt;
&lt;h2&gt;Detecting color vs greyscale&lt;/h2&gt;
&lt;p&gt;There are a lot of questions on forums about this (&lt;a class="reference external" href="http://www.imagemagick.org/discourse-server/viewtopic.php?f=1&amp;amp;t=19580"&gt;1&lt;/a&gt;, &lt;a class="reference external" href="http://programmers.stackexchange.com/questions/131067/image-color-grayscale-classification"&gt;2&lt;/a&gt;), but no solution seemed to work for me. I basically
needed to take a scanned color image, and detect if the original source was just a B&amp;amp;W document that I could
down-convert into a dithered 1-bit document to save space/processing time.&lt;/p&gt;
&lt;p&gt;The solution I came up with was similar to &lt;a class="reference external" href="http://www.imagemagick.org/Usage/compare/#type_general"&gt;this post&lt;/a&gt;
in the ImageMagick documentation&lt;/p&gt;
&lt;blockquote&gt;
Another technique is to do a direct 'best fit' of a 3 dimensional line to
all the colors (or a simplified Color Matrix of metrics) in the image.  The
error of the fit (generally average of the squares of the errors) gives you
a very good indication about how well the image fits to that line.&lt;/blockquote&gt;
&lt;p&gt;The observation is that a pure grey scale image will have colors that
individually have RGB components that are the same (RGB: #222222), so a plot of
greys in 3D space should lie on a single line going through the origin. A
monochromatic tint (sepia) similarly will also lie on a line with different
slope/intercept, and if there are any shade variations, there will be some
errors off the line.&lt;/p&gt;
&lt;p&gt;Finding this best-linear-fit in 3D space is overkill for my problem. I don't
need the line, and only need to deal with very small tints from grey (intercept
of the line will be very close to the origin).  So I just need to know if some
simple error metric that correlates to my image's colors deviation from the
best fit line is within some threshold.  Here's the solution I came up with
that I've verified works well at scanning different types of paper documents:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Quantize the number of colors in the image to some small number like 8.&lt;/li&gt;
&lt;li&gt;Quantize to 8-bits in each component.&lt;/li&gt;
&lt;li&gt;Generate a frequency table of those colors (optional, I didn't really end up using this)&lt;/li&gt;
&lt;li&gt;Take each of the top N colors, and calculate the mean of the differences between the RGB components.&lt;/li&gt;
&lt;li&gt;If the mean for any color is larger than some threshold (I used 20), then classify this image as color; if it is less, then I can safely assume the original image was greyscale or black and white.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I use ImageMagick for the first 3 actions, using the following command:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
convert IMAGE -colors 8 -depth 8 -format %c histogram:info:-
&lt;/pre&gt;
&lt;p&gt;This generates output like the following (small differences may arise depending on the image format):&lt;/p&gt;
&lt;pre class="literal-block"&gt;
 10831: ( 24, 26, 26,255) #181A1A srgba(24,26,26,1)
  4836: ( 55, 87, 79,255) #37574F srgba(55,87,79,1)
  6564: ( 77,138,121,255) #4D8A79 srgba(77,138,121,1)
  4997: ( 86, 96, 93,255) #56605D srgba(86,96,93,1)
  7005: ( 92,153,139,255) #5C998B srgba(92,153,139,1)
  2479: (143,118,123,255) #8F767B srgba(143,118,123,1)
  8870: (169,176,170,255) #A9B0AA srgba(169,176,170,1)
442906: (254,254,254,255) #FEFEFE srgba(254,254,254,1)
  1053: (  0,  0,  0,255) #000000 black
484081: (255,255,255,255) #FFFFFF white
&lt;/pre&gt;
&lt;p&gt;And here's my python code for parsing it (you can find this being used in &lt;a class="reference external" href="https://github.com/virantha/scanpdf/blob/master/scanpdf/scanpdf.py"&gt;scanpdf&lt;/a&gt;).  Note that I just use all
the colors instead of limiting it to the top N.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;cmd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;convert &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt; -colors 8 -depth 8 -format &lt;/span&gt;&lt;span class="si"&gt;%%&lt;/span&gt;&lt;span class="s2"&gt;c histogram:info:-&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;filename&lt;/span&gt;
&lt;span class="n"&gt;out&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cmd&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cmd&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;mLine&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;compile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;r&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&amp;quot;\s*(?P&amp;lt;count&amp;gt;\d+):\s*\(\s*(?P&amp;lt;R&amp;gt;\d+),\s*(?P&amp;lt;G&amp;gt;\d+),\s*(?P&amp;lt;B&amp;gt;\d+).+&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;colors&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;splitlines&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;matchLine&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;mLine&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;search&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;matchLine&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;color&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;matchLine&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;group&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;count&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                     &lt;span class="n"&gt;matchLine&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;group&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;R&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                     &lt;span class="n"&gt;matchLine&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;group&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;G&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                     &lt;span class="n"&gt;matchLine&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;group&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;B&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                     &lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="n"&gt;colors&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# sort&lt;/span&gt;
&lt;span class="n"&gt;colors&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;reverse&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="n"&gt;is_color&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;False&lt;/span&gt;
&lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;colors&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;colors&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="c1"&gt;# Calculate the mean differences between the RGB components&lt;/span&gt;
    &lt;span class="c1"&gt;# Shades of grey will be very close to zero in this metric...&lt;/span&gt;
    &lt;span class="n"&gt;diff&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;float&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="nb"&gt;abs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]),&lt;/span&gt;
                 &lt;span class="nb"&gt;abs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]),&lt;/span&gt;
                 &lt;span class="nb"&gt;abs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]),&lt;/span&gt;
                 &lt;span class="p"&gt;]))&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;diff&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;is_color&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;True&lt;/span&gt;
&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;is_color&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="detecting-blank-pages"&gt;
&lt;h2&gt;Detecting blank pages&lt;/h2&gt;
&lt;p&gt;For this, I originally started off with &lt;a class="reference external" href="http://dave.frop.net/blank_page_detection_command_line_imagemagick"&gt;post&lt;/a&gt;
and used the following command line:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
convert %s -shave 1%x1%  -format &amp;quot;%[fx:mean]&amp;quot; info:
&lt;/pre&gt;
&lt;p&gt;For a BW image (with one channel), This returns the average white value after
trimming off the edges of the image. So if the percentage is &amp;gt;0.97, I would say
the page was blank.  Unfortunately, this doesn't work for color images as the
channels will have information.&lt;/p&gt;
&lt;p&gt;My final idea was to use the image information in each channel, and
specifically the standard deviation, to identify images with information.  If
the standard deviation is higher, that means there is more variation in a
particular RGB channel, or in other words, more features in the image. So, I
just look at the standard deviation of each channel and if it's higher than a
threshold, I mark it as a non-blank page.  I use the ImageMagick &lt;tt class="docutils literal"&gt;identify
&lt;span class="pre"&gt;-verbose&lt;/span&gt;&lt;/tt&gt; tool to get this value:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;is_blank&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;identify -verbose &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;filename&lt;/span&gt;
    &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cmd&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;mStdDev&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;compile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&amp;quot;\s*standard deviation:\s*\d+\.\d+\s*\((?P&amp;lt;percent&amp;gt;\d+\.\d+)\).*&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;splitlines&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
        &lt;span class="n"&gt;match&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;mStdDev&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;search&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;match&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;stdev&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;float&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;match&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;group&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;percent&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;stdev&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mf"&gt;0.1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;False&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;True&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Obviously, any noise (high frequency variation) will also contribute to a
higher stdev, so at some point in the future, I might run some denoise filters
first, but for now I can live with the false positive non-blanks.&lt;/p&gt;
&lt;p&gt;That's it for this post.  Again, you can see how I used this in my own pdf scanning script, &lt;a class="reference external" href="https://github.com/virantha/scanpdf/blob/master/scanpdf/scanpdf.py"&gt;ScanPDF&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
</content><category term="Tech"></category><category term="python"></category><category term="imagemagick"></category></entry><entry><title>ScanPDF - Usage guide</title><link href="https://virantha.com/2014/03/30/scanpdf-usage-guide/" rel="alternate"></link><published>2014-03-30T23:13:00-04:00</published><updated>2014-03-30T23:13:00-04:00</updated><author><name>virantha</name></author><id>tag:virantha.com,2014-03-30:/2014/03/30/scanpdf-usage-guide/</id><summary type="html">&lt;p&gt;If you're looking for a simple way to use a multi-page scanner and get your
document into a PDF in Linux without any proprietary or commercial software,
then ScanPDF might be the solution.  I wrote it to quickly take the Linux SANE
scanner system output image files, and process them â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;If you're looking for a simple way to use a multi-page scanner and get your
document into a PDF in Linux without any proprietary or commercial software,
then ScanPDF might be the solution.  I wrote it to quickly take the Linux SANE
scanner system output image files, and process them into usable PDFs.  By
usable, I mean PDFs that maintain their original scanned resolution, omit blank
pages (if you're scanning in duplex mode, for example), preserve color unless
the original is greyscale/black and white, in which case they are intelligently
down-converted to B/W PDFs to save space.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Free and open-source software: ASL2 license&lt;/li&gt;
&lt;li&gt;Documentation: &lt;a class="reference external" href="http://virantha.github.io/scanpdf/html"&gt;http://virantha.github.io/scanpdf/html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Source: &lt;a class="reference external" href="https://github.com/virantha/scanpdf"&gt;https://github.com/virantha/scanpdf&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="section" id="features"&gt;
&lt;h2&gt;Features&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Uses SANE/scanadf to automatically scan to multi-page compressed PDFs&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://virantha.github.io/scanpdf/html"&gt;Integrates with ScanBd&lt;/a&gt; to respond to hardware button presses&lt;/li&gt;
&lt;li&gt;Automatically removes blank pages.&lt;/li&gt;
&lt;li&gt;Scans in color, and automatically down-converts into 1-bit B/W image for text/greyscale images&lt;/li&gt;
&lt;li&gt;Auto-crops to the proper page size.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="usage"&gt;
&lt;h2&gt;Usage:&lt;/h2&gt;
&lt;p&gt;The simplest way to use this is:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
scanpdf scan pdf &amp;lt;pdffile&amp;gt;
&lt;/pre&gt;
&lt;p&gt;This will first perform the scan, and then the conversion to PDF.  If you want
to split up the scan and the PDF conversion into two separate invocations (for
reasons clarified below), then you can do:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
scanpdf --tmpdir=tmp scan
scanpdf --tmpdir=tmp pdf &amp;lt;pdffile&amp;gt;
&lt;/pre&gt;
&lt;p&gt;One reason for the separation might be if you want to keep scanning documents
(very quick) while the post-processing (slower) for the PDF conversion is
taking place in the background.   For instance, if you're using the hardware
button on the scanner to initiate scans (as detailed in &lt;a class="reference external" href="http://virantha.com/2014/03/17/one-touch-scanning-with-fujitsu-scansnap-in-linux/"&gt;this&lt;/a&gt; document), then
you want to return immediately after the scan instead of waiting for the full
conversion to PDF has taken place.&lt;/p&gt;
&lt;p&gt;You can optionally use the following switches to control if you're putting pages face up or face down in the auto
document feeder, if you want to skip the blank page processing, adjust the blank page detection threshold, or add
additional post-processing using &lt;a class="reference external" href="http://unpaper.berlios.de"&gt;unpaper&lt;/a&gt;:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
--dpi=&amp;lt;dpi&amp;gt;                 DPI to scan in [default: 300]
--face-up=&amp;lt;true/false&amp;gt;      Face-up scanning [default: True]
--keep-blanks               Don't check for and remove blank pages
--blank-threshold=&amp;lt;ths&amp;gt;     Percentage of white to be marked as blank [default: 0.97]
--post-process              Run unpaper to deskew/clean up
&lt;/pre&gt;
&lt;p&gt;Right now, I'm assuming this is getting called via ScanBD, so I don't have the option to manually specify the
scanner.  If you really want to use this standalone, for now, please just set the &lt;tt class="docutils literal"&gt;SCANBD_DEVICE&lt;/tt&gt; environment
variable to your scanner device name before running this script.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="installation"&gt;
&lt;h2&gt;Installation&lt;/h2&gt;
&lt;pre class="literal-block"&gt;
$ pip install scanpdf
&lt;/pre&gt;
&lt;p&gt;Requires ImageMagick and SANE to be installed, for the command line tools:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;convert&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;identify&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;ps2pdf&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;scanadf&lt;/tt&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Also requires epstopdf.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="disclaimer"&gt;
&lt;h2&gt;Disclaimer&lt;/h2&gt;
&lt;p&gt;The software is distributed on an &amp;quot;AS IS&amp;quot; BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&lt;/p&gt;
&lt;/div&gt;
</content><category term="ScanPDF"></category><category term="scan"></category><category term="pdf"></category><category term="python"></category></entry><entry><title>Getting around Xcode 5.1 clang -mno-fused-madd error</title><link href="https://virantha.com/2014/03/24/clang-mavericks-error-workaround/" rel="alternate"></link><published>2014-03-24T15:21:00-04:00</published><updated>2014-03-24T15:21:00-04:00</updated><author><name>virantha</name></author><id>tag:virantha.com,2014-03-24:/2014/03/24/clang-mavericks-error-workaround/</id><summary type="html">&lt;p&gt;Recently updated to Xcode 5.1 on my Mavericks install, and when I went to update a few Python PyPI packages
like reportlab and fabric, I started hitting this error on the compile step:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
clang: error: unknown argument: '-mno-fused-madd' [-Wunused-command-line-argument-hard-error-in-future]
&lt;/pre&gt;
&lt;p&gt;After a little bit of googling, it seems like the â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;Recently updated to Xcode 5.1 on my Mavericks install, and when I went to update a few Python PyPI packages
like reportlab and fabric, I started hitting this error on the compile step:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
clang: error: unknown argument: '-mno-fused-madd' [-Wunused-command-line-argument-hard-error-in-future]
&lt;/pre&gt;
&lt;p&gt;After a little bit of googling, it seems like the workaround for now is to do the following:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;ARCHFLAGS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;-Wno-error&lt;span class="o"&gt;=&lt;/span&gt;unused-command-line-argument-hard-error-in-future&lt;span class="w"&gt; &lt;/span&gt;pip&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;--upgrade&lt;span class="w"&gt; &lt;/span&gt;reportlab&lt;span class="w"&gt; &lt;/span&gt;fabric
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that if you've already tried to install a package that had some C extensions for speedups that did not compile,
yet the non-spedup version did install, then run the following command to reinstall it with the above ARCHFLAGS
prefix [ref]Credit to &lt;a class="reference external" href="http://stackoverflow.com/questions/19548957/can-i-force-pip-to-reinstall-the-current-version"&gt;this post&lt;/a&gt; [/ref]:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pip&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;--upgrade&lt;span class="w"&gt; &lt;/span&gt;--reinstall&lt;span class="w"&gt; &lt;/span&gt;PACKAGE
&lt;/pre&gt;&lt;/div&gt;
</content><category term="Snippets"></category><category term="python"></category></entry><entry><title>One-touch scan enabling in Ubuntu Linux for the Fujitsu ScanSnap S1500</title><link href="https://virantha.com/2014/03/17/one-touch-scanning-with-fujitsu-scansnap-in-linux/" rel="alternate"></link><published>2014-03-17T12:11:00-04:00</published><updated>2014-03-17T12:11:00-04:00</updated><author><name>virantha</name></author><id>tag:virantha.com,2014-03-17:/2014/03/17/one-touch-scanning-with-fujitsu-scansnap-in-linux/</id><summary type="html">&lt;div class="contents topic" id="table-of-contents"&gt;
&lt;p class="topic-title"&gt;&lt;a class="reference internal" href="#top"&gt;Table of Contents:&lt;/a&gt;&lt;/p&gt;
&lt;ul class="auto-toc simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#building-scanbd" id="toc-entry-1"&gt;1&amp;nbsp;&amp;nbsp;&amp;nbsp;Building Scanbd&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#configuring-scanbd" id="toc-entry-2"&gt;2&amp;nbsp;&amp;nbsp;&amp;nbsp;Configuring Scanbd&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#custom-scan-script" id="toc-entry-3"&gt;3&amp;nbsp;&amp;nbsp;&amp;nbsp;Custom scan script&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#starting-scanbd-as-a-service" id="toc-entry-4"&gt;4&amp;nbsp;&amp;nbsp;&amp;nbsp;Starting Scanbd as a service&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;p&gt;Here's how I managed to get Linux to recognise scan button presses on the
S1500, and automatically initiate a scan to a pdf file.  You first
need to download &lt;a class="reference external" href="http://sourceforge.net/projects/scanbd/"&gt;Scanbd&lt;/a&gt; and â€¦&lt;/p&gt;</summary><content type="html">&lt;div class="contents topic" id="table-of-contents"&gt;
&lt;p class="topic-title"&gt;&lt;a class="reference internal" href="#top"&gt;Table of Contents:&lt;/a&gt;&lt;/p&gt;
&lt;ul class="auto-toc simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#building-scanbd" id="toc-entry-1"&gt;1&amp;nbsp;&amp;nbsp;&amp;nbsp;Building Scanbd&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#configuring-scanbd" id="toc-entry-2"&gt;2&amp;nbsp;&amp;nbsp;&amp;nbsp;Configuring Scanbd&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#custom-scan-script" id="toc-entry-3"&gt;3&amp;nbsp;&amp;nbsp;&amp;nbsp;Custom scan script&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#starting-scanbd-as-a-service" id="toc-entry-4"&gt;4&amp;nbsp;&amp;nbsp;&amp;nbsp;Starting Scanbd as a service&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;p&gt;Here's how I managed to get Linux to recognise scan button presses on the
S1500, and automatically initiate a scan to a pdf file.  You first
need to download &lt;a class="reference external" href="http://sourceforge.net/projects/scanbd/"&gt;Scanbd&lt;/a&gt; and install it. Unfortunately, there doesn't seem to be any
apt repository for Scanbd, so I had to download the source and build it.  Here's the
minimal setup needed to get this built, based on instructions on the web
&lt;a class="reference external" href="http://thehomeserverhandbook.com/2012/03/03/scanbd_part1"&gt;here&lt;/a&gt;, followed by updated
info that I pieced together on getting this enabled that didin't require xinetd, etc.&lt;/p&gt;
&lt;div class="section" id="building-scanbd"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#toc-entry-1"&gt;1&amp;nbsp;&amp;nbsp;&amp;nbsp;Building Scanbd&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;First, as root (&lt;tt class="docutils literal"&gt;sudo su -&lt;/tt&gt;), install the following packages to allow you to compile Scanbd:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;apt-get&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;build-essential
apt-get&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;libconfuse-dev&lt;span class="w"&gt; &lt;/span&gt;libusb-dev&lt;span class="w"&gt; &lt;/span&gt;libudev-dev&lt;span class="w"&gt; &lt;/span&gt;libdbus-1-dev&lt;span class="w"&gt; &lt;/span&gt;dbus&lt;span class="w"&gt; &lt;/span&gt;libsane-dev
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Next, get the source code for Scanbd and build it:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;/root
mkdir&lt;span class="w"&gt; &lt;/span&gt;src
&lt;span class="nb"&gt;cd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;src
wget&lt;span class="w"&gt; &lt;/span&gt;http://sourceforge.net/projects/scanbd/files/releases/scanbd--1.3.1.zip/download&lt;span class="w"&gt; &lt;/span&gt;-O&lt;span class="w"&gt; &lt;/span&gt;scanbd.zip
unzip&lt;span class="w"&gt; &lt;/span&gt;scanbd.zip
&lt;span class="nb"&gt;cd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&amp;lt;UNZIPPED&lt;span class="w"&gt; &lt;/span&gt;DIRECTORY&amp;gt;
./configure
make
make&lt;span class="w"&gt; &lt;/span&gt;install
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="configuring-scanbd"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#toc-entry-2"&gt;2&amp;nbsp;&amp;nbsp;&amp;nbsp;Configuring Scanbd&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Scanbd is now installed into &lt;tt class="docutils literal"&gt;/usr/local/sbin/scanbd&lt;/tt&gt;, and its configuration files are in
&lt;tt class="docutils literal"&gt;/usr/local/etc/scanbd&lt;/tt&gt;.  Follow similar instructions to &lt;a class="reference external" href="https://wiki.archlinux.org/index.php/Scanner_Button_Daemon"&gt;ArchLinux&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cp&lt;span class="w"&gt; &lt;/span&gt;-R&lt;span class="w"&gt; &lt;/span&gt;/etc/sane.d&lt;span class="w"&gt; &lt;/span&gt;/usr/local/etc/scanbd
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Modify &lt;tt class="docutils literal"&gt;/etc/sane.d/dll.conf&lt;/tt&gt; to only have the &lt;tt class="docutils literal"&gt;net&lt;/tt&gt; line uncommented, then update the &lt;tt class="docutils literal"&gt;/etc/sane.d/net.conf&lt;/tt&gt; to
have the following&lt;/p&gt;
&lt;pre class="literal-block"&gt;
connect_timeout = 3
localhost
&lt;/pre&gt;
&lt;p&gt;Now, do the following to startup the daemon that responds to button presses on the S1500&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;export&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;SANE_CONFIG_DIR&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/usr/local/etc/scanbd/sane.d/
/usr/local/sbin/scanbd&lt;span class="w"&gt; &lt;/span&gt;-df&lt;span class="w"&gt; &lt;/span&gt;-c&lt;span class="w"&gt; &lt;/span&gt;scanbd.conf
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can see messages in the syslog &lt;tt class="docutils literal"&gt;/var/log/syslog&lt;/tt&gt;.  After you run the command, it will take about 10 to 15 seconds
to detect and start listening to your scanner.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="custom-scan-script"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#toc-entry-3"&gt;3&amp;nbsp;&amp;nbsp;&amp;nbsp;Custom scan script&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The default script that gets executed when the button is pushed simply logs a message to syslog.  (the script is
&lt;tt class="docutils literal"&gt;/usr/local/etc/scanbd/test.script&lt;/tt&gt;). If you look in &lt;tt class="docutils literal"&gt;/usr/local/etc/scanbd/scanbd.conf&lt;/tt&gt;, you can set test.script
to your own shell script.  Here's my trigger script that is called &lt;tt class="docutils literal"&gt;scanadf.script&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/bin/bash&lt;/span&gt;
logger&lt;span class="w"&gt; &lt;/span&gt;-t&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;scanbd: &lt;/span&gt;&lt;span class="nv"&gt;$0&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Begin of &lt;/span&gt;&lt;span class="nv"&gt;$SCANBD_ACTION&lt;/span&gt;&lt;span class="s2"&gt; for device &lt;/span&gt;&lt;span class="nv"&gt;$SCANBD_DEVICE&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;

&lt;span class="nv"&gt;mydate&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;BLAH&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;awk&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;{ print strftime(&amp;quot;%Y%m%d_%H%M%S&amp;quot;) }&amp;#39;&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;
scanpdf&lt;span class="w"&gt; &lt;/span&gt;--dpi&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;300&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-d&lt;span class="w"&gt; &lt;/span&gt;scan&lt;span class="w"&gt; &lt;/span&gt;pdf&lt;span class="w"&gt; &lt;/span&gt;/home/virantha/scans/scan_&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;mydate&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;.pdf&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&amp;gt;&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&amp;gt;&lt;span class="w"&gt; &lt;/span&gt;/tmp/output.log

logger&lt;span class="w"&gt; &lt;/span&gt;-t&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;scanbd: &lt;/span&gt;&lt;span class="nv"&gt;$0&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;End   of &lt;/span&gt;&lt;span class="nv"&gt;$SCANBD_ACTION&lt;/span&gt;&lt;span class="s2"&gt; for device &lt;/span&gt;&lt;span class="nv"&gt;$SCANBD_DEVICE&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;First, it logs the start of the scan to the syslog, and then it gets the current date using awk/strftime
to use for the final pdf filename, and calls my &lt;tt class="docutils literal"&gt;scanpdf&lt;/tt&gt; python program that handles all the scanning/post processing
to pdf.  You can find &lt;a class="reference external" href="http://virantha.github.io/scanpdf/html/"&gt;scanpdf&lt;/a&gt; documentation online, with source on &lt;a class="reference external" href="https://github.com/virantha/scanpdf"&gt;github&lt;/a&gt;, and download on &lt;a class="reference external" href="https://pypi.python.org/pypi/scanpdf"&gt;PyPI&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The script as written is slightly suboptimal, in that scanpdf does some processing (removing blank pages, etc) that can
take some time, blocking the button response until it's done.  A better way would be to spawn a background job to
do this instead:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/bin/bash&lt;/span&gt;
logger&lt;span class="w"&gt; &lt;/span&gt;-t&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;scanbd: &lt;/span&gt;&lt;span class="nv"&gt;$0&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Begin of &lt;/span&gt;&lt;span class="nv"&gt;$SCANBD_ACTION&lt;/span&gt;&lt;span class="s2"&gt; for device &lt;/span&gt;&lt;span class="nv"&gt;$SCANBD_DEVICE&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;

&lt;span class="nv"&gt;mydate&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;BLAH&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;awk&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;{ print strftime(&amp;quot;%Y%m%d_%H%M%S&amp;quot;) }&amp;#39;&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;myfile&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/home/virantha/scans/scan_&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;mydate&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;.pdf&amp;quot;&lt;/span&gt;

scanpdf&lt;span class="w"&gt; &lt;/span&gt;--dpi&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;300&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;--tmpdir&lt;span class="o"&gt;=&lt;/span&gt;/tmp/&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;mydate&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;scan
scanpdf&lt;span class="w"&gt; &lt;/span&gt;--dpi&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;300&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;--tmpdir&lt;span class="o"&gt;=&lt;/span&gt;/tmp/&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;mydate&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;pdf&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;myfile&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;

logger&lt;span class="w"&gt; &lt;/span&gt;-t&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;scanbd: &lt;/span&gt;&lt;span class="nv"&gt;$0&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;End   of &lt;/span&gt;&lt;span class="nv"&gt;$SCANBD_ACTION&lt;/span&gt;&lt;span class="s2"&gt; for device &lt;/span&gt;&lt;span class="nv"&gt;$SCANBD_DEVICE&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This way, as soon as the paper is out of the scanner, you can load the next job and hit the scan button immediately;
the long-running post-processing job is run in the background.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="starting-scanbd-as-a-service"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#toc-entry-4"&gt;4&amp;nbsp;&amp;nbsp;&amp;nbsp;Starting Scanbd as a service&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Ubuntu uses upstart, so just create a conf file in /etc/init/scanbd like so:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Scanbd&lt;/span&gt;

&lt;span class="na"&gt;description &amp;quot;Scanbd service&amp;quot;&lt;/span&gt;
&lt;span class="na"&gt;author &amp;quot;Virantha Ekanayake&amp;quot;&lt;/span&gt;

&lt;span class="c1"&gt;# When to start the service&lt;/span&gt;
&lt;span class="na"&gt;start on runlevel [2345]&lt;/span&gt;

&lt;span class="c1"&gt;# When to stop the service&lt;/span&gt;
&lt;span class="na"&gt;stop on runlevel [016]&lt;/span&gt;

&lt;span class="c1"&gt;# Automatically restart process if crashed&lt;/span&gt;
&lt;span class="na"&gt;respawn&lt;/span&gt;

&lt;span class="c1"&gt;# Essentially lets upstart know the process will detach itself to the background&lt;/span&gt;
&lt;span class="na"&gt;expect fork&lt;/span&gt;

&lt;span class="c1"&gt;# Specify the process/command to start, e.g.&lt;/span&gt;
&lt;span class="na"&gt;exec sudo SANE_CONFIG_DIR&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;/usr/local/etc/scanbd/sane.d/ /usr/local/sbin/scanbd -df -c /usr/local/etc/scanbd/scanbd.conf&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then, run the following command to check this service:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;initctl&lt;span class="w"&gt; &lt;/span&gt;reload-configuration
initctl&lt;span class="w"&gt; &lt;/span&gt;list&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;grep&lt;span class="w"&gt; &lt;/span&gt;scanbd

service&lt;span class="w"&gt; &lt;/span&gt;scanbd&lt;span class="w"&gt; &lt;/span&gt;start
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Wait about 20 seconds and check:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;tail&lt;span class="w"&gt; &lt;/span&gt;-f&lt;span class="w"&gt; &lt;/span&gt;/var/log/syslog
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;ro make sure it started up.  Now, after every boot, your scanbd service will be up and running, watching for button
presses from your scanner.&lt;/p&gt;
&lt;/div&gt;
</content><category term="Tech"></category><category term="scan"></category><category term="scansnap"></category><category term="linux"></category></entry><entry><title>Font rendering fix in Chrome</title><link href="https://virantha.com/2014/03/11/font-rendering-fix-chrome/" rel="alternate"></link><published>2014-03-11T11:26:00-04:00</published><updated>2014-03-11T11:26:00-04:00</updated><author><name>virantha</name></author><id>tag:virantha.com,2014-03-11:/2014/03/11/font-rendering-fix-chrome/</id><content type="html">&lt;p&gt;Seems like there was a reason Chrome rendered the text on this web page rather poorly at first go:
See &lt;a class="reference external" href="http://tanookisuitlabs.com/your-fonts-look-bad-in-chrome-heres-the-fix/"&gt;this&lt;/a&gt; page, but basically you need to set the anti-aliasing for Chrome:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;-webkit-font-smoothing&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;antialiased&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
</content><category term="Snippets"></category><category term="snippet"></category><category term="web"></category></entry><entry><title>Pound reverse proxy and simpler URLs for webapps (Sickbeard, Plex, CouchPotato, Headphones, SABNZBD)</title><link href="https://virantha.com/2014/03/08/pound-reverse-proxy-easy-to-use-hostnames/" rel="alternate"></link><published>2014-03-08T21:46:00-05:00</published><updated>2014-03-08T21:46:00-05:00</updated><author><name>virantha</name></author><id>tag:virantha.com,2014-03-08:/2014/03/08/pound-reverse-proxy-easy-to-use-hostnames/</id><summary type="html">&lt;p&gt;I run a plethora of local web applications that each listen on different ports, and
I wanted to simplify their URLs so I could just type a hostname to access them:&lt;/p&gt;
&lt;table border="1" class="docutils" id="hostnames"&gt;
&lt;caption&gt;Hostname mapping&lt;/caption&gt;
&lt;colgroup&gt;
&lt;col width="33%" /&gt;
&lt;col width="33%" /&gt;
&lt;col width="33%" /&gt;
&lt;/colgroup&gt;
&lt;thead valign="bottom"&gt;
&lt;tr&gt;&lt;th class="head"&gt;Application&lt;/th&gt;
&lt;th class="head"&gt;Default URL&lt;/th&gt;
&lt;th class="head"&gt;Desired URL&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;Sickbeard&lt;/td&gt;
&lt;td&gt;&lt;a class="reference external" href="http://linux-server:8081"&gt;http://linux-server:8081&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a class="reference external" href="http://sickbeard"&gt;http://sickbeard&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;SabNZBD&lt;/td&gt;
&lt;td&gt;&lt;a class="reference external" href="http://linux-server:8080"&gt;http://linux-server:8080&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a class="reference external" href="http://sabnzbd"&gt;http://sabnzbd â€¦&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;</summary><content type="html">&lt;p&gt;I run a plethora of local web applications that each listen on different ports, and
I wanted to simplify their URLs so I could just type a hostname to access them:&lt;/p&gt;
&lt;table border="1" class="docutils" id="hostnames"&gt;
&lt;caption&gt;Hostname mapping&lt;/caption&gt;
&lt;colgroup&gt;
&lt;col width="33%" /&gt;
&lt;col width="33%" /&gt;
&lt;col width="33%" /&gt;
&lt;/colgroup&gt;
&lt;thead valign="bottom"&gt;
&lt;tr&gt;&lt;th class="head"&gt;Application&lt;/th&gt;
&lt;th class="head"&gt;Default URL&lt;/th&gt;
&lt;th class="head"&gt;Desired URL&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;Sickbeard&lt;/td&gt;
&lt;td&gt;&lt;a class="reference external" href="http://linux-server:8081"&gt;http://linux-server:8081&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a class="reference external" href="http://sickbeard"&gt;http://sickbeard&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;SabNZBD&lt;/td&gt;
&lt;td&gt;&lt;a class="reference external" href="http://linux-server:8080"&gt;http://linux-server:8080&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a class="reference external" href="http://sabnzbd"&gt;http://sabnzbd&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Nagios&lt;/td&gt;
&lt;td&gt;&lt;a class="reference external" href="http://fw:1008/nagios"&gt;http://fw:1008/nagios&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a class="reference external" href="http://nagios"&gt;http://nagios&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Plex Media Server&lt;/td&gt;
&lt;td&gt;&lt;a class="reference external" href="http://media-server:32400/web"&gt;http://media-server:32400/web&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a class="reference external" href="http://plex"&gt;http://plex&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Turns out, this is really simple to do by installing &lt;a class="reference external" href="http://www.apsis.ch/pound"&gt;Pound&lt;/a&gt;, but it took me some time
to piece together how to configure it for Plex and Nagios, which have both a
port number and a path mapping.  Basically, the recipe is that you first
redirect the URL path portion, and then you do the host/port redirect. Plex has
an &lt;a class="reference external" href="http://blog.spike.cx/post/54333726677/plex-media-server-web-proxy-fix"&gt;additional issue with some javascript&lt;/a&gt; in the web interface that causes a
loop unless you put in a rule to detect a particular header text
(&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;X-Plex-Device-Name&lt;/span&gt;&lt;/tt&gt;) to avoid remapping the &lt;tt class="docutils literal"&gt;/web&lt;/tt&gt; portion of the URL.&lt;/p&gt;
&lt;p&gt;Here's my &lt;tt class="docutils literal"&gt;pound.cfg&lt;/tt&gt; configuration file for future reference (obviously, this requires
that you've set up your DNS/hosts to point all the aliases like sickbeard, plex, etc. to
whatever host is running pound)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="na"&gt;ListenHTTP&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="na"&gt;Address 192.168.9.1&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="na"&gt;Port 80&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="na"&gt;Service&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="na"&gt;HeadRequire &amp;quot;Host&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;.*sickbeard.*&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="na"&gt;BackEnd&lt;/span&gt;
&lt;span class="w"&gt;                        &lt;/span&gt;&lt;span class="na"&gt;Address linux-server&lt;/span&gt;
&lt;span class="w"&gt;                        &lt;/span&gt;&lt;span class="na"&gt;Port 8081&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="na"&gt;End&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="na"&gt;End&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="na"&gt;Service&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="na"&gt;HeadRequire &amp;quot;Host&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;.*sabnzbd.*&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="na"&gt;BackEnd&lt;/span&gt;
&lt;span class="w"&gt;                        &lt;/span&gt;&lt;span class="na"&gt;Address linux-server&lt;/span&gt;
&lt;span class="w"&gt;                        &lt;/span&gt;&lt;span class="na"&gt;Port 8080&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="na"&gt;End&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="na"&gt;End&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="na"&gt;Service&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="na"&gt;HeadRequire &amp;quot;Host&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;.*couchpotato.*&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="na"&gt;BackEnd&lt;/span&gt;
&lt;span class="w"&gt;                        &lt;/span&gt;&lt;span class="na"&gt;Address linux-server&lt;/span&gt;
&lt;span class="w"&gt;                        &lt;/span&gt;&lt;span class="na"&gt;Port 5050&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="na"&gt;End&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="na"&gt;End&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="na"&gt;Service&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="na"&gt;HeadRequire &amp;quot;Host&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;.*headphones.*&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="na"&gt;BackEnd&lt;/span&gt;
&lt;span class="w"&gt;                        &lt;/span&gt;&lt;span class="na"&gt;Address linux-server&lt;/span&gt;
&lt;span class="w"&gt;                        &lt;/span&gt;&lt;span class="na"&gt;Port 8181&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="na"&gt;End&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="na"&gt;End&lt;/span&gt;

&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="c1"&gt;# Following two services for plex&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="na"&gt;Service&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="na"&gt;HeadRequire &amp;quot;Host&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;.*plex.*&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="na"&gt;HeadDeny &amp;quot;X-Plex-Device-Name&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="na"&gt;URL &amp;quot;^/$&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="na"&gt;Redirect &amp;quot;http&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="s"&gt;//plex/web&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="na"&gt;End&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="na"&gt;Service&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="na"&gt;HeadRequire &amp;quot;Host&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;.*plex.*&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="na"&gt;BackEnd&lt;/span&gt;
&lt;span class="w"&gt;                        &lt;/span&gt;&lt;span class="na"&gt;Address media-server&lt;/span&gt;
&lt;span class="w"&gt;                        &lt;/span&gt;&lt;span class="na"&gt;Port 32400&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="na"&gt;End&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="na"&gt;End&lt;/span&gt;

&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="c1"&gt;# NAGIOS&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="na"&gt;Service&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="na"&gt;HeadRequire &amp;quot;Host&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;.*nagios.*&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="na"&gt;URL &amp;quot;^/$&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="na"&gt;Redirect &amp;quot;http&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="s"&gt;//nagios/nagios&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="na"&gt;End&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="na"&gt;Service&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="na"&gt;HeadRequire &amp;quot;Host&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;.*nagios.*&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="na"&gt;BackEnd&lt;/span&gt;
&lt;span class="w"&gt;                        &lt;/span&gt;&lt;span class="na"&gt;Address fw&lt;/span&gt;
&lt;span class="w"&gt;                        &lt;/span&gt;&lt;span class="na"&gt;Port 1008&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="na"&gt;End&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="na"&gt;End&lt;/span&gt;

&lt;span class="na"&gt;End&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
</content><category term="Snippets"></category><category term="snippet"></category></entry><entry><title>Fix your Breville Smart Oven by replacing the thermal fuse</title><link href="https://virantha.com/2014/03/02/fix-your-breville-smart-oven-by-replacing-the-thermal-fuse/" rel="alternate"></link><published>2014-03-02T17:18:00-05:00</published><updated>2014-03-02T17:18:00-05:00</updated><author><name>virantha</name></author><id>tag:virantha.com,2014-03-02:/2014/03/02/fix-your-breville-smart-oven-by-replacing-the-thermal-fuse/</id><summary type="html">&lt;div class="figure align-right"&gt;
&lt;img alt="Breville Smart Oven BOV 450XL" src="/images/2014/breville/breville.jpg" /&gt;
&lt;/div&gt;
&lt;p&gt;In this post, I'll dicuss how I was able to quickly and inexpensively replace
the thermal fuse on our Breville digital toaster oven.  There were a few
scattered forum posts from which I pieced together this information, even
though this appears to be a common issue, and applies to the â€¦&lt;/p&gt;</summary><content type="html">&lt;div class="figure align-right"&gt;
&lt;img alt="Breville Smart Oven BOV 450XL" src="/images/2014/breville/breville.jpg" /&gt;
&lt;/div&gt;
&lt;p&gt;In this post, I'll dicuss how I was able to quickly and inexpensively replace
the thermal fuse on our Breville digital toaster oven.  There were a few
scattered forum posts from which I pieced together this information, even
though this appears to be a common issue, and applies to the following
conditions:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;You own a Breville Smart Oven that's out of warranty (or don't want to deal with
the weeks of delay in getting a warranty replacement)&lt;/li&gt;
&lt;li&gt;Your oven is completely 'dead', with no display characters appearing when you plug it
in or press the buttons.&lt;/li&gt;
&lt;li&gt;Your outlet is working properly (reset any GFCI or breakers) and you have verified other appliances work fine with the outlet you are using for the toaster oven.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="admonition note"&gt;
&lt;p class="first admonition-title"&gt;Note&lt;/p&gt;
&lt;p class="last"&gt;Disclaimer!
Please use the how-to below at your own risk.  Although the fix
is fairly straight-forward for anyone with a technical/DIY/engineering
background, you are dealing with line voltages and a high temperature appliance.
I cannot accept any responsibility for loss or damage resulting from your use or
misuse of this information.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="contents topic" id="table-of-contents"&gt;
&lt;p class="topic-title"&gt;&lt;a class="reference internal" href="#top"&gt;Table of Contents:&lt;/a&gt;&lt;/p&gt;
&lt;ul class="auto-toc simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#background" id="toc-entry-1"&gt;1&amp;nbsp;&amp;nbsp;&amp;nbsp;Background&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#fixing-the-fuse" id="toc-entry-2"&gt;2&amp;nbsp;&amp;nbsp;&amp;nbsp;Fixing the fuse&lt;/a&gt;&lt;ul class="auto-toc"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#tools-requireed" id="toc-entry-3"&gt;2.1&amp;nbsp;&amp;nbsp;&amp;nbsp;Tools requireed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#replacement-fuse" id="toc-entry-4"&gt;2.2&amp;nbsp;&amp;nbsp;&amp;nbsp;Replacement fuse&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#replacement-procedure" id="toc-entry-5"&gt;2.3&amp;nbsp;&amp;nbsp;&amp;nbsp;Replacement procedure&lt;/a&gt;&lt;ul class="auto-toc"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#remove-screws" id="toc-entry-6"&gt;2.3.1&amp;nbsp;&amp;nbsp;&amp;nbsp;Remove screws&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#pry-open-back-panel" id="toc-entry-7"&gt;2.3.2&amp;nbsp;&amp;nbsp;&amp;nbsp;Pry open back panel&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#disassemble-fuse-assembly-bracket" id="toc-entry-8"&gt;2.3.3&amp;nbsp;&amp;nbsp;&amp;nbsp;Disassemble fuse assembly bracket&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#replace-fuse-in-assembly" id="toc-entry-9"&gt;2.3.4&amp;nbsp;&amp;nbsp;&amp;nbsp;Replace fuse in assembly&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="background"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#toc-entry-1"&gt;1&amp;nbsp;&amp;nbsp;&amp;nbsp;Background&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;A little more than 4 months after our purchase, with light duty of
~2-3 cycles of toasting bread every day, the Breville just refused to power on one day.
After verifying there was no cord/outlet issue, I did some google searches and
discovered that this is in fact a &lt;a class="reference external" href="https://getsatisfaction.com/breville/topics/my_smart_oven_wont_turn_on/"&gt;common issue&lt;/a&gt;.  It appears that the thermal
fuse, which is used to cut-off power when the oven gets too hot, needed replacing.
I'm not sure why the fuse would blow, since my oven had plenty of space around it
and I did not bake at high temperatures for a prolonged period of time, but this
seemed like a common failure mode.&lt;/p&gt;
&lt;p&gt;The relatively simple fix is detailed in the next section, and is based on this
&lt;a class="reference external" href="http://www.fixya.com/support/t11821265-breville_bov650xl_will_not_power"&gt;post where someone replaced the 650XL fuse&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="fixing-the-fuse"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#toc-entry-2"&gt;2&amp;nbsp;&amp;nbsp;&amp;nbsp;Fixing the fuse&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="tools-requireed"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#toc-entry-3"&gt;2.1&amp;nbsp;&amp;nbsp;&amp;nbsp;Tools requireed&lt;/a&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Philips screwdriver&lt;/li&gt;
&lt;li&gt;&lt;a class="amazon" href="http://www.amazon.com/gp/product/B00FZPDG1K?ie=UTF8&amp;linkCode=as2&amp;camp=1634&amp;tag=virantha-20"&gt;Wire cutters&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Plastic pry tool&lt;/li&gt;
&lt;li&gt;&lt;a class="amazon" href="http://www.amazon.com/gp/product/B0002STTSY?ie=UTF8&amp;linkCode=as2&amp;camp=1634&amp;tag=virantha-20"&gt;Crimp tool&lt;/a&gt; (best) or needle-nose pliers (acceptable)&lt;/li&gt;
&lt;li&gt;&lt;a class="amazon" href="http://www.amazon.com/gp/product/B00F0CF5SA?ie=UTF8&amp;linkCode=as2&amp;camp=1634&amp;tag=virantha-20"&gt;Crimp terminals&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="amazon" href="http://www.amazon.com/gp/product/B000EVYGZA?ie=UTF8&amp;linkCode=as2&amp;camp=1634&amp;tag=virantha-20"&gt;Digital multimeter&lt;/a&gt; or continuity checker (nice-to-have)&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="replacement-fuse"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#toc-entry-4"&gt;2.2&amp;nbsp;&amp;nbsp;&amp;nbsp;Replacement fuse&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;There are two options to getting a replacement part:&lt;/p&gt;
&lt;ol class="arabic"&gt;
&lt;li&gt;&lt;p class="first"&gt;Get the entire fuse assembly (basically a long wire with a heat-resistant wrap, plus a thermal fuse and mounting bracket) for ~$5 plus shipping:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.ereplacementparts.com/thermal-fuse-assembly-p-630232.html"&gt;BOV800XL Fuse Assembly&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.ereplacementparts.com/thermal-fuse-assy-new-type-p-630212.html"&gt;BOV650XL Fuse Assembly&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.ereplacementparts.com/fuse-assembly-p-1439646.html"&gt;BOV450XL Fuse Assembly&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Avoid the long lead times, and just buy the thermal fuse at Radio Shack or
Amazon.com:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;a class="reference external" href="http://www.radioshack.com/product/index.jsp?productId=2102788"&gt;Radio Shack&lt;/a&gt; - 443F 10A-rated fuse.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;div class="first"&gt;&lt;div&gt;&lt;a class="amazon" href="http://www.amazon.com/gp/product/B0087ZRIAA/ref=as_li_tf_il?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=B0087ZRIAA&amp;linkCode=am2&amp;tag=virantha-20"&gt;&lt;img src="http://images.amazon.com/images/P/B0087ZRIAA.01._SCMZZZZZZZ_.jpg"/&gt;Metal TF 216 Celsius Cutoff Fuse&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;The latter is an exact temperature replacement for the 420F fuse in my 450XL, while
the former is a slightly higher temperature one. I went with the 443F one from Radio Shack because I wanted a little bit of headroom on fusing it next time, and I could buy this
in the store.  You will also need some &lt;a class="reference external" href="http://www.radioshack.com/product/index.jsp?productId=2103494&amp;amp;filterName=Cable+type&amp;amp;filterValue=Butt+connectors"&gt;crimp terminals&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class="section" id="replacement-procedure"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#toc-entry-5"&gt;2.3&amp;nbsp;&amp;nbsp;&amp;nbsp;Replacement procedure&lt;/a&gt;&lt;/h3&gt;
&lt;div class="section" id="remove-screws"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#toc-entry-6"&gt;2.3.1&amp;nbsp;&amp;nbsp;&amp;nbsp;Remove screws&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Make sure your oven is unplugged, place it front panel down on a counter, so you can get
easy access to the screws in the back.  Remove all of them ~2 dozen, as shown in the
picture below:&lt;/p&gt;
&lt;div class="figure"&gt;
&lt;img alt="back" src="/images/2014/breville/breville_back.jpg" /&gt;
&lt;/div&gt;
&lt;p&gt;Next, remove all the screws on the bottom feet of the oven, as well as two screws on the bottom sides. (sorry, no picture here)  Remove the plastic feet from the front.  I could not
figure out a way to remove the rear feet as there appeared to be a rivet holding
them in place, but YMMV.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="pry-open-back-panel"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#toc-entry-7"&gt;2.3.2&amp;nbsp;&amp;nbsp;&amp;nbsp;Pry open back panel&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Slowly slide the back panel down and to the right, without snapping off the feet in the process (maybe there's a better way to do this, but all you need is access to the left
side of the oven where the power cord goes into the fuse).&lt;/p&gt;
&lt;div class="figure"&gt;
&lt;img alt="open" src="/images/2014/breville/breville_open.jpg" /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="disassemble-fuse-assembly-bracket"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#toc-entry-8"&gt;2.3.3&amp;nbsp;&amp;nbsp;&amp;nbsp;Disassemble fuse assembly bracket&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;The white assembly is on the left side, and you'll need to remove two phillips screws to
disengage from the inner oven wall.  Pull it out of the bracket as shown below:&lt;/p&gt;
&lt;div class="figure"&gt;
&lt;img alt="open" src="/images/2014/breville/breville_bracket.jpg" /&gt;
&lt;/div&gt;
&lt;p&gt;At this point, it's probably a good idea to use a multi-meter and test for lack of
continuity across the two ends of the wired assembly, to verify that the fuse is in fact
blown.&lt;/p&gt;
&lt;p&gt;Now, you can either replace this entire assembly if you went that route, or
replace just the fuse in the next section.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="replace-fuse-in-assembly"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#toc-entry-9"&gt;2.3.4&amp;nbsp;&amp;nbsp;&amp;nbsp;Replace fuse in assembly&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;If you slide back the white plastic sheath, you'll see the thermal fuse underneath:&lt;/p&gt;
&lt;div class="figure"&gt;
&lt;img alt="fuse" src="/images/2014/breville/breville_fuse.jpg" /&gt;
&lt;/div&gt;
&lt;p&gt;Now, just cut off the old fuse with the crimp connectors on either side, making
sure to remember which side is marked black, and connect your new fuse with
new uninsulated crimp terminals.  Roll back the sheath over the fuse, place it
back in the bracket, re-attach the bracket, and rescrew the back panel&lt;/p&gt;
&lt;p&gt;You're done!&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</content><category term="DIY"></category><category term="appliance"></category><category term="diy"></category></entry><entry><title>Digital Toaster Oven Options</title><link href="https://virantha.com/2014/02/02/digital-toaster-oven-survey/" rel="alternate"></link><published>2014-02-02T17:18:00-05:00</published><updated>2014-02-02T17:18:00-05:00</updated><author><name>virantha</name></author><id>tag:virantha.com,2014-02-02:/2014/02/02/digital-toaster-oven-survey/</id><summary type="html">&lt;div class="figure align-right"&gt;
&lt;img alt="Breville Smart Oven BOV 450XL" src="/images/2014/breville/breville.jpg" /&gt;
&lt;/div&gt;
&lt;p&gt;One of the best kitchen upgrades we did was replacing our old twist-a-dial
toaster oven with one that integrates a digital control panel.  This gives us
precise toasting time control (just dial in the exact number of minutes and seconds you
want) and avoids ending up with burnt toast because â€¦&lt;/p&gt;</summary><content type="html">&lt;div class="figure align-right"&gt;
&lt;img alt="Breville Smart Oven BOV 450XL" src="/images/2014/breville/breville.jpg" /&gt;
&lt;/div&gt;
&lt;p&gt;One of the best kitchen upgrades we did was replacing our old twist-a-dial
toaster oven with one that integrates a digital control panel.  This gives us
precise toasting time control (just dial in the exact number of minutes and seconds you
want) and avoids ending up with burnt toast because the analog &amp;quot;darkness&amp;quot; setting was just a tad off.&lt;/p&gt;
&lt;p&gt;Even in this day and age, manufacturers have released only a surprisingly small
selection of digital toaster, with corresponding high price tags.
When I was looking, only the Breville was widely available, but there are more
choices these days:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;Breville Smart Ovens:&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last"&gt;
&lt;li&gt;&lt;div class="first"&gt;&lt;div&gt;&lt;a class="amazon" href="http://www.amazon.com/gp/product/B006CVVA7I/ref=as_li_tf_il?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=B006CVVA7I&amp;linkCode=am2&amp;tag=virantha-20"&gt;&lt;img src="http://images.amazon.com/images/P/B006CVVA7I.01._SCMZZZZZZZ_.jpg"/&gt;BOV450XL Mini $150&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;div class="first"&gt;&lt;div&gt;&lt;a class="amazon" href="http://www.amazon.com/gp/product/B00357YS3A/ref=as_li_tf_il?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=B00357YS3A&amp;linkCode=am2&amp;tag=virantha-20"&gt;&lt;img src="http://images.amazon.com/images/P/B00357YS3A.01._SCMZZZZZZZ_.jpg"/&gt;BOV650XL Compact $180&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;div class="first"&gt;&lt;div&gt;&lt;a class="amazon" href="http://www.amazon.com/gp/product/B001L5TVGW/ref=as_li_tf_il?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=B001L5TVGW&amp;linkCode=am2&amp;tag=virantha-20"&gt;&lt;img src="http://images.amazon.com/images/P/B001L5TVGW.01._SCMZZZZZZZ_.jpg"/&gt;BOV800XL Convection $250&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;div class="first"&gt;&lt;div&gt;&lt;a class="amazon" href="http://www.amazon.com/gp/product/B008XMY1RK/ref=as_li_tf_il?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=B008XMY1RK&amp;linkCode=am2&amp;tag=virantha-20"&gt;&lt;img src="http://images.amazon.com/images/P/B008XMY1RK.01._SCMZZZZZZZ_.jpg"/&gt;Cuisinart TOB-100 Compact Toaster Oven $75&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;div class="first"&gt;&lt;div&gt;&lt;a class="amazon" href="http://www.amazon.com/gp/product/B00BT9704U/ref=as_li_tf_il?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=B00BT9704U&amp;linkCode=am2&amp;tag=virantha-20"&gt;&lt;img src="http://images.amazon.com/images/P/B00BT9704U.01._SCMZZZZZZZ_.jpg"/&gt;Oster TSSTTVDGSM Digital 4-slice Toaster Oven $60&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;div class="first"&gt;&lt;div&gt;&lt;a class="amazon" href="http://www.amazon.com/gp/product/B005RRBMVW/ref=as_li_tf_il?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=B005RRBMVW&amp;linkCode=am2&amp;tag=virantha-20"&gt;&lt;img src="http://images.amazon.com/images/P/B005RRBMVW.01._SCMZZZZZZZ_.jpg"/&gt;Waring Pro TCO650 Digital Convection Oven $85&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I bought the Mini Breville BOV450XL remanufactured/refurbished model when it was
offered at a deep discount, based on the rave reviews, and I was not disappointed
with the results while it worked.  (see this post for
&lt;a class="reference external" href="https://virantha.com/2014/03/02/fix-your-breville-smart-oven-by-replacing-the-thermal-fuse/"&gt;more follow-up on this model&lt;/a&gt;)&lt;/p&gt;
</content><category term="Shopping"></category><category term="appliance"></category><category term="diy"></category></entry><entry><title>AirFrame: Usage guide</title><link href="https://virantha.com/2014/01/10/airframe-usage-guide/" rel="alternate"></link><published>2014-01-10T17:18:00-05:00</published><updated>2014-01-10T17:18:00-05:00</updated><author><name>virantha</name></author><id>tag:virantha.com,2014-01-10:/2014/01/10/airframe-usage-guide/</id><summary type="html">&lt;div class="contents topic" id="table-of-contents"&gt;
&lt;p class="topic-title"&gt;&lt;a class="reference internal" href="#top"&gt;Table of Contents:&lt;/a&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#features" id="toc-entry-1"&gt;Features&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#installation" id="toc-entry-2"&gt;Installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#usage" id="toc-entry-3"&gt;Usage&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;p&gt;Download images from an authenticated Flickr account (or local filesystem) and
push them wirelessly to a Toshiba FlashAir Wifi SD card mounted in a digital
photo frame.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Free software: ASL2 license&lt;/li&gt;
&lt;li&gt;Documentation: &lt;a class="reference external" href="http://virantha.github.io/airframe/html"&gt;http://virantha.github.io/airframe/html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Source: &lt;a class="reference external" href="http://github.com/virantha/airframe"&gt;http://github.com/virantha/airframe â€¦&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;div class="contents topic" id="table-of-contents"&gt;
&lt;p class="topic-title"&gt;&lt;a class="reference internal" href="#top"&gt;Table of Contents:&lt;/a&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#features" id="toc-entry-1"&gt;Features&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#installation" id="toc-entry-2"&gt;Installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#usage" id="toc-entry-3"&gt;Usage&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;p&gt;Download images from an authenticated Flickr account (or local filesystem) and
push them wirelessly to a Toshiba FlashAir Wifi SD card mounted in a digital
photo frame.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Free software: ASL2 license&lt;/li&gt;
&lt;li&gt;Documentation: &lt;a class="reference external" href="http://virantha.github.io/airframe/html"&gt;http://virantha.github.io/airframe/html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Source: &lt;a class="reference external" href="http://github.com/virantha/airframe"&gt;http://github.com/virantha/airframe&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="section" id="features"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#toc-entry-1"&gt;Features&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Authenticates to Flickr to get your private photos&lt;/li&gt;
&lt;li&gt;Only downloads photos with specified tags&lt;/li&gt;
&lt;li&gt;Alternativly, can sync files from a local directory&lt;/li&gt;
&lt;li&gt;Caches and syncs the photos to the Wifi SD card&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="installation"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#toc-entry-2"&gt;Installation&lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$&lt;span class="w"&gt; &lt;/span&gt;pip&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;airframe
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="usage"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#toc-entry-3"&gt;Usage&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;First, go to Flickr and get a private key at &lt;a class="reference external" href="http://www.flickr.com/services/api/misc.api_keys.html"&gt;http://www.flickr.com/services/api/misc.api_keys.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Then, create a directory from where you will start airframe, and create a file called flickr_api.yaml:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;key&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;YOUR_API_KEY&amp;quot;&lt;/span&gt;
&lt;span class="nt"&gt;secret&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;YOUR_API_SECRET&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then, setup your FlashAir card as described in &lt;a class="reference external" href="http://virantha.com/2014/01/09/hacking-together-a-wifi-photo-frame-with-a-toshiba-flashair-sd-card-wireless-photo-uploads"&gt;this post's&lt;/a&gt;
&amp;quot;Enabling the FlashAir&amp;quot; section.&lt;/p&gt;
&lt;p&gt;Now, you're ready to sync some photos!  Just run:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$&lt;span class="w"&gt; &lt;/span&gt;airframe&lt;span class="w"&gt; &lt;/span&gt;-n&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;100&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-t&lt;span class="w"&gt; &lt;/span&gt;photoframe&lt;span class="w"&gt; &lt;/span&gt;YOUR_AIRFRAME_IP
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This will download and sync the 100 most recent photos tagged with &amp;quot;photoframe&amp;quot; to your
AirFrame.&lt;/p&gt;
&lt;div class="admonition warning"&gt;
&lt;p class="first admonition-title"&gt;Warning&lt;/p&gt;
&lt;p class="last"&gt;Any other image files in the FlashAir upload directory will be deleted, so make sure you backup anything you want to keep from your SD card.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;The image files from Flickr will be cached in a sub-directory called
&lt;tt class="docutils literal"&gt;.airframe&lt;/tt&gt; in the location you invoked airframe from, so as long as you rerun
from the same directory, the script will only download new files from Flickr.  If you want to
redownload all the files from scratch, just &lt;tt class="docutils literal"&gt;rm .airframe&lt;/tt&gt; these files.&lt;/p&gt;
&lt;p&gt;The script will also only upload new images to the FlashAir card, and ignore any files that are
already present on the card.  If you want to force a clean upload, do the following:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$&lt;span class="w"&gt; &lt;/span&gt;airframe&lt;span class="w"&gt; &lt;/span&gt;-n&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;100&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-t&lt;span class="w"&gt; &lt;/span&gt;photoframe&lt;span class="w"&gt; &lt;/span&gt;-f&lt;span class="w"&gt; &lt;/span&gt;YOUR_AIRFRAME_IP
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This will delete all images already on the card, and upload every image again.&lt;/p&gt;
&lt;p&gt;Alternatively, you can sync files directly from your local computer by pointing
the script at a directory of &lt;tt class="docutils literal"&gt;.jpg&lt;/tt&gt; files:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$&lt;span class="w"&gt; &lt;/span&gt;airframe&lt;span class="w"&gt; &lt;/span&gt;-l&lt;span class="w"&gt; &lt;/span&gt;/path/to/photos&lt;span class="w"&gt; &lt;/span&gt;YOUR_AIRFRAME_IP
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note: other flags are ignored in this mode.&lt;/p&gt;
&lt;p&gt;Images can also be resized using the --resize WxH option if your photoframe has trouble interpolating resolutions.  Set W and H to your frame's native width and height numbers.
This option does require either the Python Imaging Library (PIL) or Pillow
installed.&lt;/p&gt;
&lt;/div&gt;
</content><category term="AirFrame"></category><category term="tech"></category><category term="airframe"></category><category term="flashair"></category><category term="flickr"></category><category term="frame"></category><category term="photo"></category><category term="python"></category></entry><entry><title>AirFrame: Hacking together a WiFi photo frame with a Toshiba FlashAir SD card and Flickr</title><link href="https://virantha.com/2014/01/09/hacking-together-a-wifi-photo-frame-with-a-toshiba-flashair-sd-card-wireless-photo-uploads/" rel="alternate"></link><published>2014-01-09T17:18:00-05:00</published><updated>2014-01-09T17:18:00-05:00</updated><author><name>virantha</name></author><id>tag:virantha.com,2014-01-09:/2014/01/09/hacking-together-a-wifi-photo-frame-with-a-toshiba-flashair-sd-card-wireless-photo-uploads/</id><summary type="html">&lt;p&gt;I'm going to describe AirFrame, a Python script I wrote that's available
on &lt;a class="reference external" href="http://github.com/virantha/airframe"&gt;GitHub&lt;/a&gt; under ASL2 open-source, that can automatically pull photos
matching a given set of tags from an authorized Flickr account, and
wirelessly push them to a WiFi enabled SD card sitting inside an
inexpensive digital photo frame â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;I'm going to describe AirFrame, a Python script I wrote that's available
on &lt;a class="reference external" href="http://github.com/virantha/airframe"&gt;GitHub&lt;/a&gt; under ASL2 open-source, that can automatically pull photos
matching a given set of tags from an authorized Flickr account, and
wirelessly push them to a WiFi enabled SD card sitting inside an
inexpensive digital photo frame. Pair this $30 SD card with an
inexpensive 8-inch digital photo frame (like these &lt;a class="amazon" href="http://www.amazon.com/gp/product/B008FC8GJM?ie=UTF8&amp;linkCode=as2&amp;camp=1634&amp;tag=virantha-20"&gt;1&lt;/a&gt;,
&lt;a class="amazon" href="http://www.amazon.com/gp/product/B008FC8FUW?ie=UTF8&amp;linkCode=as2&amp;camp=1634&amp;tag=virantha-20"&gt;2&lt;/a&gt;, &lt;a class="amazon" href="http://www.amazon.com/gp/product/B008MW6Y12?ie=UTF8&amp;linkCode=as2&amp;camp=1634&amp;tag=virantha-20"&gt;3&lt;/a&gt;), and you
can have a wireless photo frame for well under $100. And unlike with just using
a tablet, you can get a &lt;a class="amazon" href="http://www.amazon.com/gp/product/B006O714PS?ie=UTF8&amp;linkCode=as2&amp;camp=1634&amp;tag=virantha-20"&gt;15-inch display&lt;/a&gt; and still keep the
cost under $150.&lt;/p&gt;
&lt;p&gt;Please see the following documentation on how to use this script:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://virantha.github.io/airframe/html/readme.html"&gt;User documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://virantha.github.io/airframe/html"&gt;Developer documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="contents topic" id="table-of-contents"&gt;
&lt;p class="topic-title"&gt;&lt;a class="reference internal" href="#top"&gt;Table of Contents:&lt;/a&gt;&lt;/p&gt;
&lt;ul class="auto-toc simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#background" id="toc-entry-1"&gt;1&amp;nbsp;&amp;nbsp;&amp;nbsp;Background&lt;/a&gt;&lt;ul class="auto-toc"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#kodak-s-vanishing-act" id="toc-entry-2"&gt;1.1&amp;nbsp;&amp;nbsp;&amp;nbsp;Kodak's vanishing act&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#sd-cards-with-wifi-built-in-for-cameras" id="toc-entry-3"&gt;1.2&amp;nbsp;&amp;nbsp;&amp;nbsp;SD cards with WiFi built-in for cameras&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#sd-cards-with-upload-capability" id="toc-entry-4"&gt;1.3&amp;nbsp;&amp;nbsp;&amp;nbsp;SD cards with upload capability&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#toshiba-flashair-uploads" id="toc-entry-5"&gt;2&amp;nbsp;&amp;nbsp;&amp;nbsp;Toshiba FlashAir Uploads&lt;/a&gt;&lt;ul class="auto-toc"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#technical-information" id="toc-entry-6"&gt;2.1&amp;nbsp;&amp;nbsp;&amp;nbsp;Technical information&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#enabling-the-flashair" id="toc-entry-7"&gt;2.2&amp;nbsp;&amp;nbsp;&amp;nbsp;Enabling the FlashAir&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#airframe-code-discussion" id="toc-entry-8"&gt;3&amp;nbsp;&amp;nbsp;&amp;nbsp;AirFrame code discussion&lt;/a&gt;&lt;ul class="auto-toc"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#flickr-download" id="toc-entry-9"&gt;3.1&amp;nbsp;&amp;nbsp;&amp;nbsp;Flickr download&lt;/a&gt;&lt;ul class="auto-toc"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#authorization" id="toc-entry-10"&gt;3.1.1&amp;nbsp;&amp;nbsp;&amp;nbsp;Authorization&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#retrieving-photos" id="toc-entry-11"&gt;3.1.2&amp;nbsp;&amp;nbsp;&amp;nbsp;Retrieving photos&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#flashair-code-discussion" id="toc-entry-12"&gt;3.2&amp;nbsp;&amp;nbsp;&amp;nbsp;FlashAir code discussion&lt;/a&gt;&lt;ul class="auto-toc"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#setting-the-write-protect" id="toc-entry-13"&gt;3.2.1&amp;nbsp;&amp;nbsp;&amp;nbsp;Setting the write-protect&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#getting-the-file-list" id="toc-entry-14"&gt;3.2.2&amp;nbsp;&amp;nbsp;&amp;nbsp;Getting the file list&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#hash-the-filenames" id="toc-entry-15"&gt;3.2.3&amp;nbsp;&amp;nbsp;&amp;nbsp;Hash the filenames&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#construct-the-timestamp" id="toc-entry-16"&gt;3.2.4&amp;nbsp;&amp;nbsp;&amp;nbsp;Construct the timestamp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#upload-files-to-the-flashair" id="toc-entry-17"&gt;3.2.5&amp;nbsp;&amp;nbsp;&amp;nbsp;Upload files to the FlashAir&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#summary" id="toc-entry-18"&gt;4&amp;nbsp;&amp;nbsp;&amp;nbsp;Summary&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="background"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#toc-entry-1"&gt;1&amp;nbsp;&amp;nbsp;&amp;nbsp;Background&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="kodak-s-vanishing-act"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#toc-entry-2"&gt;1.1&amp;nbsp;&amp;nbsp;&amp;nbsp;Kodak's vanishing act&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;I watched Kodak's WiFi-enabled photoframes become useless paperweights
with Kodak and its related FrameChannel service demise several years
ago. Until then, this amazing product pulled images automatically from
one's Flickr feed in realtime; you could also email photos to an
associated address, and they would show up on the frame within a few
minutes. Fast-forward a few years, and sadly, there is no reasonably
priced photo-frame that I could find as of Jan 2014 that can pull in
pictures wirelessly. As anyone with a regular digital photo frame can
attest to, having to pull out a SD card, download pictures manually,
then walk the SD card back to the frame, usually results in photos just
not being updated on the frame.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="sd-cards-with-wifi-built-in-for-cameras"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#toc-entry-3"&gt;1.2&amp;nbsp;&amp;nbsp;&amp;nbsp;SD cards with WiFi built-in for cameras&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;What has changed in the last few years is the introduction of a few
remarkable devices that combine a SD card with a wifi radio built-in.
The &lt;a class="amazon" href="http://www.amazon.com/gp/product/B00CS4WPD6?ie=UTF8&amp;linkCode=as2&amp;camp=1634&amp;tag=virantha-20"&gt;EyeFi WiFi SD card&lt;/a&gt; has really changed the way we take pictures in our house now; we use
these cards in all our digital cameras, and it automatically uploads our photos
from inside the camera to Flickr (with an auto-created set per day) and my home
server over any recognized WiFi network. The iOS app, although slightly quirky,
also does the same for any photos taken with our iPhones.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="sd-cards-with-upload-capability"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#toc-entry-4"&gt;1.3&amp;nbsp;&amp;nbsp;&amp;nbsp;SD cards with upload capability&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Unfortunately, the Eye-Fi only allows getting files/photos off the card
onto a computer or cloud service (download). If you could go in the
opposite direction (upload) that would be game-changing, and allow you
to emulate a wireless photo frame with a regular inexpensive digital
photo frame with an SD card slot. Although there is no card primarily
designed for that, there are, in fact, several that support writing the
SD card via the WiFi link:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;div class="first"&gt;&lt;div&gt;&lt;a class="amazon" href="http://www.amazon.com/gp/product/B00AARIEVK/ref=as_li_tf_il?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=B00AARIEVK&amp;linkCode=am2&amp;tag=virantha-20"&gt;&lt;img src="http://images.amazon.com/images/P/B00AARIEVK.01._SCMZZZZZZZ_.jpg"/&gt;FlashAir 8GB Wireless SD Card&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;div class="first"&gt;&lt;div&gt;&lt;a class="amazon" href="http://www.amazon.com/gp/product/B00GEBTFNM/ref=as_li_tf_il?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=B00GEBTFNM&amp;linkCode=am2&amp;tag=virantha-20"&gt;&lt;img src="http://images.amazon.com/images/P/B00GEBTFNM.01._SCMZZZZZZZ_.jpg"/&gt;Toshiba FlashAir II 16GB Wireless SD card&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;div class="first"&gt;&lt;div&gt;&lt;a class="amazon" href="http://www.amazon.com/gp/product/B00A659IJI/ref=as_li_tf_il?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=B00A659IJI&amp;linkCode=am2&amp;tag=virantha-20"&gt;&lt;img src="http://images.amazon.com/images/P/B00A659IJI.01._SCMZZZZZZZ_.jpg"/&gt;Transcend 16 GB Wi-Fi SDHC Class 10&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;div class="first"&gt;&lt;div&gt;&lt;a class="amazon" href="http://www.amazon.com/gp/product/B00AKONZ3U/ref=as_li_tf_il?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=B00AKONZ3U&amp;linkCode=am2&amp;tag=virantha-20"&gt;&lt;img src="http://images.amazon.com/images/P/B00AKONZ3U.01._SCMZZZZZZZ_.jpg"/&gt;EZ Share WiFi SD card&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Of these, only the first two (FlashAir) appear to work without any
egregious hacks or custom firmwares, and involve just adding a few lines
of text to a file on the card to enable wireless uploads. In the next
section, I'll discuss how to set this up.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="toshiba-flashair-uploads"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#toc-entry-5"&gt;2&amp;nbsp;&amp;nbsp;&amp;nbsp;Toshiba FlashAir Uploads&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I first learned about the upload capabilities of this card through a
discussion post on the MakerBot 3D printer, where people would use this
to print their designs wirelessly from their computer. You can basically
enable this card to hop on to any WiFi network as a regular client (I
currently have it on my 802.11n network with WPA2-AES encryption), where
it presents a cursory REST and CGI interface to access the card.&lt;/p&gt;
&lt;div class="section" id="technical-information"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#toc-entry-6"&gt;2.1&amp;nbsp;&amp;nbsp;&amp;nbsp;Technical information&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The following list is my collection of information that I found useful
when writing my script for this card:&lt;/p&gt;
&lt;ul&gt;&lt;ul class="simple"&gt;
&lt;li&gt;Original discussion on google groups: &lt;a class="reference external" href="https://groups.google.com/forum/#!topic/makerbot/Rst5ZIfs5L0"&gt;Makerbot/flashair&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Good collection of hidden information from &lt;a class="reference external" href="http://www.extrud3d.com/flashair"&gt;extrud3d&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Official API documentation: &lt;a class="reference external" href="https://www.flashair-developers.com"&gt;FlashAir Developers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Discussion link to other wifi cards: &lt;a class="reference external" href="https://forum.openwrt.org/viewtopic.php?id=45820"&gt;Other wifi SD&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;div class="section" id="enabling-the-flashair"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#toc-entry-7"&gt;2.2&amp;nbsp;&amp;nbsp;&amp;nbsp;Enabling the FlashAir&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;You can follow the steps given at &lt;a class="reference external" href="http://www.extrud3d.com/flashair"&gt;Extrd3D&lt;/a&gt;:&lt;/p&gt;
&lt;ul&gt;&lt;ul&gt;&lt;ol class="arabic"&gt;
&lt;li&gt;&lt;p class="first"&gt;Get your card from Amazon&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;div class="first"&gt;&lt;a class="amazon" href="http://www.amazon.com/gp/product/B00AARIEVK?ie=UTF8&amp;linkCode=as2&amp;camp=1634&amp;tag=virantha-20"&gt;FlashAir Class 6 (first-gen), or,&lt;/a&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;div class="first"&gt;&lt;a class="amazon" href="http://www.amazon.com/gp/product/B00GEBTFNM?ie=UTF8&amp;linkCode=as2&amp;camp=1634&amp;tag=virantha-20"&gt;FlashAir Class 10 (second-gen)&lt;/a&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Statically assign an IP and/or hostname on your home network to this
SD card's MAC address (this step depends on your wireless router, but
should be pretty straightforward)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Insert the SD card into a reader on your PC&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;Navigate to SD_WLAN and add/modify the following lines in the
file called CONFIG&lt;/p&gt;
&lt;pre class="literal-block"&gt;
UPLOAD=1
APPMODE=5
APPAUTOTIME=0
APPNAME=AirFrame
APPSSID=your_wifi_network
APPNETWORKKEY=your_wifi_password
COMMAND=wlan 11n 1
&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Eject and re-insert the SD card, and see if you can ping it at your
reserved IP/hostname. It should boot and be up and running in under
15 seconds&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Navigate to &lt;a class="reference external" href="http://yourip"&gt;http://yourip&lt;/a&gt; and see if your card displays its web file
browser&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/ul&gt;&lt;/ul&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="airframe-code-discussion"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#toc-entry-8"&gt;3&amp;nbsp;&amp;nbsp;&amp;nbsp;AirFrame code discussion&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The code is raw right now, with little error-checking, but gets the job
done. I'll first discuss the Flickr download code, and then how I do the
FlashAir upload. First, get the code from GitHub and go to
airframe/airframe.&lt;/p&gt;
&lt;div class="section" id="flickr-download"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#toc-entry-9"&gt;3.1&amp;nbsp;&amp;nbsp;&amp;nbsp;Flickr download&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;For this, I rely on &lt;a class="reference external" href="http://stuvel.eu/flickrapi"&gt;an excellent Flickr api library&lt;/a&gt; (formerly known
as Beej's Flickr API).&lt;/p&gt;
&lt;div class="section" id="authorization"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#toc-entry-10"&gt;3.1.1&amp;nbsp;&amp;nbsp;&amp;nbsp;Authorization&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;You need to first get yourself an authorization key for your Flickr
account to get at your private photos. Go &lt;a class="reference external" href="http://www.flickr.com/services/api/misc.api_keys.html"&gt;here&lt;/a&gt; to &amp;quot;apply&amp;quot; for one,
which will be instantaneous, and note down the key and secret.&lt;/p&gt;
&lt;p&gt;Then, create a file in the src directory (or wherever you plan to run
the file from) called flickr_api.yaml and put the following in it:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
key: &amp;quot;YOUR_API_KEY&amp;quot;
secret: &amp;quot;YOUR_API_SECRET&amp;quot;
&lt;/pre&gt;
&lt;p&gt;And here's how we use that key and secret to authenticate using the
flickrapi library; first we read the yaml file, set our instance
variables, and authenticate via Flickr (the first time through, a
browser window will pop-up and ask you for your Flickr login, and after
that it will cache the authentication token).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Flickr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;object&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_keys&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_keys&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_auth2&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;read_keys&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="sd"&gt;            Read the flickr API key and secret from a local file&lt;/span&gt;
&lt;span class="sd"&gt;        &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
        &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;flickr_api.yaml&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;api&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;yaml&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;load&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;api&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;key&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;api&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;secret&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;set_keys&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;secret&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;api_key&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;api_secret&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;secret&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_auth2&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Authenticating to Flickr&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;flickr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;flickrapi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;FlickrAPI&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;api_key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;api_secret&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;token&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;frob&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;flickr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_token_part_one&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;perms&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;read&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;token&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;raw_input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Press ENTER after you authorized this program&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;flickr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_token_part_two&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;token&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;frob&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Authentication succeeded&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="retrieving-photos"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#toc-entry-11"&gt;3.1.2&amp;nbsp;&amp;nbsp;&amp;nbsp;Retrieving photos&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;The flickrapi library provides direct access to the &lt;a class="reference external" href="http://www.flickr.com/services/api/"&gt;Flickr API&lt;/a&gt;, so
for example, the API function flickr.photos.search would be called by
using Flickr.photos_search, as shown in the method below that gets
photos matching a list of tags:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_tagged&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tags&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;download_dir&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;photos&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot; Get photos with the given list of tags&lt;/span&gt;
&lt;span class="sd"&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;connecting to flickr, and getting &lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s2"&gt; photos with tags &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tags&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;flickr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;photos_search&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;api_key&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;api_key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;user_id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;me&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tags&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;,&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tags&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;per_page&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;photos&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_extract_photos_from_xml&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;photo_filenames&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_sync_photos&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;photos&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;download_dir&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Found &lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s2"&gt; photos&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;photos&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;photo_filenames&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;_extract_photos_from_xml&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;xml&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;photos&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;xml&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;iter&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tag&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;rsp&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="c1"&gt;# the response header.  stat member should be &amp;#39;ok&amp;#39;&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;stat&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;ok&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="k"&gt;continue&lt;/span&gt;
            &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="c1"&gt;# error, so just break&lt;/span&gt;
                &lt;span class="k"&gt;break&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tag&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;photo&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;photos&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Photo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;photos&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The flickrapi then returns a REST response with encapsulated XML
matching &lt;a class="reference external" href="http://www.flickr.com/services/api/flickr.photos.search.html"&gt;this spec&lt;/a&gt;, a sample of which is shown below:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;photos&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;page=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;2&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;pages=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;89&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;perpage=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;10&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;total=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;881&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;photo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;2636&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;owner=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;47058503995@N01&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="na"&gt;secret=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;a123456&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;server=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;2&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;title=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;test_04&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="na"&gt;ispublic=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;isfriend=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;0&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;isfamily=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;0&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;photo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;2635&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;owner=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;47058503995@N01&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="na"&gt;secret=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;b123456&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;server=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;2&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;title=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;test_03&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="na"&gt;ispublic=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;0&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;isfriend=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;isfamily=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;photo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;2633&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;owner=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;47058503995@N01&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="na"&gt;secret=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;c123456&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;server=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;2&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;title=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;test_01&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="na"&gt;ispublic=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;isfriend=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;0&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;isfamily=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;0&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;photo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;2610&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;owner=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;12037949754@N01&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="na"&gt;secret=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;d123456&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;server=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;2&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;title=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;00_tall&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="na"&gt;ispublic=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;isfriend=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;0&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;isfamily=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;0&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/photos&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We then iterate through the XML photo tags, and construct a list of
Photo objects, defined below, with some of these attributes being used
to construct the final URL used to download the actual jpeg from
Flickr's server farm:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Photo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;object&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;photo_element&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Construct a photo object out of the XML response from Flickr&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
        &lt;span class="n"&gt;attrs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;farm&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;farmid&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;server&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;serverid&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;id&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;photoid&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;secret&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;secret&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;flickr_attr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;py_attr&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;attrs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
            &lt;span class="nb"&gt;setattr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;py_attr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;photo_element&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;flickr_attr&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;_construct_flickr_url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;http://farm&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt;.staticflickr.com/&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt;_&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt;_b.jpg&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;farmid&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;serverid&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;photoid&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;secret&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;download_photo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;dirname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cache&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tgt_filename&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exists&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dirname&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;makedirs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dirname&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;tgt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dirname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt;.jpg&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;photoid&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;cache&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isfile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tgt&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;tgt&lt;/span&gt;
        &lt;span class="n"&gt;urllib&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;urlretrieve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_construct_flickr_url&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;tgt&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;tgt&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;There are then some other functions that do the mundane job of syncing
the local cache of photos and calling the download_photo method of each
Photo object.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="flashair-code-discussion"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#toc-entry-12"&gt;3.2&amp;nbsp;&amp;nbsp;&amp;nbsp;FlashAir code discussion&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;With the images downloaded from Flickr, we now need to upload to the
FlashAir card, using the following flow that calls various REST methods:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Set the card to write-protect mode (to prevent whoever is powering
the card from writing while we upload the photos)&lt;/li&gt;
&lt;li&gt;Get a list of files already present on the card&lt;/li&gt;
&lt;li&gt;Do some hashing of the filenames (explained below)&lt;/li&gt;
&lt;li&gt;Construct the FAT32 timestamp&lt;/li&gt;
&lt;li&gt;Upload whatever files are not already present&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Here is the simple init method of our Python class, and we will add the
other methods for each item above, in the sections that follow.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;FlashAir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;object&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="sd"&gt;        Interface to the REST API of the Toshiba FlashAir card.&lt;/span&gt;
&lt;span class="sd"&gt;        See the documentation to their API at:&lt;/span&gt;
&lt;span class="sd"&gt;            https://flashair-developers.com/en/&lt;/span&gt;
&lt;span class="sd"&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;hostname&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="sd"&gt;            :param hostname: IP address or hostname of the FlashAir card&lt;/span&gt;
&lt;span class="sd"&gt;            :type hostname: string&lt;/span&gt;
&lt;span class="sd"&gt;        &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hostname&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;hostname&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;card_path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/DCIM/100__TSB&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="setting-the-write-protect"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#toc-entry-13"&gt;3.2.1&amp;nbsp;&amp;nbsp;&amp;nbsp;Setting the write-protect&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;This is a simple GET &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;http://ip/upload.cgi?WRITEPROTECT=ON&lt;/span&gt;&lt;/tt&gt; that
execute using the Python &lt;a class="reference external" href="http://docs.python-requests.org/en/latest/"&gt;Requests&lt;/a&gt; library.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;_set_write_protect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="c1"&gt;# Change the upload directory on the card&lt;/span&gt;
    &lt;span class="n"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;http://&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt;/upload.cgi&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hostname&lt;/span&gt;

    &lt;span class="n"&gt;payload&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;WRITEPROTECT&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;ON&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;params&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;raise_for_status&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;SUCCESS&amp;quot;&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Could not put card into host-write-protect mode&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="getting-the-file-list"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#toc-entry-14"&gt;3.2.2&amp;nbsp;&amp;nbsp;&amp;nbsp;Getting the file list&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;The file listing is also a http request, and the SD card returns a list
that looks like the following:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
WLANSD_FILELIST
/DCIM/100__TSB,FA000001.JPG,128751,33,16602,18432
/DCIM/100__TSB,FLASH3.JPG,370952,32,0,0
/DCIM/100__TSB,FLASH5.JPG,287034,32,0,0
/DCIM/100__TSB,FLASH6.JPG,387163,32,17295,31508
/DCIM/100__TSB,FLASH7.JPG,533998,32,17295,31520
&lt;/pre&gt;
&lt;p&gt;We then parse this using the following code:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_file_list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
     &lt;span class="n"&gt;payload&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;op&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;DIR&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;card_path&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
     &lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;http://&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt;/command.cgi&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hostname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;params&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
     &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;raise_for_status&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;                                                           &lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;
     &lt;span class="c1"&gt;# Divide the returned text by newline, and ignore the first line &amp;quot;WLANSD_FILELIST&amp;quot;&lt;/span&gt;
     &lt;span class="n"&gt;lines&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
     &lt;span class="k"&gt;assert&lt;/span&gt; &lt;span class="n"&gt;lines&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strip&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;WLANSD_FILELIST&amp;#39;&lt;/span&gt;

     &lt;span class="n"&gt;filenames&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
     &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;lines&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:]:&lt;/span&gt;
         &lt;span class="c1"&gt;# Split each line by &amp;#39;,&amp;#39; and take the second column for the filename&lt;/span&gt;
         &lt;span class="n"&gt;values&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;,&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
         &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;values&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
             &lt;span class="n"&gt;filename&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;values&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strip&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
             &lt;span class="n"&gt;filenames&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

     &lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="n"&gt;filenames&lt;/span&gt;
     &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;filenames&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="hash-the-filenames"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#toc-entry-15"&gt;3.2.3&amp;nbsp;&amp;nbsp;&amp;nbsp;Hash the filenames&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;The first-generation FlashAir card only allows REST/CGI uploading of
files that follow the 8.3 DOS naming convention (I've read that the 2nd
gen does away with this requirement). So, we need to convert the jpg
filenames to this convention. I decided to use a hash (SHA-1) to
minimize the chances of a filename conflict, using the hashlib libary:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;_get_renamed_filename&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="c1"&gt;# First, separate out the path from the filename&lt;/span&gt;
        &lt;span class="n"&gt;path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dirname&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;fn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;basename&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;h&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;hashlib&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sha1&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;update&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fn&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;hash_filename&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt;.JPG&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hexdigest&lt;/span&gt;&lt;span class="p"&gt;()[:&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;upper&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;

        &lt;span class="n"&gt;hash_full_filename&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;hash_filename&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Hashed file: &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hash_full_filename&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;hash_full_filename&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="construct-the-timestamp"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#toc-entry-16"&gt;3.2.4&amp;nbsp;&amp;nbsp;&amp;nbsp;Construct the timestamp&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;The FlashAir also requires that you set the timestamp before uploading
any file, in the FAT32 format (a 32-bit integer). After some googling, I
found a solution to convert a time object into this format:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;set_timestamp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="sd"&gt;            :param t: The time stamp&lt;/span&gt;
&lt;span class="sd"&gt;            :type t: time.struct_time&lt;/span&gt;
&lt;span class="sd"&gt;        &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
        &lt;span class="n"&gt;fat32_time&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tm_year&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1980&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;25&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tm_mon&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;21&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tm_mday&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tm_hour&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tm_min&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tm_sec&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="n"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;http://&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt;/upload.cgi&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hostname&lt;/span&gt;
        &lt;span class="n"&gt;payload&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;FTIME&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;0x&lt;/span&gt;&lt;span class="si"&gt;%0.8X&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;fat32_time&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;params&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;raise_for_status&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="upload-files-to-the-flashair"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#toc-entry-17"&gt;3.2.5&amp;nbsp;&amp;nbsp;&amp;nbsp;Upload files to the FlashAir&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Finally, the actual upload is via a HTML form that we access using the
Requests library. First, we set the timestamp, then set the upload
directory, and then submit the upload via a POST.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;upload_file&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
     &lt;span class="c1"&gt;# First, set the time of the photo to right now&lt;/span&gt;
     &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_timestamp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;localtime&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
     &lt;span class="c1"&gt;# Change the upload directory on the card&lt;/span&gt;
     &lt;span class="n"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;http://&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt;/upload.cgi&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hostname&lt;/span&gt;

     &lt;span class="n"&gt;payload&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;UPDIR&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;card_path&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
     &lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;params&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
     &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;raise_for_status&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

     &lt;span class="c1"&gt;# Now, upload the file&lt;/span&gt;
     &lt;span class="n"&gt;hash_full_filename&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_get_renamed_filename&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
     &lt;span class="n"&gt;hash_filename&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;basename&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hash_full_filename&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

     &lt;span class="n"&gt;files&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;file&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:(&lt;/span&gt;&lt;span class="n"&gt;hash_filename&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;rb&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))}&lt;/span&gt;
     &lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;files&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;files&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
     &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;raise_for_status&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="summary"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#toc-entry-18"&gt;4&amp;nbsp;&amp;nbsp;&amp;nbsp;Summary&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;In this post, I've gone over how I added wireless photo sync from Flickr
to any digital photo frame using the FlashAir Wifi SD card. It was quite
easy to get working, and it wouldn't be too hard to extend this to other
photo services, and perhaps even other hacked Wifi SD card types. I may
get around to converting the script architecture to allow plugins for
these different endpoints, depending on need or interest. Hope you find
this useful! Many thanks to all the Makerbot users that first figured
out the upload capabilities of this card!&lt;/p&gt;
&lt;/div&gt;
</content><category term="AirFrame"></category><category term="tech"></category><category term="airframe"></category><category term="flashair"></category><category term="flickr"></category><category term="frame"></category><category term="photo"></category><category term="python"></category></entry><entry><title>Starting a simple Flask app with Heroku</title><link href="https://virantha.com/2013/11/14/starting-a-simple-flask-app-with-heroku/" rel="alternate"></link><published>2013-11-14T21:03:00-05:00</published><updated>2013-11-14T21:03:00-05:00</updated><author><name>virantha</name></author><id>tag:virantha.com,2013-11-14:/2013/11/14/starting-a-simple-flask-app-with-heroku/</id><summary type="html">&lt;div class="figure align-right"&gt;
&lt;img alt="Flask and Heroku" src="/images/2013/python_flask_cloud_scaled.jpg" /&gt;
&lt;/div&gt;
&lt;p&gt;Inspired by &lt;a class="reference external" href="http://shea.io/lightweight-python-apps-with-flask-twitter-bootstrap-and-heroku/"&gt;this article&lt;/a&gt; on Python Weekly, I thought I'd look into
deploying a simple hello world application to Heroku, built on the Flask
micro framework.&lt;/p&gt;
&lt;p&gt;Here's my workflow:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;Create a new directory and Python virtualenv (make sure
virtualenvwrapper is installed!):&lt;/p&gt;
&lt;pre class="literal-block"&gt;
cd ~/dev
mkdir proj
cd proj
mkvirtualenv proj
&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;At â€¦&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;div class="figure align-right"&gt;
&lt;img alt="Flask and Heroku" src="/images/2013/python_flask_cloud_scaled.jpg" /&gt;
&lt;/div&gt;
&lt;p&gt;Inspired by &lt;a class="reference external" href="http://shea.io/lightweight-python-apps-with-flask-twitter-bootstrap-and-heroku/"&gt;this article&lt;/a&gt; on Python Weekly, I thought I'd look into
deploying a simple hello world application to Heroku, built on the Flask
micro framework.&lt;/p&gt;
&lt;p&gt;Here's my workflow:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;Create a new directory and Python virtualenv (make sure
virtualenvwrapper is installed!):&lt;/p&gt;
&lt;pre class="literal-block"&gt;
cd ~/dev
mkdir proj
cd proj
mkvirtualenv proj
&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;At this point, I usually edit my virtualenv proj/bin/postactivate
script to cd into proj, since I usually have multiple projects going
on at the same time.&lt;/p&gt;
&lt;pre class="literal-block"&gt;
#!/bin/tcsh
# This hook is run after this virtualenv is activated.
cd ~/dev/proj
&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Next, install the dependencies:&lt;/p&gt;
&lt;/p&gt;&lt;ol class="arabic simple"&gt;
&lt;li&gt;pip install flask&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.heroku.com"&gt;Get a Heroku account&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Install the &lt;a class="reference external" href="https://toolbelt.heroku.com"&gt;Heroku tools&lt;/a&gt;. This gives you the command-line
`heroku` tool to deploy and run your web app&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Create the following hello.py web server:&lt;/p&gt;
&lt;/p&gt;&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;flask&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Flask&lt;/span&gt;

&lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Flask&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="vm"&gt;__name__&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nd"&gt;@app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;hello&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Hello world!&amp;quot;&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vm"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;__main__&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;port&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;environ&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;PORT&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5000&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;host&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;0.0.0.0&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;port&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;port&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;p&gt;&lt;p&gt;Line 11 where we define `port` is very important for
running on Heroku. The default port of 5000 that a Flask app starts
on does not work for a Heroku deployment. Instead, you need to get
the PORT environment variable (that is set in each Heroku deployment
environment, or dyno) and start the app listening on that port. For
running locally for testing, if there is no PORT variable, then we
use 5000&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Test your Flask install by running this webserver:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
python hello.py
&lt;/pre&gt;
&lt;p&gt;You should see this in your terminal:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
* Running on http://0.0.0.0:5000/
&lt;/pre&gt;
&lt;p&gt;Now, navigate to localhost:5000 in your browser and make sure you
can see &amp;quot;hello world&amp;quot; printed
out in the browser window.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;strong&gt;Files needed to deploy to Heroku&lt;/strong&gt;: Now we're going to add some
files that are required to help Heroku deploy your Flask powered
web-app to its system:&lt;/p&gt;
&lt;ol class="arabic"&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;strong&gt;Python requirements file&lt;/strong&gt;: Run the following to output a list
of all your installed python packages&lt;/p&gt;
&lt;pre class="literal-block"&gt;
pip freeze &amp;gt;! requirements.txt
&lt;/pre&gt;
&lt;p&gt;This should generate a file like the following (note, if you did
not have a clean python package installation environment, you may
have more packages listed below):&lt;/p&gt;
&lt;pre class="literal-block"&gt;
Flask==0.10.1
Jinja2==2.7.1
MarkupSafe==0.18
Werkzeug==0.9.4
itsdangerous==0.23
wsgiref==0.1.2
&lt;/pre&gt;
&lt;p&gt;&lt;p&gt;Although it's usually good practice to change the `==` to
`&amp;gt;=`, so that you're not tied to one particular version of a
package, we'll leave this file as it is now.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;strong&gt;Procfile file&lt;/strong&gt;: This is required for Heroku to &lt;a class="reference external" href="https://devcenter.heroku.com/articles/procfile"&gt;deploy&lt;/a&gt; your
app. Use the following:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
web: python dealscraper/hello.py
&lt;/pre&gt;
&lt;p&gt;&lt;p&gt;You can test this by running ``foreman web`` and making sure
your web server starts up again.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;strong&gt;Deploy to the cloud!&lt;/strong&gt;:
You can now deploy your webserver to Heroku and have it run by
them. Use the following commands to setup the deployment for the
first time:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
git init
git add hello.py requirements.txt Procfile
git commit -m &amp;quot;Initial commit&amp;quot;
heroku create
heroku apps:rename proj
git push heroku master
&lt;/pre&gt;
&lt;p&gt;Note that when you run ``heroku create`` it gives your app a
random name like &amp;quot;serene-meadow-3827&amp;quot;, so we want to rename it to our
project name. If all goes well, the first time you do the create, it
will ask your for your Heroku login and password, and then when you
go the git push, it should show something like the following:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
Counting objects: 7, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (3/3), done.
Writing objects: 100% (4/4), 472 bytes | 0 bytes/s, done.
Total 4 (delta 1), reused 0 (delta 0)

-----&amp;gt; Python app detected
-----&amp;gt; No runtime.txt provided; assuming python-2.7.4.
-----&amp;gt; Using Python runtime (python-2.7.4)
-----&amp;gt; Installing dependencies using Pip (1.3.1)
       Cleaning up...
-----&amp;gt; Discovering process types
       Procfile declares types -&amp;gt; web

-----&amp;gt; Compiled slug size: 28.4MB
-----&amp;gt; Launching... done, v5
       http://proj.herokuapp.com deployed to Heroku

To git&amp;#64;heroku.com:proj.git
   0ed96f3..dcd13ba  master -&amp;gt; master
&lt;/pre&gt;
&lt;p&gt;&lt;p&gt;Whenever you want to deploy a change in your code, just do the
``git commit -m &amp;quot;Message&amp;quot;`` and ``git push heroku master`` to
push your changes to the Heroku infrastructure and restart your
server.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Now, run &lt;tt class="docutils literal"&gt;heroku ps:scale web=1&lt;/tt&gt; to set your server to use one dyno
or instance. You can check the status of your instance by doing
&lt;tt class="docutils literal"&gt;heroku ps&lt;/tt&gt; which should yield&lt;/p&gt;
&lt;/p&gt;&lt;pre class="literal-block"&gt;
Scaling web dynos... done, now running 1
&lt;/pre&gt;
&lt;p&gt;Check that your process is running by doing ``heroku ps`` which
might yield something like:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
=== web (1X): `python hello.py`
web.1: up 2013/11/14 15:58:28 (~ 22s ago)
&lt;/pre&gt;
&lt;p&gt;&lt;p&gt;You can check the server logs by doing ``heroku logs``&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;strong&gt;Test the server&lt;/strong&gt;: Just go to &lt;a class="reference external" href="http://proj.herokuapp.com"&gt;http://proj.herokuapp.com&lt;/a&gt; to see your
web server in action!&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content><category term="Tech"></category><category term="flask"></category><category term="heroku"></category><category term="python"></category><category term="tech"></category></entry><entry><title>Creating new notes and attaching files using Evernote's Python API</title><link href="https://virantha.com/2013/11/04/creating-new-notes-and-attaching-files-using-evernotes-python-api/" rel="alternate"></link><published>2013-11-04T17:53:00-05:00</published><updated>2013-11-04T17:53:00-05:00</updated><author><name>virantha</name></author><id>tag:virantha.com,2013-11-04:/2013/11/04/creating-new-notes-and-attaching-files-using-evernotes-python-api/</id><summary type="html">&lt;div class="figure align-right"&gt;
&lt;img alt="Documents to Evernote" src="/images/2013/cloud.jpg" /&gt;
&lt;/div&gt;
&lt;p&gt;I managed to piece together how to attach a new PDF file to an Evernote
note using their Python API, so I thought it might be useful to have a
post that has all of this information together in one place. &amp;nbsp;I've put
together a complete example that will:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Authenticate â€¦&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;div class="figure align-right"&gt;
&lt;img alt="Documents to Evernote" src="/images/2013/cloud.jpg" /&gt;
&lt;/div&gt;
&lt;p&gt;I managed to piece together how to attach a new PDF file to an Evernote
note using their Python API, so I thought it might be useful to have a
post that has all of this information together in one place. &amp;nbsp;I've put
together a complete example that will:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Authenticate to Evernote using a developer token (Oauth2 is a topic
for another day)&lt;/li&gt;
&lt;li&gt;Check if a notebook exists; if not, it will create it for you.&lt;/li&gt;
&lt;li&gt;Create a new note in the notebook&lt;/li&gt;
&lt;li&gt;Attach a PDF file to that note (including calculating the necessary
MD5 hash)&lt;/li&gt;
&lt;li&gt;Upload the new note&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The complete file is shown at the end of this post, and I'll go through
each function separately in the next sections.&lt;/p&gt;
&lt;div class="contents topic" id="table-of-contents"&gt;
&lt;p class="topic-title"&gt;&lt;a class="reference internal" href="#top"&gt;Table of Contents:&lt;/a&gt;&lt;/p&gt;
&lt;ul class="auto-toc simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#imports" id="toc-entry-1"&gt;1&amp;nbsp;&amp;nbsp;&amp;nbsp;Imports&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#authentication" id="toc-entry-2"&gt;2&amp;nbsp;&amp;nbsp;&amp;nbsp;Authentication&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#handle-notebooks" id="toc-entry-3"&gt;3&amp;nbsp;&amp;nbsp;&amp;nbsp;Handle notebooks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#create-the-new-note-with-attachment" id="toc-entry-4"&gt;4&amp;nbsp;&amp;nbsp;&amp;nbsp;Create the new note with attachment&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#uploading-the-note" id="toc-entry-5"&gt;5&amp;nbsp;&amp;nbsp;&amp;nbsp;Uploading the note&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#complete-example" id="toc-entry-6"&gt;6&amp;nbsp;&amp;nbsp;&amp;nbsp;Complete example&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="imports"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#toc-entry-1"&gt;1&amp;nbsp;&amp;nbsp;&amp;nbsp;Imports&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Here's the complete set of imports that took me a while to track down,
even from Evernote's own examples:&lt;/p&gt;
&lt;p&gt;[gist:id=7294365,file=_imports.py]&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="authentication"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#toc-entry-2"&gt;2&amp;nbsp;&amp;nbsp;&amp;nbsp;Authentication&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;And here's how to do the authentication using a developer token (Go to
the following places to get a token: &lt;a class="reference external" href="https://sandbox.evernote.com/api/DeveloperToken.action"&gt;Sandbox evernote server&lt;/a&gt; or &lt;a class="reference external" href="https://www.evernote.com/api/DeveloperToken.action"&gt;Production Evernote server&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;[gist:id=7294365,file=_auth.py]&lt;/p&gt;
&lt;p&gt;The important thing is to keep the EvernoteClient object around in
&lt;tt class="docutils literal"&gt;self.client&lt;/tt&gt;, as this will proved the authenticated access to the
note stores.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="handle-notebooks"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#toc-entry-3"&gt;3&amp;nbsp;&amp;nbsp;&amp;nbsp;Handle notebooks&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The next step is to check whether the required notebook is available,
or if we need to make it. See the _check_and_make_notebook function.&lt;/p&gt;
&lt;p&gt;[gist:id=7294365,file=_notebook.py]&lt;/p&gt;
&lt;p&gt;We use the &lt;tt class="docutils literal"&gt;get_note_store&lt;/tt&gt; API call to get all the
notebooks, and return a dict with the notebook name mapping to the
notebook, in function &lt;tt class="docutils literal"&gt;_get_notebooks&lt;/tt&gt;. Then, if the desired
notebook is present, we update the stack (in Evernote, a notebook can be
in a collection called a &amp;quot;stack&amp;quot; of notebooks) and return the notebook
pointer. If not, we create a new notebook using the &lt;tt class="docutils literal"&gt;Types.Notebook()&lt;/tt&gt;
call, and store it using the &lt;tt class="docutils literal"&gt;createNotebook&lt;/tt&gt; API call in the
&lt;tt class="docutils literal"&gt;note_store&lt;/tt&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="create-the-new-note-with-attachment"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#toc-entry-4"&gt;4&amp;nbsp;&amp;nbsp;&amp;nbsp;Create the new note with attachment&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Next is the real meat of this example, where we create the note with
the attachment:&lt;/p&gt;
&lt;p&gt;[gist:id=7294365,file=_note.py]&lt;/p&gt;
&lt;p&gt;We create a new note using &lt;tt class="docutils literal"&gt;Types.Note()&lt;/tt&gt;, and set its containing
notebook using the &lt;tt class="docutils literal"&gt;GUID&lt;/tt&gt; of the notebook. We then start setting the
contents of the note using the Evernote markup language. All the text
and attachment links must be inside the &amp;quot;en-note&amp;quot; tag. The content is
then built up as follows:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Read in the PDF file to attach&lt;/li&gt;
&lt;li&gt;Calculate the MD5 hash&lt;/li&gt;
&lt;li&gt;Create a new Data container for Evernote and store the hash, size,
and data from the file&lt;/li&gt;
&lt;li&gt;Create a link to this file to insert into the content of the note&lt;/li&gt;
&lt;li&gt;Create a &lt;tt class="docutils literal"&gt;Resource&lt;/tt&gt; type to hold the PDF &lt;tt class="docutils literal"&gt;Data&lt;/tt&gt;, and put it into
a &lt;tt class="docutils literal"&gt;Resource&lt;/tt&gt; list&lt;/li&gt;
&lt;li&gt;Append the resource list to the note&lt;/li&gt;
&lt;li&gt;Return this newly formed note&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="uploading-the-note"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#toc-entry-5"&gt;5&amp;nbsp;&amp;nbsp;&amp;nbsp;Uploading the note&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The final step is to upload the note:&lt;/p&gt;
&lt;p&gt;[gist:id=7294365,file=_upload.py]&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="complete-example"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#toc-entry-6"&gt;6&amp;nbsp;&amp;nbsp;&amp;nbsp;Complete example&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;[gist:id=7294365,file=evernote_pdf_upload.py]&lt;/p&gt;
&lt;/div&gt;
</content><category term="Tech"></category><category term="evernote"></category><category term="python"></category><category term="tech"></category></entry><entry><title>Quick web app with Go, Ember.js, and MongoDB</title><link href="https://virantha.com/2013/09/29/quick-web-app-with-go-ember-js-and-mongodb/" rel="alternate"></link><published>2013-09-29T19:17:00-04:00</published><updated>2013-09-29T19:17:00-04:00</updated><author><name>virantha</name></author><id>tag:virantha.com,2013-09-29:/2013/09/29/quick-web-app-with-go-ember-js-and-mongodb/</id><summary type="html">&lt;div class="figure align-left" style="width: 236px"&gt;
&lt;img alt="skip_better Screenshot" src="/images/2013/kittens_app_screenshot_scaled.png" style="width: 236px;" /&gt;
&lt;/div&gt;
&lt;p&gt;As part of my recent foray into the &lt;a class="reference external" href="http://golang.org/"&gt;Go&lt;/a&gt; language, I stumbled across
this excellent example by Nerdyworm &lt;a class="reference external" href="http://nerdyworm.com/blog/2013/05/21/building-an-app-with-ember-dot-js-and-go/"&gt;part 1&lt;/a&gt;, &lt;a class="reference external" href="http://nerdyworm.com/blog/2013/05/24/building-an-app-with-ember-dot-js-and-go-part-2/"&gt;part 2&lt;/a&gt;, &lt;a class="reference external" href="http://nerdyworm.com/blog/2013/05/27/building-an-app-with-ember-dot-js-and-go-part-3/"&gt;part 3&lt;/a&gt; that
shows how to build a small web application using the &lt;a class="reference external" href="http://emberjs.com/"&gt;ember.js&lt;/a&gt;
javascript framework and Go providing the backend server. I took this
example, fixed â€¦&lt;/p&gt;</summary><content type="html">&lt;div class="figure align-left" style="width: 236px"&gt;
&lt;img alt="skip_better Screenshot" src="/images/2013/kittens_app_screenshot_scaled.png" style="width: 236px;" /&gt;
&lt;/div&gt;
&lt;p&gt;As part of my recent foray into the &lt;a class="reference external" href="http://golang.org/"&gt;Go&lt;/a&gt; language, I stumbled across
this excellent example by Nerdyworm &lt;a class="reference external" href="http://nerdyworm.com/blog/2013/05/21/building-an-app-with-ember-dot-js-and-go/"&gt;part 1&lt;/a&gt;, &lt;a class="reference external" href="http://nerdyworm.com/blog/2013/05/24/building-an-app-with-ember-dot-js-and-go-part-2/"&gt;part 2&lt;/a&gt;, &lt;a class="reference external" href="http://nerdyworm.com/blog/2013/05/27/building-an-app-with-ember-dot-js-and-go-part-3/"&gt;part 3&lt;/a&gt; that
shows how to build a small web application using the &lt;a class="reference external" href="http://emberjs.com/"&gt;ember.js&lt;/a&gt;
javascript framework and Go providing the backend server. I took this
example, fixed up some incompatibilites with the latest version of
ember-data.js, and added support for a backing store using MongoDB. You
can find all the code for this at my &lt;a class="reference external" href="http://github.com/virantha/kittens_ember_go"&gt;github&lt;/a&gt;, while I describe some of
the more interesting stuff below.&lt;/p&gt;
&lt;div class="contents topic" id="table-of-contents"&gt;
&lt;p class="topic-title"&gt;&lt;a class="reference internal" href="#top"&gt;Table of Contents:&lt;/a&gt;&lt;/p&gt;
&lt;ul class="auto-toc simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#getting-started" id="toc-entry-1"&gt;1&amp;nbsp;&amp;nbsp;&amp;nbsp;Getting started&lt;/a&gt;&lt;ul class="auto-toc"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#get-my-code" id="toc-entry-2"&gt;1.1&amp;nbsp;&amp;nbsp;&amp;nbsp;Get my code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#depedencies" id="toc-entry-3"&gt;1.2&amp;nbsp;&amp;nbsp;&amp;nbsp;Depedencies&lt;/a&gt;&lt;ul class="auto-toc"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#mongodb" id="toc-entry-4"&gt;1.2.1&amp;nbsp;&amp;nbsp;&amp;nbsp;MongoDB&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#gorilla" id="toc-entry-5"&gt;1.2.2&amp;nbsp;&amp;nbsp;&amp;nbsp;Gorilla&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#what-we-re-going-to-be-building" id="toc-entry-6"&gt;2&amp;nbsp;&amp;nbsp;&amp;nbsp;What we're going to be building&lt;/a&gt;&lt;ul class="auto-toc"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#running-the-app" id="toc-entry-7"&gt;2.1&amp;nbsp;&amp;nbsp;&amp;nbsp;Running the app&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#code-discussion" id="toc-entry-8"&gt;3&amp;nbsp;&amp;nbsp;&amp;nbsp;Code discussion&lt;/a&gt;&lt;ul class="auto-toc"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#the-backend-go-server-server-mongo-go" id="toc-entry-9"&gt;3.1&amp;nbsp;&amp;nbsp;&amp;nbsp;The Backend Go Server (server_mongo.go)&lt;/a&gt;&lt;ul class="auto-toc"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#main" id="toc-entry-10"&gt;3.1.1&amp;nbsp;&amp;nbsp;&amp;nbsp;Main&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#globals-and-types" id="toc-entry-11"&gt;3.1.2&amp;nbsp;&amp;nbsp;&amp;nbsp;Globals and types&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#the-handlers" id="toc-entry-12"&gt;3.1.3&amp;nbsp;&amp;nbsp;&amp;nbsp;The handlers&lt;/a&gt;&lt;ul class="auto-toc"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#create-a-kitten" id="toc-entry-13"&gt;3.1.3.1&amp;nbsp;&amp;nbsp;&amp;nbsp;Create a kitten&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#display-the-kittens" id="toc-entry-14"&gt;3.1.3.2&amp;nbsp;&amp;nbsp;&amp;nbsp;Display the kittens&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#delete-a-kitten" id="toc-entry-15"&gt;3.1.3.3&amp;nbsp;&amp;nbsp;&amp;nbsp;Delete a kitten&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#update-a-kitten-name" id="toc-entry-16"&gt;3.1.3.4&amp;nbsp;&amp;nbsp;&amp;nbsp;Update a kitten name&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#frontend-ember-js-app" id="toc-entry-17"&gt;3.2&amp;nbsp;&amp;nbsp;&amp;nbsp;Frontend ember.js app&lt;/a&gt;&lt;ul class="auto-toc"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#html-output-template" id="toc-entry-18"&gt;3.2.1&amp;nbsp;&amp;nbsp;&amp;nbsp;HTML output template&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#ember-js-application" id="toc-entry-19"&gt;3.2.2&amp;nbsp;&amp;nbsp;&amp;nbsp;Ember.js application&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="getting-started"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#toc-entry-1"&gt;1&amp;nbsp;&amp;nbsp;&amp;nbsp;Getting started&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="get-my-code"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#toc-entry-2"&gt;1.1&amp;nbsp;&amp;nbsp;&amp;nbsp;Get my code&lt;/a&gt;&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git&lt;span class="w"&gt; &lt;/span&gt;clone&lt;span class="w"&gt; &lt;/span&gt;https://github.com/virantha/kittens_ember_go.git
&lt;span class="nb"&gt;cd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;kittens_ember_go
setenv&lt;span class="w"&gt; &lt;/span&gt;GOPATH&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;&lt;span class="nb"&gt;pwd&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;/go/src
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="depedencies"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#toc-entry-3"&gt;1.2&amp;nbsp;&amp;nbsp;&amp;nbsp;Depedencies&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;I'm assuming you have Go already installed:&lt;/p&gt;
&lt;div class="section" id="mongodb"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#toc-entry-4"&gt;1.2.1&amp;nbsp;&amp;nbsp;&amp;nbsp;MongoDB&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Follow the instructions at &lt;a class="reference external" href="http://docs.mongodb.org/manual/installation/"&gt;Mongo&lt;/a&gt; to install for your platform. Make
sure you can start the Mongo server afterwards and insert some records
into a test database to validate your install.&lt;/p&gt;
&lt;p&gt;Then, you need to install the Go driver for Mongodb. First, you need to
get &lt;a class="reference external" href="http://docs.mongodb.org/manual/installation/"&gt;Canonical's Bazaar&lt;/a&gt; revision control system. Make sure you can
type ''bzr'' at the command-line to verify install. Then, run the
following command to install &lt;a class="reference external" href="http://labix.org/mgo"&gt;Mgo&lt;/a&gt;&lt;/p&gt;
&lt;pre class="literal-block"&gt;
# Install mgo, the mongodb driver for go
# Make sure your GOPATH is set as above
go get labix.org/v2/mgo
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="gorilla"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#toc-entry-5"&gt;1.2.2&amp;nbsp;&amp;nbsp;&amp;nbsp;Gorilla&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Install this muxing package for Go:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
go get github.com/gorilla/mux
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="what-we-re-going-to-be-building"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#toc-entry-6"&gt;2&amp;nbsp;&amp;nbsp;&amp;nbsp;What we're going to be building&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;We'll build a small web application that you can open directly in your
browser. It will do exactly what Nerdyworm built in his original, except
that this version adds data persistence in a database. The app presents
the following interface:&lt;/p&gt;
&lt;div class="figure"&gt;
&lt;img alt="Screenshot of kittens app" src="/images/2013/kittens_app_screenshot.png" /&gt;
&lt;/div&gt;
&lt;p&gt;It will let you create a &amp;quot;kitten&amp;quot;, linking
to a random kitten image. &amp;nbsp;You can then either edit the kitten name, or
delete the kitten, with all kittens stored in the backing MongoDB
database. &amp;nbsp;The web interface is done in Ember.js, and Go provides the
web-server/database access.&lt;/p&gt;
&lt;div class="section" id="running-the-app"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#toc-entry-7"&gt;2.1&amp;nbsp;&amp;nbsp;&amp;nbsp;Running the app&lt;/a&gt;&lt;/h3&gt;
&lt;dl class="docutils"&gt;
&lt;dt&gt;Once you have everything installed, you can just do the following to start&lt;/dt&gt;
&lt;dd&gt;the server:&lt;/dd&gt;
&lt;/dl&gt;
&lt;pre class="literal-block"&gt;
cd site
go run ../go/src/github.com/virantha/server_mongo.go
&lt;/pre&gt;
&lt;p&gt;Then navigate to &lt;a class="reference external" href="http://localhost:8081/#/create"&gt;http://localhost:8081&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="code-discussion"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#toc-entry-8"&gt;3&amp;nbsp;&amp;nbsp;&amp;nbsp;Code discussion&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;First, I'll discuss the server-side Go program that accesses the Mongo
database and provides JSON objects for the front-end. That's not to say
the client-side is not interesting; quite the contrary, it's pretty
impressive what one can do with ember.js, but most of that has already
been covered in Nerdyworm's posts.&lt;/p&gt;
&lt;div class="section" id="the-backend-go-server-server-mongo-go"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#toc-entry-9"&gt;3.1&amp;nbsp;&amp;nbsp;&amp;nbsp;The Backend Go Server (server_mongo.go)&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The server is just one single go file; here's the list of imports:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;package&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;main&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;net/http&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;log&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;github.com/gorilla/mux&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;encoding/json&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;math/rand&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;fmt&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;labix.org/v2/mgo&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;labix.org/v2/mgo/bson&amp;quot;&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;div class="section" id="main"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#toc-entry-10"&gt;3.1.1&amp;nbsp;&amp;nbsp;&amp;nbsp;Main&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Here's the main function where we set up the URL routes for the
application, connect to the database, and start the web server.&lt;/p&gt;
&lt;p&gt;Lines 6 to 12 setup the routes for &amp;quot;getting&amp;quot; kittens for display,
&amp;quot;creating&amp;quot; a new kitten, &amp;quot;updating&amp;quot; an existing kitten, and &amp;quot;deleting&amp;quot; a
kitten. This is all unchanged from the original source code.&lt;/p&gt;
&lt;p&gt;Lines 16 to 20 are new, and handle the MongoDB connection. We open a new
session and then connect to the kittens collection. These are global
variables for this app, explained in the next section.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;
&lt;span class="normal"&gt;16&lt;/span&gt;
&lt;span class="normal"&gt;17&lt;/span&gt;
&lt;span class="normal"&gt;18&lt;/span&gt;
&lt;span class="normal"&gt;19&lt;/span&gt;
&lt;span class="normal"&gt;20&lt;/span&gt;
&lt;span class="normal"&gt;21&lt;/span&gt;
&lt;span class="normal"&gt;22&lt;/span&gt;
&lt;span class="normal"&gt;23&lt;/span&gt;
&lt;span class="normal"&gt;24&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;func&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kd"&gt;var&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;error&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Starting Server&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;r&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;:=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;mux&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;NewRouter&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;r&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;HandleFunc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/api/kittens&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;KittensHandler&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;Methods&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;GET&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;r&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;HandleFunc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/api/kittens&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;CreateKittenHandler&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;Methods&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;POST&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;r&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;HandleFunc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/api/kittens/{id}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;UpdateKittenHandler&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;Methods&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;PUT&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;r&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;HandleFunc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/api/kittens/{id}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;DeleteKittenHandler&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;Methods&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;DELETE&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;http&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Handle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/api/&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;r&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;http&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Handle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;http&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;FileServer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;http&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Dir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Starting mongo db session&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;session&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;mgo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Dial&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;localhost&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;!=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;nil&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;panic&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;defer&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;session&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;session&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;SetMode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;mgo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Monotonic&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;collection&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;session&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DB&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Kittens&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;C&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;kittens&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Listening on 8080&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;http&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ListenAndServe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;:8080&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;nil&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="globals-and-types"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#toc-entry-11"&gt;3.1.2&amp;nbsp;&amp;nbsp;&amp;nbsp;Globals and types&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Here's the list of custom types defined for our application. First, we
have the database pointers to the session and collection.&lt;/p&gt;
&lt;p&gt;Then we have the struct for a single Kitten, which contains an Id of
type ObjectId (used as unique identifier in the MongoDB), the name of
the kitten, and a string with the URL for the picture. Note the string
literals (the backticks are just to avoid backslashing the
double-quotes) at the end of each member type that specifies a &lt;strong&gt;tag&lt;/strong&gt;
for each member that will be used as a name for JSON or BSON
representations instead of the member name. Also note how we can use
_id for the BSON representation for mongo (which is the default unique
identifier in Mongo for each element), while still keeping id for the
JSON, and capitalized Id for making it an exported member in Go.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;
&lt;span class="normal"&gt;16&lt;/span&gt;
&lt;span class="normal"&gt;17&lt;/span&gt;
&lt;span class="normal"&gt;18&lt;/span&gt;
&lt;span class="normal"&gt;19&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;var&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;session&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nx"&gt;mgo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Session&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;collection&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nx"&gt;mgo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Collection&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="kd"&gt;type&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;Kitten&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kd"&gt;struct&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;Id&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;bson&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ObjectId&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;`bson:&amp;quot;_id&amp;quot; json:&amp;quot;id&amp;quot;`&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;Name&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;`json:&amp;quot;name&amp;quot;`&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;Picture&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;`json:&amp;quot;picture&amp;quot;`&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;type&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;KittenJSON&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kd"&gt;struct&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;Kitten&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;Kitten&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;`json:&amp;quot;kitten&amp;quot;`&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;


&lt;span class="kd"&gt;type&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;KittensJSON&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kd"&gt;struct&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;Kittens&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="nx"&gt;Kitten&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;`json:&amp;quot;kittens&amp;quot;`&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="the-handlers"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#toc-entry-12"&gt;3.1.3&amp;nbsp;&amp;nbsp;&amp;nbsp;The handlers&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;We have a set of 4 handlers for each of the actions the client-side
application might send our way:&lt;/p&gt;
&lt;div class="section" id="create-a-kitten"&gt;
&lt;h5&gt;&lt;a class="toc-backref" href="#toc-entry-13"&gt;3.1.3.1&amp;nbsp;&amp;nbsp;&amp;nbsp;Create a kitten&lt;/a&gt;&lt;/h5&gt;
&lt;p&gt;In lines 5 to 9, we decode the incoming kitten from JSON. Next, in lines
10 to 15, we pick a random image width/height and to get the
corresponding kitten image from placekitten.com.&lt;/p&gt;
&lt;p&gt;Finally, in linees 19 to 26, we create a new Id, and insert this kitten
instance into our database, after which we return a JSON object of the
kitten to render in the client.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;
&lt;span class="normal"&gt;16&lt;/span&gt;
&lt;span class="normal"&gt;17&lt;/span&gt;
&lt;span class="normal"&gt;18&lt;/span&gt;
&lt;span class="normal"&gt;19&lt;/span&gt;
&lt;span class="normal"&gt;20&lt;/span&gt;
&lt;span class="normal"&gt;21&lt;/span&gt;
&lt;span class="normal"&gt;22&lt;/span&gt;
&lt;span class="normal"&gt;23&lt;/span&gt;
&lt;span class="normal"&gt;24&lt;/span&gt;
&lt;span class="normal"&gt;25&lt;/span&gt;
&lt;span class="normal"&gt;26&lt;/span&gt;
&lt;span class="normal"&gt;27&lt;/span&gt;
&lt;span class="normal"&gt;28&lt;/span&gt;
&lt;span class="normal"&gt;29&lt;/span&gt;
&lt;span class="normal"&gt;30&lt;/span&gt;
&lt;span class="normal"&gt;31&lt;/span&gt;
&lt;span class="normal"&gt;32&lt;/span&gt;
&lt;span class="normal"&gt;33&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;func&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;CreateKittenHandler&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;w&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;http&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ResponseWriter&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;r&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nx"&gt;http&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Request&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kd"&gt;var&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;kittenJSON&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;KittenJSON&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;:=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;NewDecoder&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;r&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Body&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;Decode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nx"&gt;kittenJSON&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;!=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;nil&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;panic&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;kitten&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;:=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;kittenJSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Kitten&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="c1"&gt;// Generate a random dimension for the kitten&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;:=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;rand&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Int&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;400&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;height&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;:=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;rand&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Int&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;400&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;height&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;height&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;kitten&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Picture&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Sprintf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://placekitten.com/%d/%d&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;height&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="c1"&gt;// Store the new kitten in the database&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="c1"&gt;// First, let&amp;#39;s get a new id&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;obj_id&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;:=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;bson&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;NewObjectId&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;kitten&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Id&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;obj_id&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;collection&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Insert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nx"&gt;kitten&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;!=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;nil&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nb"&gt;panic&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Inserted new kitten %s with name %s&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;kitten&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;kitten&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;:=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Marshal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;KittenJSON&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;Kitten&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;kitten&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;!=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;nil&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;panic&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;w&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Header&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;Set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Content-Type&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;application/json&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;w&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="display-the-kittens"&gt;
&lt;h5&gt;&lt;a class="toc-backref" href="#toc-entry-14"&gt;3.1.3.2&amp;nbsp;&amp;nbsp;&amp;nbsp;Display the kittens&lt;/a&gt;&lt;/h5&gt;
&lt;p&gt;Here, we just return an array of kitten objects from the database for
display in the client. We iterate through the kittens collection and
build up a local slice of kittens (I admit, this is pretty inefficient
and we'd probably want to cache this in a real application) that then
gets marshaled into JSON for display.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;
&lt;span class="normal"&gt;16&lt;/span&gt;
&lt;span class="normal"&gt;17&lt;/span&gt;
&lt;span class="normal"&gt;18&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;func&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;KittensHandler&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;w&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;http&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ResponseWriter&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;r&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nx"&gt;http&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Request&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="c1"&gt;// Let&amp;#39;s build up the kittens slice&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kd"&gt;var&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;mykittens&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="nx"&gt;Kitten&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;iter&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;:=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;collection&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;nil&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;Iter&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;:=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;Kitten&lt;/span&gt;&lt;span class="p"&gt;{}&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;iter&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Next&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nx"&gt;mykittens&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;mykittens&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;w&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Header&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;Set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Content-Type&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;application/json&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;:=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Marshal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;KittensJSON&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;Kittens&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;mykittens&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;!=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;nil&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;panic&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;w&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Provided json&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="delete-a-kitten"&gt;
&lt;h5&gt;&lt;a class="toc-backref" href="#toc-entry-15"&gt;3.1.3.3&amp;nbsp;&amp;nbsp;&amp;nbsp;Delete a kitten&lt;/a&gt;&lt;/h5&gt;
&lt;p&gt;This is probably the most trivial to write. The only &amp;quot;gotcha&amp;quot; (if you
can even call it that) is to convert the incoming string id into an
actual ObjectId object for lookup in the MongoDB.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;func&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;DeleteKittenHandler&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;w&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;http&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ResponseWriter&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;r&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nx"&gt;http&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Request&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="c1"&gt;// Grab the kitten&amp;#39;s id from the incoming url&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kd"&gt;var&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;error&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;vars&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;:=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;mux&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Vars&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;r&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;:=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;vars&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;id&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="c1"&gt;// Remove it from database&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;collection&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;bson&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;M&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;_id&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;bson&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ObjectIdHex&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)})&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;!=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;nil&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Could not find kitten %s to delete&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;w&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;WriteHeader&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;http&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;StatusNoContent&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="update-a-kitten-name"&gt;
&lt;h5&gt;&lt;a class="toc-backref" href="#toc-entry-16"&gt;3.1.3.4&amp;nbsp;&amp;nbsp;&amp;nbsp;Update a kitten name&lt;/a&gt;&lt;/h5&gt;
&lt;p&gt;Again, pretty straightforward:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;
&lt;span class="normal"&gt;16&lt;/span&gt;
&lt;span class="normal"&gt;17&lt;/span&gt;
&lt;span class="normal"&gt;18&lt;/span&gt;
&lt;span class="normal"&gt;19&lt;/span&gt;
&lt;span class="normal"&gt;20&lt;/span&gt;
&lt;span class="normal"&gt;21&lt;/span&gt;
&lt;span class="normal"&gt;22&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;func&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;UpdateKittenHandler&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;w&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;http&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ResponseWriter&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;r&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nx"&gt;http&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Request&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kd"&gt;var&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;error&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="c1"&gt;// Grab the kitten&amp;#39;s id from the incoming url&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;vars&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;:=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;mux&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Vars&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;r&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;:=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;bson&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ObjectIdHex&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;vars&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;id&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="c1"&gt;// Decode the incoming kitten json&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kd"&gt;var&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;kittenJSON&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;KittenJSON&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;NewDecoder&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;r&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Body&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;Decode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nx"&gt;kittenJSON&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;!=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;nil&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nb"&gt;panic&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="c1"&gt;// Update the database&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;collection&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Update&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;bson&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;M&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;_id&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="w"&gt;             &lt;/span&gt;&lt;span class="nx"&gt;bson&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;M&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;kittenJSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Kitten&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                    &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;_id&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                    &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;picture&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;kittenJSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Kitten&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Picture&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                    &lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;nil&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Updated kitten %s name to %s&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;kittenJSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Kitten&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;panic&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;w&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;WriteHeader&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;http&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;StatusNoContent&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;p&gt;And that's pretty much it for the back-end server. Go is pretty concise!&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="frontend-ember-js-app"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#toc-entry-17"&gt;3.2&amp;nbsp;&amp;nbsp;&amp;nbsp;Frontend ember.js app&lt;/a&gt;&lt;/h3&gt;
&lt;div class="section" id="html-output-template"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#toc-entry-18"&gt;3.2.1&amp;nbsp;&amp;nbsp;&amp;nbsp;HTML output template&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;First, here's the html that the ember framework will write into. A lot
of it is just boilerplate and there's nothing really new here from the
original source that's been discussed by nerdyworm:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;
&lt;span class="normal"&gt;16&lt;/span&gt;
&lt;span class="normal"&gt;17&lt;/span&gt;
&lt;span class="normal"&gt;18&lt;/span&gt;
&lt;span class="normal"&gt;19&lt;/span&gt;
&lt;span class="normal"&gt;20&lt;/span&gt;
&lt;span class="normal"&gt;21&lt;/span&gt;
&lt;span class="normal"&gt;22&lt;/span&gt;
&lt;span class="normal"&gt;23&lt;/span&gt;
&lt;span class="normal"&gt;24&lt;/span&gt;
&lt;span class="normal"&gt;25&lt;/span&gt;
&lt;span class="normal"&gt;26&lt;/span&gt;
&lt;span class="normal"&gt;27&lt;/span&gt;
&lt;span class="normal"&gt;28&lt;/span&gt;
&lt;span class="normal"&gt;29&lt;/span&gt;
&lt;span class="normal"&gt;30&lt;/span&gt;
&lt;span class="normal"&gt;31&lt;/span&gt;
&lt;span class="normal"&gt;32&lt;/span&gt;
&lt;span class="normal"&gt;33&lt;/span&gt;
&lt;span class="normal"&gt;34&lt;/span&gt;
&lt;span class="normal"&gt;35&lt;/span&gt;
&lt;span class="normal"&gt;36&lt;/span&gt;
&lt;span class="normal"&gt;37&lt;/span&gt;
&lt;span class="normal"&gt;38&lt;/span&gt;
&lt;span class="normal"&gt;39&lt;/span&gt;
&lt;span class="normal"&gt;40&lt;/span&gt;
&lt;span class="normal"&gt;41&lt;/span&gt;
&lt;span class="normal"&gt;42&lt;/span&gt;
&lt;span class="normal"&gt;43&lt;/span&gt;
&lt;span class="normal"&gt;44&lt;/span&gt;
&lt;span class="normal"&gt;45&lt;/span&gt;
&lt;span class="normal"&gt;46&lt;/span&gt;
&lt;span class="normal"&gt;47&lt;/span&gt;
&lt;span class="normal"&gt;48&lt;/span&gt;
&lt;span class="normal"&gt;49&lt;/span&gt;
&lt;span class="normal"&gt;50&lt;/span&gt;
&lt;span class="normal"&gt;51&lt;/span&gt;
&lt;span class="normal"&gt;52&lt;/span&gt;
&lt;span class="normal"&gt;53&lt;/span&gt;
&lt;span class="normal"&gt;54&lt;/span&gt;
&lt;span class="normal"&gt;55&lt;/span&gt;
&lt;span class="normal"&gt;56&lt;/span&gt;
&lt;span class="normal"&gt;57&lt;/span&gt;
&lt;span class="normal"&gt;58&lt;/span&gt;
&lt;span class="normal"&gt;59&lt;/span&gt;
&lt;span class="normal"&gt;60&lt;/span&gt;
&lt;span class="normal"&gt;61&lt;/span&gt;
&lt;span class="normal"&gt;62&lt;/span&gt;
&lt;span class="normal"&gt;63&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;html&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;head&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;meta&lt;/span&gt; &lt;span class="na"&gt;charset&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;utf-8&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;title&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Kittens&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;title&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;link&lt;/span&gt; &lt;span class="na"&gt;rel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;stylesheet&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;css/normalize.css&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;link&lt;/span&gt; &lt;span class="na"&gt;rel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;stylesheet&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;css/style.css&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;link&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://netdna.bootstrapcdn.com/twitter-bootstrap/2.3.2/css/bootstrap-combined.no-icons.min.css&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;rel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;stylesheet&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;head&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;head&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/x-handlebars&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;container&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Create&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;your&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;own&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;kitten&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;/h1&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;ul&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;nav nav-tabs&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;li&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="nx"&gt;linkTo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;index&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;&lt;span class="nx"&gt;Index&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt;&lt;span class="err"&gt;/linkTo}}&amp;lt;/li&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;li&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="nx"&gt;linkTo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;create&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;&lt;span class="nx"&gt;Create&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt;&lt;span class="err"&gt;/linkTo}}&amp;lt;/li&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;/ul&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt;&lt;span class="nx"&gt;outlet&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;/div&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/x-handlebars&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;data-template-name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;index&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;ul&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;thumbnails&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="nx"&gt;each&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;controller&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;li&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;span3&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;thumbnail&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;img&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt;&lt;span class="nx"&gt;bindAttr&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;picture&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;&lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;caption&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;              &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h3&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;/h3&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;              &lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="nx"&gt;linkTo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;edit&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;&lt;span class="nx"&gt;Edit&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt;&lt;span class="err"&gt;/linkTo}}&lt;/span&gt;
&lt;span class="w"&gt;              &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt;&lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;deleteKitten&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Delete&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;/button&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;/div&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;/div&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;/li&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt;&lt;span class="err"&gt;/each}}&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;/ul&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/x-handlebars&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;data-template-name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;_form&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;form&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt;&lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;save&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;submit&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;form-inline&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;text&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;submit&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;btn btn-primary&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Save&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;/button&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;/form&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/x-handlebars&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;data-template-name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;create&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Create&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;kitten&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;/h1&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt;&lt;span class="nx"&gt;partial&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;form&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/x-handlebars&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;data-template-name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;edit&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Edit&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;kitten&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;/h1&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt;&lt;span class="nx"&gt;partial&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;form&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;js/lib/jquery.js&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;js/lib/handlebars.js&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;js/lib/ember.js&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;js/lib/ember-data.js&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;js/app_kittens.js&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;html&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="ember-js-application"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="#toc-entry-19"&gt;3.2.2&amp;nbsp;&amp;nbsp;&amp;nbsp;Ember.js application&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Now, here is the actual client-side logic that's been updated to work
with the latest version of ember and ember-data:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;
&lt;span class="normal"&gt;16&lt;/span&gt;
&lt;span class="normal"&gt;17&lt;/span&gt;
&lt;span class="normal"&gt;18&lt;/span&gt;
&lt;span class="normal"&gt;19&lt;/span&gt;
&lt;span class="normal"&gt;20&lt;/span&gt;
&lt;span class="normal"&gt;21&lt;/span&gt;
&lt;span class="normal"&gt;22&lt;/span&gt;
&lt;span class="normal"&gt;23&lt;/span&gt;
&lt;span class="normal"&gt;24&lt;/span&gt;
&lt;span class="normal"&gt;25&lt;/span&gt;
&lt;span class="normal"&gt;26&lt;/span&gt;
&lt;span class="normal"&gt;27&lt;/span&gt;
&lt;span class="normal"&gt;28&lt;/span&gt;
&lt;span class="normal"&gt;29&lt;/span&gt;
&lt;span class="normal"&gt;30&lt;/span&gt;
&lt;span class="normal"&gt;31&lt;/span&gt;
&lt;span class="normal"&gt;32&lt;/span&gt;
&lt;span class="normal"&gt;33&lt;/span&gt;
&lt;span class="normal"&gt;34&lt;/span&gt;
&lt;span class="normal"&gt;35&lt;/span&gt;
&lt;span class="normal"&gt;36&lt;/span&gt;
&lt;span class="normal"&gt;37&lt;/span&gt;
&lt;span class="normal"&gt;38&lt;/span&gt;
&lt;span class="normal"&gt;39&lt;/span&gt;
&lt;span class="normal"&gt;40&lt;/span&gt;
&lt;span class="normal"&gt;41&lt;/span&gt;
&lt;span class="normal"&gt;42&lt;/span&gt;
&lt;span class="normal"&gt;43&lt;/span&gt;
&lt;span class="normal"&gt;44&lt;/span&gt;
&lt;span class="normal"&gt;45&lt;/span&gt;
&lt;span class="normal"&gt;46&lt;/span&gt;
&lt;span class="normal"&gt;47&lt;/span&gt;
&lt;span class="normal"&gt;48&lt;/span&gt;
&lt;span class="normal"&gt;49&lt;/span&gt;
&lt;span class="normal"&gt;50&lt;/span&gt;
&lt;span class="normal"&gt;51&lt;/span&gt;
&lt;span class="normal"&gt;52&lt;/span&gt;
&lt;span class="normal"&gt;53&lt;/span&gt;
&lt;span class="normal"&gt;54&lt;/span&gt;
&lt;span class="normal"&gt;55&lt;/span&gt;
&lt;span class="normal"&gt;56&lt;/span&gt;
&lt;span class="normal"&gt;57&lt;/span&gt;
&lt;span class="normal"&gt;58&lt;/span&gt;
&lt;span class="normal"&gt;59&lt;/span&gt;
&lt;span class="normal"&gt;60&lt;/span&gt;
&lt;span class="normal"&gt;61&lt;/span&gt;
&lt;span class="normal"&gt;62&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;Ember&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Application&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;create&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Store&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;DS&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Store&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;extend&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nx"&gt;revision&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;


&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Kitten&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;DS&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Model&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;extend&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;DS&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;string&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nx"&gt;picture&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;DS&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;string&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;KittenAdapter&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;DS&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;RESTAdapter&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;extend&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nx"&gt;namespace&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;api&amp;#39;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;IndexRoute&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;Ember&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Route&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;extend&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nx"&gt;model&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;store&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;kitten&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;

&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nx"&gt;actions&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="nx"&gt;deleteKitten&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;kitten&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="nx"&gt;kitten&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;deleteRecord&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="nx"&gt;kitten&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;save&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="c1"&gt;// Add some routes&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Router&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;create&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;edit&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/edit/:kitten_id&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="c1"&gt;// Add a controller to dispatch create commands&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;CreateController&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;Ember&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Controller&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;extend&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nx"&gt;actions&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="nx"&gt;save&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="kd"&gt;var&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;kitten&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;store&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createRecord&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;kitten&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="nx"&gt;kitten&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="nx"&gt;kitten&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;save&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;                    &lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;transitionToRoute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;index&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;                    &lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="p"&gt;}.&lt;/span&gt;&lt;span class="nx"&gt;bind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;EditController&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;Ember&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ObjectController&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;extend&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nx"&gt;actions&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="nx"&gt;save&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="kd"&gt;var&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;kitten&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;model&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="nx"&gt;kitten&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;save&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;                    &lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;transitionToRoute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;index&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="p"&gt;}.&lt;/span&gt;&lt;span class="nx"&gt;bind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="p"&gt;})();&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</content><category term="Tech"></category><category term="ember"></category><category term="go"></category><category term="javascript"></category><category term="mongodb"></category><category term="tech"></category></entry><entry><title>PyYAML: Include yaml files within yaml files</title><link href="https://virantha.com/2013/09/04/pyyaml-include-yaml-files-within-yaml-files/" rel="alternate"></link><published>2013-09-04T21:43:00-04:00</published><updated>2013-09-04T21:43:00-04:00</updated><author><name>virantha</name></author><id>tag:virantha.com,2013-09-04:/2013/09/04/pyyaml-include-yaml-files-within-yaml-files/</id><summary type="html">&lt;p&gt;The official YAML spec doesn't support embedding external files inside a
YAML file, a feature that can be extremely useful for maintenance of
long/complex YAML files. I found this great code snippet
&lt;a class="reference external" href="http://code.activestate.com/recipes/577613-yaml-include-support/"&gt;yaml-include-snippet&lt;/a&gt; for including other YAML files in your top-level
YAML.&lt;/p&gt;
&lt;p&gt;However, the code above assumes the include â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;The official YAML spec doesn't support embedding external files inside a
YAML file, a feature that can be extremely useful for maintenance of
long/complex YAML files. I found this great code snippet
&lt;a class="reference external" href="http://code.activestate.com/recipes/577613-yaml-include-support/"&gt;yaml-include-snippet&lt;/a&gt; for including other YAML files in your top-level
YAML.&lt;/p&gt;
&lt;p&gt;However, the code above assumes the include path is relative to the
script invocation path, when it's more likely that you want to refer to
your sub-YAML files relative to the top-level YAML file. So, here's my
small modification to enable this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;yaml_include&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;loader&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="c1"&gt;# Get the path out of the yaml file&lt;/span&gt;
    &lt;span class="n"&gt;file_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dirname&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;loader&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;file_name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;inputfile&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;yaml&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;load&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;inputfile&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;yaml&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;!include&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;yaml_include&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
</content><category term="Snippet"></category><category term="python"></category><category term="yaml"></category><category term="snippet"></category></entry><entry><title>Reading and writing Microsoft Word docx files with Python</title><link href="https://virantha.com/2013/08/16/reading-and-writing-microsoft-word-docx-files-with-python/" rel="alternate"></link><published>2013-08-16T03:16:00-04:00</published><updated>2013-08-16T03:16:00-04:00</updated><author><name>virantha</name></author><id>tag:virantha.com,2013-08-16:/2013/08/16/reading-and-writing-microsoft-word-docx-files-with-python/</id><summary type="html">&lt;div class="figure align-right"&gt;
&lt;img alt="skip_better python" src="/images/2013/python_scaled.png" style="width: 250px;" /&gt;
&lt;/div&gt;
&lt;p&gt;I've been wanting to script simple text scanning and substitution in
Microsoft Word documents for a while now, and after a little digging, it
turns out, it's fairly straight-forward to read and edit .docx (OpenXML)
or the &lt;a class="reference external" href="http://www.ecma-international.org/publications/standards/Ecma-376.htm"&gt;ECMA-376&lt;/a&gt; original standard, and now under ISO as &lt;a class="reference external" href="http://www.iso.org/iso/catalogue_detail?csnumber=51463"&gt;ISO/IEC
29500&lt;/a&gt;. Although I â€¦&lt;/p&gt;</summary><content type="html">&lt;div class="figure align-right"&gt;
&lt;img alt="skip_better python" src="/images/2013/python_scaled.png" style="width: 250px;" /&gt;
&lt;/div&gt;
&lt;p&gt;I've been wanting to script simple text scanning and substitution in
Microsoft Word documents for a while now, and after a little digging, it
turns out, it's fairly straight-forward to read and edit .docx (OpenXML)
or the &lt;a class="reference external" href="http://www.ecma-international.org/publications/standards/Ecma-376.htm"&gt;ECMA-376&lt;/a&gt; original standard, and now under ISO as &lt;a class="reference external" href="http://www.iso.org/iso/catalogue_detail?csnumber=51463"&gt;ISO/IEC
29500&lt;/a&gt;. Although I couldn't find a general python library that provides
a nice API for this, I was thankfully able to follow the examples in the
&lt;a class="reference external" href="https://github.com/mikemaccana/python-docx"&gt;python-docx&lt;/a&gt; to understand what was going on and get my script done.
In this post, I'll describe the structure of this file format and how to
access it easily in python.&lt;/p&gt;
&lt;p&gt;I've also used these techniques in my other project, &lt;a class="reference external" href="https://virantha.com/2015/04/07/oneresume-a-data-driven-resume-generator-for-microsoft-word/"&gt;OneResumÃ©&lt;/a&gt;, a data-driven
resume generator for MS Word documents.&lt;/p&gt;
&lt;div class="contents topic" id="table-of-contents"&gt;
&lt;p class="topic-title"&gt;&lt;a class="reference internal" href="#top"&gt;Table of Contents:&lt;/a&gt;&lt;/p&gt;
&lt;ul class="auto-toc simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#getting-the-text-content" id="toc-entry-1"&gt;1&amp;nbsp;&amp;nbsp;&amp;nbsp;Getting the text content&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#word-xml-document-structure" id="toc-entry-2"&gt;2&amp;nbsp;&amp;nbsp;&amp;nbsp;Word XML document structure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#complications-in-the-xml" id="toc-entry-3"&gt;3&amp;nbsp;&amp;nbsp;&amp;nbsp;Complications in the XML&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#extracting-text" id="toc-entry-4"&gt;4&amp;nbsp;&amp;nbsp;&amp;nbsp;Extracting text&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#modifying-text" id="toc-entry-5"&gt;5&amp;nbsp;&amp;nbsp;&amp;nbsp;Modifying text&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#saving-the-edited-word-file" id="toc-entry-6"&gt;6&amp;nbsp;&amp;nbsp;&amp;nbsp;Saving the edited word file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#summary" id="toc-entry-7"&gt;7&amp;nbsp;&amp;nbsp;&amp;nbsp;Summary&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="getting-the-text-content"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#toc-entry-1"&gt;1&amp;nbsp;&amp;nbsp;&amp;nbsp;Getting the text content&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;At its heart, a docx file is just a zip file (try running unzip on it!)
containing a bunch of well defined XML and collateral files. The main
textual content and structure is defined in the following XML file:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
word/document.xml
&lt;/pre&gt;
&lt;p&gt;So the first step is to read this zip container and get the xml:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;zipfile&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_word_xml&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;docx_filename&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
   &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;docx_filename&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="nb"&gt;zip&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;zipfile&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ZipFile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="n"&gt;xml_content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;zip&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;word/document.xml&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;xml_content&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Next, we need to parse this string containing XML into a usable tree.
For this, we use the lxml package (pip install lxml):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;lxml&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;etree&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_xml_tree&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;xml_string&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
   &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;etree&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fromstring&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;xml_string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And now you have the tree. Let's take a look at how this XML is
structured.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="word-xml-document-structure"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#toc-entry-2"&gt;2&amp;nbsp;&amp;nbsp;&amp;nbsp;Word XML document structure&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;For a basic document that consists of paragraphs of text with some
styles/formatting applied, the XML structure is fairly straightforward.
&amp;nbsp;Here's the example document:&lt;/p&gt;
&lt;div class="figure"&gt;
&lt;img alt="Example word doc" src="/images/2013/Word.png" /&gt;
&lt;/div&gt;
&lt;p&gt;And here's the resulting xml in word/document.xml (you can get this by
simply doing&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;etree&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tostring&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;xmltree&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pretty_print&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;w:document&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;xmlns:wpc=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://schemas.microsoft.com/office/word/2010/wordprocessingCanvas&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;xmlns:mo=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://schemas.microsoft.com/office/mac/office/2008/main&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;xmlns:mc=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://schemas.openxmlformats.org/markup-compatibility/2006&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;xmlns:mv=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;urn:schemas-microsoft-com:mac:vml&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;xmlns:o=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;urn:schemas-microsoft-com:office:office&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;xmlns:r=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://schemas.openxmlformats.org/officeDocument/2006/relationships&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;xmlns:m=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://schemas.openxmlformats.org/officeDocument/2006/math&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;xmlns:v=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;urn:schemas-microsoft-com:vml&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;xmlns:wp14=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://schemas.microsoft.com/office/word/2010/wordprocessingDrawing&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;xmlns:wp=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://schemas.openxmlformats.org/drawingml/2006/wordprocessingDrawing&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;xmlns:w10=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;urn:schemas-microsoft-com:office:word&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;xmlns:w=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://schemas.openxmlformats.org/wordprocessingml/2006/main&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;xmlns:w14=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://schemas.microsoft.com/office/word/2010/wordml&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;xmlns:wpg=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://schemas.microsoft.com/office/word/2010/wordprocessingGroup&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;xmlns:wpi=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://schemas.microsoft.com/office/word/2010/wordprocessingInk&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;xmlns:wne=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://schemas.microsoft.com/office/word/2006/wordml&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;xmlns:wps=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://schemas.microsoft.com/office/word/2010/wordprocessingShape&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;mc:Ignorable=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;w14 wp14&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;w:body&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;w:p&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;w:rsidR=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;00192975&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;w:rsidRDefault=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;00450526&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;w:rsidP=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;00450526&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;w:pPr&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;w:pStyle&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;w:val=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Heading1&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/w:pPr&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;w:r&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;w:t&amp;gt;&lt;/span&gt;Test&lt;span class="nt"&gt;&amp;lt;/w:t&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/w:r&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/w:p&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;w:p&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;w:rsidR=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;00450526&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;w:rsidRDefault=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;00450526&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;w:rsidP=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;00450526&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;w:r&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;w:t&amp;gt;&lt;/span&gt;The&lt;span class="w"&gt; &lt;/span&gt;quick&lt;span class="w"&gt; &lt;/span&gt;brown&lt;span class="w"&gt; &lt;/span&gt;fox&lt;span class="w"&gt; &lt;/span&gt;jumped&lt;span class="w"&gt; &lt;/span&gt;over&lt;span class="w"&gt; &lt;/span&gt;the&lt;span class="w"&gt; &lt;/span&gt;lazy&lt;span class="w"&gt; &lt;/span&gt;dog.&lt;span class="nt"&gt;&amp;lt;/w:t&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/w:r&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/w:p&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;w:p&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;w:rsidR=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;00450526&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;w:rsidRPr=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;00450526&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;w:rsidRDefault=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;00450526&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;w:rsidP=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;00450526&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;w:bookmarkStart&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;w:id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;0&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;w:name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;_GoBack&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;w:bookmarkEnd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;w:id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;0&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/w:p&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;w:sectPr&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;w:rsidR=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;00450526&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;w:rsidRPr=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;00450526&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;w:rsidSect=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;00192975&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;w:pgSz&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;w:w=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;12240&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;w:h=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;15840&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;w:pgMar&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;w:top=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;1440&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;w:right=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;1800&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;w:bottom=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;1440&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;w:left=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;1800&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;w:header=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;720&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;w:footer=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;720&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;w:gutter=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;0&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;w:cols&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;w:space=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;720&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;w:docGrid&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;w:linePitch=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;360&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/w:sectPr&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/w:body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/w:document&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Some salient points:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;The top tag is &amp;lt;w:document&amp;gt;, followed by the &amp;lt;w:body&amp;gt; tag&lt;/li&gt;
&lt;li&gt;The body is then split up into paragraphs, demarcated by &amp;lt;w:p&amp;gt;&lt;/li&gt;
&lt;li&gt;Each paragraph may contain paragraph styles&lt;/li&gt;
&lt;li&gt;Within each paragraph, there also exist runs of content &amp;lt;w:r&amp;gt;&lt;/li&gt;
&lt;li&gt;These runs then end up having text blocks inside them, with the text
enclosed by &amp;lt;w:t&amp;gt; tags&lt;/li&gt;
&lt;li&gt;Multiple pieces of text can be contained within a run &amp;lt;w:r&amp;gt; tag&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The last point is not immediately apparent, but consider what happened
when I edited the file in the next section.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="complications-in-the-xml"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#toc-entry-3"&gt;3&amp;nbsp;&amp;nbsp;&amp;nbsp;Complications in the XML&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Let's edit the docx to uppercase the 'fox' into 'FOX' and look at the
XML contents:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;w:p&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;w14:paraId=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;5192A87F&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;w14:textId=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;77777777&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;w:rsidR=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;00450526&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;w:rsidRDefault=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;00450526&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;w:rsidP=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;00450526&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;w:r&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;w:t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;xml:space=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;preserve&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;The&lt;span class="w"&gt; &lt;/span&gt;quick&lt;span class="w"&gt; &lt;/span&gt;brown&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/w:t&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/w:r&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;w:r&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;w:rsidR=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;004C173F&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;w:t&amp;gt;&lt;/span&gt;FOX&lt;span class="nt"&gt;&amp;lt;/w:t&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/w:r&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;w:bookmarkStart&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;w:id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;0&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;w:name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;_GoBack&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;w:bookmarkEnd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;w:id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;0&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;w:r&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;w:t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;xml:space=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;preserve&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;jumped&lt;span class="w"&gt; &lt;/span&gt;over&lt;span class="w"&gt; &lt;/span&gt;the&lt;span class="w"&gt; &lt;/span&gt;lazy&lt;span class="w"&gt; &lt;/span&gt;dog.&lt;span class="nt"&gt;&amp;lt;/w:t&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/w:r&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/w:p&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;MS Word has now split up the previously single piece of text inside
one run, into 3 separate runs of text, with some meta-data (probably to
keep track of undo actions). So, any of your text parsing and
substitution needs to take into account the fact that your contiguous
text may in fact be split up into separate sub-trees in the XML file.
Also, see below what happens when I now bold the 'FOX':&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;w:p&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;w14:paraId=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;5192A87F&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;w14:textId=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;77777777&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;w:rsidR=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;00450526&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;w:rsidRDefault=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;00450526&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;w:rsidP=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;00450526&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;w:r&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;w:t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;xml:space=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;preserve&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;The&lt;span class="w"&gt; &lt;/span&gt;quick&lt;span class="w"&gt; &lt;/span&gt;brown&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/w:t&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/w:r&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;w:r&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;w:rsidR=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;004C173F&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;w:rPr&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;       &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;w:b/&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/w:rPr&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;w:t&amp;gt;&lt;/span&gt;FOX&lt;span class="nt"&gt;&amp;lt;/w:t&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/w:r&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;w:bookmarkStart&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;w:id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;0&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;w:name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;_GoBack&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;w:bookmarkEnd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;w:id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;0&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;w:r&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;w:t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;xml:space=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;preserve&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;jumped&lt;span class="w"&gt; &lt;/span&gt;over&lt;span class="w"&gt; &lt;/span&gt;the&lt;span class="w"&gt; &lt;/span&gt;lazy&lt;span class="w"&gt; &lt;/span&gt;dog.&lt;span class="nt"&gt;&amp;lt;/w:t&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/w:r&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/w:p&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Notice that now there is a format tag inside your run tag as well.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="extracting-text"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#toc-entry-4"&gt;4&amp;nbsp;&amp;nbsp;&amp;nbsp;Extracting text&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;lxml has some nice functions for traversing the XML tree, but I usually
had to wrap these in my own iterators to get the most functionality. For
instance, here's a class-based iterator that will traverse every node
given a starting node ''my_etree'', and return every text node and it's
containing text.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;_itertext&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;my_etree&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Iterator to go through xml tree&amp;#39;s text nodes&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
     &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;node&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;my_etree&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;iter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tag&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;etree&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Element&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
         &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_check_element_is&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;t&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
             &lt;span class="k"&gt;yield&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;_check_element_is&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;element&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;type_char&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
     &lt;span class="n"&gt;word_schema&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;http://schemas.openxmlformats.org/wordprocessingml/2006/main&amp;#39;&lt;/span&gt;
     &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;element&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tag&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;{&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s1"&gt;}&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;word_schema&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;type_char&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So, in order to get all the text out of the document, you could use the
earlier function to get the xml tree and then iterate over it like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="n"&gt;xml_from_file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_word_xml&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;wod_filename&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;xml_tree&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_xml_tree&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;xml_from_file&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;txt&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_itertext&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;xml_tree&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="n"&gt;txt&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="modifying-text"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#toc-entry-5"&gt;5&amp;nbsp;&amp;nbsp;&amp;nbsp;Modifying text&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Here's a quick example on how to modify the XML tree to change the Word
content. In one of my other project's (that I'll blog about soon) I
needed to replace special pieces of text with some other text (think of
it as a mail-merge or a templating function). I define a special piece
of text as being enclosed inside square brackets like [my_tag] in my
original Word document. Now, the problem is that this tag could be split
among multiple XML nodes because of the way Word splits up runs of text.
So, to make my text-substitution function easier, I go through the XML
tree and collapse all these tags into a single text node first. I can do
this without too much worry because I know there will never be any
special formatting or structures inside the brackets. So here's my
function that does it:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;_join_tags&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;my_etree&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;chars&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
        &lt;span class="n"&gt;openbrac&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;False&lt;/span&gt;
        &lt;span class="n"&gt;inside_openbrac_node&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;False&lt;/span&gt;

        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_itertext&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;my_etree&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="c1"&gt;# Scan through every node with text&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;enumerate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
                &lt;span class="c1"&gt;# Go through each node&amp;#39;s text character by character&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;[&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                    &lt;span class="n"&gt;openbrac&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;True&lt;/span&gt; &lt;span class="c1"&gt;# Within a tag&lt;/span&gt;
                    &lt;span class="n"&gt;inside_openbrac_node&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;True&lt;/span&gt; &lt;span class="c1"&gt;# Tag was opened in this node&lt;/span&gt;
                    &lt;span class="n"&gt;openbrac_node&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;node&lt;/span&gt; &lt;span class="c1"&gt;# Save ptr to open bracket containing node&lt;/span&gt;
                    &lt;span class="n"&gt;chars&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
                &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;]&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                    &lt;span class="k"&gt;assert&lt;/span&gt; &lt;span class="n"&gt;openbrac&lt;/span&gt;
                    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;inside_openbrac_node&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                        &lt;span class="c1"&gt;# Open and close inside same node, no need to do anything&lt;/span&gt;
                        &lt;span class="k"&gt;pass&lt;/span&gt;
                    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                        &lt;span class="c1"&gt;# Open bracket in earlier node, now it&amp;#39;s closed&lt;/span&gt;
                        &lt;span class="c1"&gt;# So append all the chars we&amp;#39;ve encountered since the openbrac_node &amp;#39;[&amp;#39;&lt;/span&gt;
                        &lt;span class="c1"&gt;# to the openbrac_node&lt;/span&gt;
                        &lt;span class="n"&gt;chars&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;]&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                        &lt;span class="n"&gt;openbrac_node&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;chars&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                        &lt;span class="c1"&gt;# Also, don&amp;#39;t forget to remove the characters seen so far from current node&lt;/span&gt;
                        &lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:]&lt;/span&gt;
                    &lt;span class="n"&gt;openbrac&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;False&lt;/span&gt;
                    &lt;span class="n"&gt;inside_openbrac_node&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;False&lt;/span&gt;
                &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                    &lt;span class="c1"&gt;# Normal text character&lt;/span&gt;
                    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;openbrac&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;inside_openbrac_node&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                        &lt;span class="c1"&gt;# No need to copy text&lt;/span&gt;
                        &lt;span class="k"&gt;pass&lt;/span&gt;
                    &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;openbrac&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;inside_openbrac_node&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                        &lt;span class="n"&gt;chars&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                        &lt;span class="c1"&gt;# outside of a open/close&lt;/span&gt;
                        &lt;span class="k"&gt;pass&lt;/span&gt;
           &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;openbrac&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;inside_openbrac_node&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="c1"&gt;# Went through all text that is part of an open bracket/close bracket&lt;/span&gt;
                &lt;span class="c1"&gt;# in other nodes&lt;/span&gt;
                &lt;span class="c1"&gt;# need to remove this text completely&lt;/span&gt;
                &lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;
            &lt;span class="n"&gt;inside_openbrac_node&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;False&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="saving-the-edited-word-file"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#toc-entry-6"&gt;6&amp;nbsp;&amp;nbsp;&amp;nbsp;Saving the edited word file&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Now, if you want to save this modified content, you just need to extract
all the files in the docx, overwrite the content file, and then zip it
back up:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;_write_and_close_docx&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;xml_content&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;output_filename&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot; Create a temp directory, expand the original docx zip.&lt;/span&gt;
&lt;span class="sd"&gt;            Write the modified xml to word/document.xml&lt;/span&gt;
&lt;span class="sd"&gt;            Zip it up as the new docx&lt;/span&gt;
&lt;span class="sd"&gt;        &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;

        &lt;span class="n"&gt;tmp_dir&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tempfile&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mkdtemp&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;zipfile&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;extractall&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tmp_dir&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tmp_dir&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;word/document.xml&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;w&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;xmlstr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;etree&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tostring&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;xml_content&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pretty_print&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;xmlstr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="c1"&gt;# Get a list of all the files in the original docx zipfile&lt;/span&gt;
        &lt;span class="n"&gt;filenames&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;zipfile&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;namelist&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="c1"&gt;# Now, create the new zip file and add all the filex into the archive&lt;/span&gt;
        &lt;span class="n"&gt;zip_copy_filename&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;output_filename&lt;/span&gt;
        &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;zipfile&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ZipFile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;zip_copy_filename&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;w&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;docx&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;filename&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;filenames&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;docx&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tmp_dir&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="c1"&gt;# Clean up the temp dir&lt;/span&gt;
        &lt;span class="n"&gt;shutil&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rmtree&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tmp_dir&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="summary"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#toc-entry-7"&gt;7&amp;nbsp;&amp;nbsp;&amp;nbsp;Summary&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Done! I hope I've helped explain how to get a the contents of MS Word
docx file and do some simple modifications to it.
Again, if you need more examples on how to process .docx files, please check
out how I've used these methods to implement a data-driven resume generator
called &lt;a class="reference external" href="https://virantha.com/2015/04/07/oneresume-a-data-driven-resume-generator-for-microsoft-word/"&gt;OneResumÃ©&lt;/a&gt; for multiple file formats including MS Word.&lt;/p&gt;
&lt;p&gt;Until then, happy coding!&lt;/p&gt;
&lt;/div&gt;
</content><category term="Tech"></category><category term="tech"></category><category term="python"></category><category term="word"></category></entry><entry><title>PyPDFOCR - Guide to Usage</title><link href="https://virantha.com/2013/07/23/pypdfocr-a-python-script-for-running-free-ocr-on-your-pdfs/" rel="alternate"></link><published>2013-07-23T20:08:00-04:00</published><updated>2013-07-23T20:08:00-04:00</updated><author><name>virantha</name></author><id>tag:virantha.com,2013-07-23:/2013/07/23/pypdfocr-a-python-script-for-running-free-ocr-on-your-pdfs/</id><summary type="html">&lt;ul class="simple"&gt;
&lt;li&gt;Take a scanned PDF file and run OCR on it (using the Tesseract OCR
software from Google), generating a searchable PDF&lt;/li&gt;
&lt;li&gt;Optionally, watch a folder for incoming scanned PDFs and
automatically run OCR on them&lt;/li&gt;
&lt;li&gt;Optionally, file the scanned PDFs into directories based on simple
keyword matching that you specify â€¦&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;ul class="simple"&gt;
&lt;li&gt;Take a scanned PDF file and run OCR on it (using the Tesseract OCR
software from Google), generating a searchable PDF&lt;/li&gt;
&lt;li&gt;Optionally, watch a folder for incoming scanned PDFs and
automatically run OCR on them&lt;/li&gt;
&lt;li&gt;Optionally, file the scanned PDFs into directories based on simple
keyword matching that you specify&lt;/li&gt;
&lt;li&gt;Evernote auto-upload and filing based on keyword search&lt;/li&gt;
&lt;li&gt;Email status when it files your PDF&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;More links:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://virantha.com/category/pypdfocr.html"&gt;Blog &amp;#64; virantha.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://virantha.github.com/pypdfocr/html"&gt;Documentation &amp;#64; gitpages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.github.com/virantha/pypdfocr"&gt;Source &amp;#64; github&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="section" id="usage"&gt;
&lt;h2&gt;Usage:&lt;/h2&gt;
&lt;div class="section" id="single-conversion"&gt;
&lt;h3&gt;Single conversion:&lt;/h3&gt;
&lt;pre class="literal-block"&gt;
pypdfocr filename.pdf

--&amp;gt; filename_ocr.pdf will be generated
&lt;/pre&gt;
&lt;p&gt;If you have a language pack installed, then you can specify it with the
&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-l&lt;/span&gt;&lt;/tt&gt; option:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
pypdfocr -l spa filename.pdf
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="folder-monitoring"&gt;
&lt;h3&gt;Folder monitoring:&lt;/h3&gt;
&lt;pre class="literal-block"&gt;
pypdfocr -w watch_directory

--&amp;gt; Every time a pdf file is added to `watch_directory` it will be OCR'ed
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="automatic-filing"&gt;
&lt;h3&gt;Automatic filing:&lt;/h3&gt;
&lt;p&gt;To automatically move the OCR'ed pdf to a directory based on a keyword,
use the -f option and specify a configuration file (described below):&lt;/p&gt;
&lt;pre class="literal-block"&gt;
pypdfocr filename.pdf -f -c config.yaml
&lt;/pre&gt;
&lt;p&gt;You can also do this in folder monitoring mode:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
pypdfocr -w watch_directory -f -c config.yaml
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="filing-based-on-filename-match"&gt;
&lt;h3&gt;Filing based on filename match:&lt;/h3&gt;
&lt;p&gt;If no keywords match the contents of the filename, you can optionally
allow it to fallback to trying to find keyword matches with the PDF
filename using the -n option. For example, you may have receipts always
named as &lt;tt class="docutils literal"&gt;receipt_2013_12_2.pdf&lt;/tt&gt; by your scanner, and you want to move
this to a folder called 'receipts'. Assuming you have a keyword
&lt;tt class="docutils literal"&gt;receipt&lt;/tt&gt; matching to folder &lt;tt class="docutils literal"&gt;receipts&lt;/tt&gt; in your configuration file
as described below, you can run the following and have this filed even
if the content of the pdf does not contain the text 'receipt':&lt;/p&gt;
&lt;pre class="literal-block"&gt;
pypdfocr filename.pdf -f -c config.yaml -n
&lt;/pre&gt;
&lt;div class="section" id="configuration-file-for-automatic-pdf-filing"&gt;
&lt;h4&gt;Configuration file for automatic PDF filing&lt;/h4&gt;
&lt;p&gt;The config.yaml file above is a simple folder to keyword matching text
file. It determines where your OCR'ed PDFs (and optionally, the original
scanned PDF) are placed after processing. An example is given below:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
target_folder: &amp;quot;docs/filed&amp;quot;
default_folder: &amp;quot;docs/filed/manual_sort&amp;quot;
original_move_folder: &amp;quot;docs/originals&amp;quot;

folders:
    finances:
        - american express
        - chase card
        - internal revenue service
    travel:
        - boarding pass
        - airlines
        - expedia
        - orbitz
    receipts:
        - receipt
&lt;/pre&gt;
&lt;p&gt;The &lt;tt class="docutils literal"&gt;target_folder&lt;/tt&gt; is the root of your filing cabinet. Any PDF moving
will happen in sub-directories under this directory.&lt;/p&gt;
&lt;p&gt;The &lt;tt class="docutils literal"&gt;folders&lt;/tt&gt; section defines your filing directories and the keywords
associated with them. In this example, we have three filing directories
(finances, travl, receipts), and some associated keywords for each
filing directory. For example, if your OCR'ed PDF contains the phrase
&amp;quot;american express&amp;quot; (in any upper/lower case), it will be filed into
&lt;tt class="docutils literal"&gt;docs/filed/finances&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;The &lt;tt class="docutils literal"&gt;default_folder&lt;/tt&gt; is where the OCR'ed PDF is moved to if there is
no keyword match.&lt;/p&gt;
&lt;p&gt;The &lt;tt class="docutils literal"&gt;original_move_folder&lt;/tt&gt; is optional (you can comment it out with
&lt;tt class="docutils literal"&gt;#&lt;/tt&gt; in front of that line), but if specified, the original scanned PDF
is moved into this directory after OCR is done. Otherwise, if this field
is not present or commented out, your original PDF will stay where it
was found.&lt;/p&gt;
&lt;p&gt;If there is any naming conflict during filing, the program will add an
underscore followed by a number to each filename, in order to avoid
overwriting files that may already be present.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="evernote-upload"&gt;
&lt;h3&gt;Evernote upload:&lt;/h3&gt;
&lt;div class="section" id="evernote-authentication-token"&gt;
&lt;h4&gt;Evernote authentication token&lt;/h4&gt;
&lt;p&gt;To enable Evernote support, you will need to &lt;a class="reference external" href="https://www.evernote.com/api/DeveloperToken.action"&gt;get a developer token for
your Evernote
account.&lt;/a&gt;. You
should note that this script will never delete or modify existing notes
in your account, and limits itself to creating new Notebooks and Notes.
Once you get that token, you copy and paste it into your configuration
file as shown below&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="evernote-filing-usage"&gt;
&lt;h4&gt;Evernote filing usage&lt;/h4&gt;
&lt;p&gt;To automatically upload the OCR'ed pdf to a folder based on a keyword,
use the &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-e&lt;/span&gt;&lt;/tt&gt; option instead of the &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-f&lt;/span&gt;&lt;/tt&gt; auto filing option.&lt;/p&gt;
&lt;pre class="literal-block"&gt;
pypdfocr filename.pdf -e -c config.yaml
&lt;/pre&gt;
&lt;p&gt;Similarly, you can also do this in folder monitoring mode:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
pypdfocr -w watch_directory -e -c config.yaml
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="evernote-filing-configuration-file"&gt;
&lt;h4&gt;Evernote filing configuration file&lt;/h4&gt;
&lt;p&gt;The config file shown above only needs to change slightly. The folders
section is completely unchanged, but note that &lt;tt class="docutils literal"&gt;target_folder&lt;/tt&gt; is the
name of your &amp;quot;Notebook stack&amp;quot; in Evernote, and the &lt;tt class="docutils literal"&gt;default_folder&lt;/tt&gt;
should just be the default Evernote upload notebook name.&lt;/p&gt;
&lt;pre class="literal-block"&gt;
target_folder: &amp;quot;evernote_stack&amp;quot;
default_folder: &amp;quot;default&amp;quot;
original_move_folder: &amp;quot;docs/originals&amp;quot;
evernote_developer_token: &amp;quot;YOUR_TOKEN&amp;quot;

folders:
    finances:
        - american express
        - chase card
        - internal revenue service
    travel:
        - boarding pass
        - airlines
        - expedia
        - orbitz
    receipts:
        - receipt
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="auto-email"&gt;
&lt;h3&gt;Auto email&lt;/h3&gt;
&lt;p&gt;You can have PyPDFOCR email you everytime it converts a file and files
it. You need to first specify the following lines in the configuration
file and then use the &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-m&lt;/span&gt;&lt;/tt&gt; option when invoking &lt;tt class="docutils literal"&gt;pypdfocr&lt;/tt&gt;:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
mail_smtp_server: &amp;quot;smtp.gmail.com:587&amp;quot;
mail_smtp_login: &amp;quot;virantha&amp;#64;gmail.com&amp;quot;
mail_smtp_password: &amp;quot;PASSWORD&amp;quot;
mail_from_addr: &amp;quot;virantha&amp;#64;gmail.com&amp;quot;
mail_to_list:
    - &amp;quot;virantha&amp;#64;gmail.com&amp;quot;
    - &amp;quot;person2&amp;#64;gmail.com&amp;quot;
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="advanced-options"&gt;
&lt;h2&gt;Advanced options&lt;/h2&gt;
&lt;div class="section" id="fine-tuning-tesseract-ghostscript-others"&gt;
&lt;h3&gt;Fine-tuning Tesseract/Ghostscript/others&lt;/h3&gt;
&lt;p&gt;You can specify Tesseract and Ghostscript executable locations manually, as
well as the number of concurrent processes allowed during preprocessing and
tesseract.  Use the following in your configuration file:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
tesseract:
    binary: &amp;quot;/usr/bin/tesseract&amp;quot;
    threads: 8

ghostscript:
    binary: &amp;quot;/usr/local/bin/gs&amp;quot;

preprocess:
    threads: 8
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="handling-disk-time-outs"&gt;
&lt;h3&gt;Handling disk time-outs&lt;/h3&gt;
&lt;p&gt;If you need to increase the time interval (default 3 seconds) between new
document scans when pypdfocr is watching a directory, you can specify the following
option in the configuration file:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
watch:
    scan_interval: 6
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="installation"&gt;
&lt;h2&gt;Installation&lt;/h2&gt;
&lt;div class="section" id="using-pip"&gt;
&lt;h3&gt;Using pip&lt;/h3&gt;
&lt;p&gt;PyPDFOCR is available in PyPI, so you can just run:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
pip install pypdfocr
&lt;/pre&gt;
&lt;p&gt;Please note that some of the 3rd-party libraries required by PyPDFOCR wiill
require some build tools, especially on a default Ubuntu system.  If you run
into any issues using pip install, you may want to install the
following packages on Ubuntu and try again:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;gcc&lt;/li&gt;
&lt;li&gt;libjpeg-dev&lt;/li&gt;
&lt;li&gt;zlib-bin&lt;/li&gt;
&lt;li&gt;zlib1g-dev&lt;/li&gt;
&lt;li&gt;python-dev&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For those on &lt;strong&gt;Windows&lt;/strong&gt;, because it's such a pain to get all the PIL
and PDF dependencies installed, I've gone ahead and made an executable
called
&lt;a class="reference external" href="https://github.com/virantha/pypdfocr/blob/master/dist/pypdfocr.exe?raw=true"&gt;pypdfocr.exe&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You still need to install Tesseract, GhostScript, etc. as detailed below in
the external dependencies list.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="manual-install"&gt;
&lt;h3&gt;Manual install&lt;/h3&gt;
&lt;p&gt;Clone the source directly from github (you need to have git installed):&lt;/p&gt;
&lt;pre class="literal-block"&gt;
git clone https://github.com/virantha/pypdfocr.git
&lt;/pre&gt;
&lt;p&gt;Then, install the following third-party python libraries:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Pillow (Python Imaging Library) &lt;a class="reference external" href="https://pillow.readthedocs.org/en/3.1.x/"&gt;https://pillow.readthedocs.org/en/3.1.x/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;ReportLab (PDF generation library)
&lt;a class="reference external" href="http://www.reportlab.com/opensource/"&gt;http://www.reportlab.com/opensource/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Watchdog (Cross-platform fhlesystem events monitoring)
&lt;a class="reference external" href="https://pypi.python.org/pypi/watchdog"&gt;https://pypi.python.org/pypi/watchdog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;PyPDF2 (Pure python pdf library)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These can all be installed via pip:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
pip install Pillow
pip install reportlab
pip install watchdog
pip install pypdf2
&lt;/pre&gt;
&lt;p&gt;You will also need to install the external dependencies listed below.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="external-dependencies"&gt;
&lt;h3&gt;External Dependencies&lt;/h3&gt;
&lt;p&gt;PyPDFOCR relies on the following (free) programs being installed and in
the path:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Tesseract OCR software &lt;a class="reference external" href="https://code.google.com/p/tesseract-ocr/"&gt;https://code.google.com/p/tesseract-ocr/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;GhostScript &lt;a class="reference external" href="http://www.ghostscript.com/"&gt;http://www.ghostscript.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;ImageMagick &lt;a class="reference external" href="http://www.imagemagick.org/"&gt;http://www.imagemagick.org/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Poppler &lt;a class="reference external" href="http://poppler.freedesktop.org/"&gt;http://poppler.freedesktop.org/&lt;/a&gt;  (&lt;a class="reference external" href="http://sourceforge.net/projects/poppler-win32/"&gt;Windows&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Poppler is only required if you want pypdfocr to figure out the original PDF resolution
automatically; just make sure you have &lt;tt class="docutils literal"&gt;pdfimages&lt;/tt&gt; in your path.   Note that the
&lt;a class="reference external" href="http://www.foolabs.com/xpdf/download.html"&gt;xpdf&lt;/a&gt; provided &lt;tt class="docutils literal"&gt;pdfimages&lt;/tt&gt; does not work for this,
because it does not support the &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-list&lt;/span&gt;&lt;/tt&gt; option to list the table of images in a PDF file.&lt;/p&gt;
&lt;p&gt;On Mac OS X, you can install these using homebrew:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
brew install tesseract
brew install ghostscript
brew install poppler
brew install imagemagick
&lt;/pre&gt;
&lt;p&gt;On Windows, please use the installers provided on their download pages.&lt;/p&gt;
&lt;p&gt;** Important ** Tesseract version 3.02.02 or newer required
(apparently 3.02.01-6 and possibly others do not work due to a hocr
output format change that I'm not planning to address). On Ubuntu, you
may need to compile and install it manually by following &lt;a class="reference external" href="http://miphol.com/muse/2013/05/install-tesseract-ocr-on-ubunt.html"&gt;these
instructions&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Also note that if you want Tesseract to recognize rotated documents (upside down, or rotated 90 degrees)
then you need to find your tessdata directory and do the following:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
cd /usr/local/share/tessdata
cp eng.traineddata osd.traineddata
&lt;/pre&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;osd&lt;/tt&gt; stands for Orientation and Script Detection, so you need to copy the .traineddata
for whatever language you want to scan in as &lt;tt class="docutils literal"&gt;osd.traineddata&lt;/tt&gt;.  If you don't do this step,
then any landscape document will produce garbage&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="disclaimer"&gt;
&lt;h2&gt;Disclaimer&lt;/h2&gt;
&lt;p&gt;While test coverage is at 84% right now, Sphinx docs generation is at an
early stage. The software is distributed on an &amp;quot;AS IS&amp;quot; BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&lt;/p&gt;
&lt;/div&gt;
</content><category term="PyPDFOCR"></category><category term="ocr"></category><category term="pdf"></category><category term="python"></category><category term="tesseract"></category></entry><entry><title>PyPDFOCR - A Python Script for Free OCR on Your PDFs using Tesseract</title><link href="https://virantha.com/2013/07/22/pyocr-a-python-script-for-running-free-ocr-on-your-pdfs/" rel="alternate"></link><published>2013-07-22T20:08:00-04:00</published><updated>2013-07-22T20:08:00-04:00</updated><author><name>virantha</name></author><id>tag:virantha.com,2013-07-22:/2013/07/22/pyocr-a-python-script-for-running-free-ocr-on-your-pdfs/</id><summary type="html">&lt;div class="figure align-right"&gt;
&lt;img alt="skip_better dictionary" src="/images/2013/dictionary_scaled.jpeg" style="width: 250px;" /&gt;
&lt;/div&gt;
&lt;p&gt;Updates:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Anytime -&amp;nbsp;&lt;a class="reference external" href="http://virantha.github.io/pypdfocr/html/"&gt;Get the latest updates on PyPDFOCR&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;10/28/13 - Adds uploading to Evernote notebooks based on
keywords!&lt;/li&gt;
&lt;li&gt;10/25/13 - Supports filing to directories based on keyword search&lt;/li&gt;
&lt;li&gt;10/22/13 - Now on PyPI, so you can just do &amp;quot;pip install
pypdfocr&amp;quot;! (For windows, I still recommend downloading â€¦&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;</summary><content type="html">&lt;div class="figure align-right"&gt;
&lt;img alt="skip_better dictionary" src="/images/2013/dictionary_scaled.jpeg" style="width: 250px;" /&gt;
&lt;/div&gt;
&lt;p&gt;Updates:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Anytime -&amp;nbsp;&lt;a class="reference external" href="http://virantha.github.io/pypdfocr/html/"&gt;Get the latest updates on PyPDFOCR&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;10/28/13 - Adds uploading to Evernote notebooks based on
keywords!&lt;/li&gt;
&lt;li&gt;10/25/13 - Supports filing to directories based on keyword search&lt;/li&gt;
&lt;li&gt;10/22/13 - Now on PyPI, so you can just do &amp;quot;pip install
pypdfocr&amp;quot;! (For windows, I still recommend downloading my
prebuilt .exe as written below)&lt;/li&gt;
&lt;li&gt;10/21/13 - Script can watch a directory for new pdfs and
automatically run ocr on them!&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;On a &lt;a class="reference external" href="http://virantha.com/2012/10/25/getting-rid-of-paper-clutter/"&gt;previous post&lt;/a&gt;, I've discussed how I've become a fan of
&lt;a class="amazon" href="http://www.amazon.com/gp/product/B00ATZ9QMO?ie=UTF8&amp;linkCode=as2&amp;camp=1634&amp;tag=virantha-20"&gt;Fujitsu's ScanSnap&lt;/a&gt; device to reduce the pile
of paper in my office. &amp;nbsp;I've been wanting to script more of the flow,
and the one stumbling block has been the optical character recognition
phase that makes the scanned PDF searchable. In this post, I'll detail
my experience in using a free OCR engine from HP/Google called Tesseract
to handle the PDF OCR conversion.&lt;/p&gt;
&lt;div class="contents topic" id="table-of-contents"&gt;
&lt;p class="topic-title"&gt;&lt;a class="reference internal" href="#top"&gt;Table of Contents&lt;/a&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#tesseract-ocr" id="toc-entry-1"&gt;Tesseract OCR&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#usage" id="toc-entry-2"&gt;Usage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#installation" id="toc-entry-3"&gt;Installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#how-scripting-tesseract-for-pdf-to-pdf-conversion-works" id="toc-entry-4"&gt;How Scripting Tesseract for PDF to PDF conversion works&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="tesseract-ocr"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#toc-entry-1"&gt;Tesseract OCR&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The ScanSnap ships with a free version of &lt;a class="amazon" href="http://www.amazon.com/gp/product/B005S7ZMXA?ie=UTF8&amp;linkCode=as2&amp;camp=1634&amp;tag=virantha-20"&gt;Abbyy FineReader&lt;/a&gt;, an excellent piece of OCR
software; unfortunately any scripting ability requires a pricey upgrade
to the Pro version. &amp;nbsp;A short search later, I found the most popular
open/free solution out there: &lt;a class="reference external" href="https://code.google.com/p/tesseract-ocr/"&gt;Tesseract-OCR&lt;/a&gt;. &amp;nbsp;I had looked at this a
while ago when the text-recognition quality seemed lacking, but version
3.x has improved significantly.&lt;/p&gt;
&lt;p&gt;However, simply downloading Tesseract and running it doesn't lead to a
very usable solution, as I frustratingly found out. &amp;nbsp;The software only
takes image files (like TIFF or JPG) as input, and produces either a
text file or a HOCR html file as output. &amp;nbsp;Even a web search did not
bring up any ready-built scripts to have Tesseract take a PDF as an
input and output the OCR'ed PDF. &amp;nbsp;So, with the help of a HOCR to pdf
script I found from google, I wrote up my own script called PyPDFOCR.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="usage"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#toc-entry-2"&gt;Usage&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Once you have PyPDFOCR instaled, it's as simple as typing:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
python pypdfocr.py filename.pdf
&lt;/pre&gt;
&lt;p&gt;This will generate a corresponding filename_ocr.pdf&lt;/p&gt;
&lt;p&gt;Please see the
&lt;a class="reference external" href="http://virantha.github.io/pypdfocr/html/"&gt;documentation&lt;/a&gt;&amp;nbsp;for all the
features.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="installation"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#toc-entry-3"&gt;Installation&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This script does have a bunch of external dependencies (all free/open
source). So far, I've verified it runs on Mac OS X (10.7; probably other
versions too) and Windows 7 64-bit.&lt;/p&gt;
&lt;p&gt;Please see
the&amp;nbsp;&lt;a class="reference external" href="http://virantha.github.io/pypdfocr/html/"&gt;documentation&lt;/a&gt;&amp;nbsp;for
installation instructions.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="how-scripting-tesseract-for-pdf-to-pdf-conversion-works"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#toc-entry-4"&gt;How Scripting Tesseract for PDF to PDF conversion works&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Here's how this script works:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Using Ghostscript, convert the input PDF into a multi-page tiff image&lt;/li&gt;
&lt;li&gt;Using Ghostscript, convert the input PDF into multiple jpeg images.
Required to work around a compression issue in the ReportLab PDF
generation.&lt;/li&gt;
&lt;li&gt;Using Tesseract, convert the multi-page tiff into a OCR
representation called HOCR (html based open standard on describing
every recognized word location on a page)&lt;/li&gt;
&lt;li&gt;Build the output PDF using the multiple jpeg images, while parsing
the HOCR file and generating text on each page in an invisible font&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Special thanks to the folks at google who wrote&amp;nbsp;&lt;a class="reference external" href="https://code.google.com/p/hocr-tools/source/browse/hocr-pdf"&gt;hocr-pdf.py&lt;/a&gt;&amp;nbsp;(Apache
license 2.0)) that showed me how to use the hocr format; I basically
only had to add multi-page support for this part of the flow.&lt;/p&gt;
&lt;/div&gt;
</content><category term="PyPDFOCR"></category><category term="ocr"></category><category term="pdf"></category><category term="python"></category><category term="tesseract"></category></entry><entry><title>Bluetooth headset with dedicated mute button</title><link href="https://virantha.com/2013/07/03/bluetooth-headset-with-dedicated-mute-button/" rel="alternate"></link><published>2013-07-03T02:55:00-04:00</published><updated>2013-07-03T02:55:00-04:00</updated><author><name>virantha</name></author><id>tag:virantha.com,2013-07-03:/2013/07/03/bluetooth-headset-with-dedicated-mute-button/</id><summary type="html">&lt;p&gt;I typically spend several hours a day on conference calls, and I really
miss my old blackberry that used to have a dedicated mute button. The
iPhone touch button on the phone screen is just not quick enough to
quickly jump in and out of a meeting in a noisy â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;I typically spend several hours a day on conference calls, and I really
miss my old blackberry that used to have a dedicated mute button. The
iPhone touch button on the phone screen is just not quick enough to
quickly jump in and out of a meeting in a noisy environment.&lt;/p&gt;
&lt;p&gt;Which brings me to my next point; why is it so difficult to find a
decent bluetooth headset these days that make it easy to mute the mic
when on a call? I really liked my &lt;a class="amazon" href="http://www.amazon.com/gp/product/B002JIMZU4?ie=UTF8&amp;linkCode=as2&amp;camp=1634&amp;tag=virantha-20"&gt;Plantronics Discovery 975 Bluetooth Headset&lt;/a&gt; for
its comfort and unobtrusive style, but it was a pain to mute a call; I'm
not sure what kind of usability study was done when they decided a
&amp;quot;long&amp;quot; press on the single volume button was the mute/unmute control.&lt;/p&gt;
&lt;div&gt;&lt;a class="amazon" href="http://www.amazon.com/gp/product/B002JIMZU4/ref=as_li_tf_il?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=B002JIMZU4&amp;linkCode=am2&amp;tag=virantha-20"&gt;&lt;img src="http://images.amazon.com/images/P/B002JIMZU4.01._SCMZZZZZZZ_.jpg"/&gt;Plantronics Discovery 975&lt;/a&gt;&lt;/div&gt;&lt;p&gt;So here's my recent research on a replacement headset with a usable mute
feature:&lt;/p&gt;
&lt;table border="1" class="docutils" id="headsets"&gt;
&lt;caption&gt;Headset Comparison&lt;/caption&gt;
&lt;colgroup&gt;
&lt;col width="16%" /&gt;
&lt;col width="11%" /&gt;
&lt;col width="11%" /&gt;
&lt;col width="32%" /&gt;
&lt;col width="32%" /&gt;
&lt;/colgroup&gt;
&lt;thead valign="bottom"&gt;
&lt;tr&gt;&lt;th class="head"&gt;Headset&lt;/th&gt;
&lt;th class="head"&gt;Price&lt;/th&gt;
&lt;th class="head"&gt;Mute&lt;/th&gt;
&lt;th class="head"&gt;Features&lt;/th&gt;
&lt;th class="head"&gt;User complaints&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;&lt;div class="first last"&gt;&lt;div&gt;&lt;a class="amazon" href="http://www.amazon.com/gp/product/B0092KJ9BU/ref=as_li_tf_il?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=B0092KJ9BU&amp;linkCode=am2&amp;tag=virantha-20"&gt;&lt;img src="http://images.amazon.com/images/P/B0092KJ9BU.01._SCMZZZZZZZ_.jpg"/&gt;Plantronics Voyager Legend&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td&gt;$80&lt;/td&gt;
&lt;td&gt;Y&lt;/td&gt;
&lt;td&gt;Sensor to answer call when placed on head&lt;/td&gt;
&lt;td&gt;Users complain noise-cancelling distorts voice, non-standard charging cable&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;div class="first last"&gt;&lt;div&gt;&lt;a class="amazon" href="http://www.amazon.com/gp/product/B00JLVNF2O/ref=as_li_tf_il?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=B00JLVNF2O&amp;linkCode=am2&amp;tag=virantha-20"&gt;&lt;img src="http://images.amazon.com/images/P/B00JLVNF2O.01._SCMZZZZZZZ_.jpg"/&gt;Plantronics Voyager Edge&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td&gt;$118&lt;/td&gt;
&lt;td&gt;Y&lt;/td&gt;
&lt;td&gt;Bluetooth 4.0, HD Voice support, motion sensor&lt;/td&gt;
&lt;td&gt;Expensive&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;div class="first last"&gt;&lt;div&gt;&lt;a class="amazon" href="http://www.amazon.com/gp/product/B00BWG4TUI/ref=as_li_tf_il?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=B00BWG4TUI&amp;linkCode=am2&amp;tag=virantha-20"&gt;&lt;img src="http://images.amazon.com/images/P/B00BWG4TUI.01._SCMZZZZZZZ_.jpg"/&gt;Jabra MOTION&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td&gt;$100&lt;/td&gt;
&lt;td&gt;Y&lt;/td&gt;
&lt;td&gt;Motion sensor - Turns off when out of ear, pick it up and answers call&lt;/td&gt;
&lt;td&gt;Touch controls for volume not very sensitive; not very convenient to place on ear&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;div class="first last"&gt;&lt;div&gt;&lt;a class="amazon" href="http://www.amazon.com/gp/product/B008X0TBKO/ref=as_li_tf_il?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=B008X0TBKO&amp;linkCode=am2&amp;tag=virantha-20"&gt;&lt;img src="http://images.amazon.com/images/P/B008X0TBKO.01._SCMZZZZZZZ_.jpg"/&gt;Jabra SUPREME&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td&gt;$90&lt;/td&gt;
&lt;td&gt;Y&lt;/td&gt;
&lt;td&gt;Micro-usb charger&lt;/td&gt;
&lt;td&gt;Call quality, noise cancelling average&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;div class="first last"&gt;&lt;div&gt;&lt;a class="amazon" href="http://www.amazon.com/gp/product/B0041D81WQ/ref=as_li_tf_il?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=B0041D81WQ&amp;linkCode=am2&amp;tag=virantha-20"&gt;&lt;img src="http://images.amazon.com/images/P/B0041D81WQ.01._SCMZZZZZZZ_.jpg"/&gt;Motorola OASIS&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td&gt;~$50&lt;/td&gt;
&lt;td&gt;Y&lt;/td&gt;
&lt;td&gt;Cheaper&lt;/td&gt;
&lt;td&gt;Older headset; Bluetooth 2.0, no ADP; Sound quality low&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;div class="first last"&gt;&lt;div&gt;&lt;a class="amazon" href="http://www.amazon.com/gp/product/B005LISQ0W/ref=as_li_tf_il?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=B005LISQ0W&amp;linkCode=am2&amp;tag=virantha-20"&gt;&lt;img src="http://images.amazon.com/images/P/B005LISQ0W.01._SCMZZZZZZZ_.jpg"/&gt;Bose Series 2&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td&gt;$150&lt;/td&gt;
&lt;td&gt;N*&lt;/td&gt;
&lt;td&gt;Loud volume; good noise-cancelling&lt;/td&gt;
&lt;td&gt;Left or right versions; low battery life&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;div class="first last"&gt;&lt;div&gt;&lt;a class="amazon" href="http://www.amazon.com/gp/product/B005PVXKC4/ref=as_li_tf_il?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=B005PVXKC4&amp;linkCode=am2&amp;tag=virantha-20"&gt;&lt;img src="http://images.amazon.com/images/P/B005PVXKC4.01._SCMZZZZZZZ_.jpg"/&gt;Motorola ELITE&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td&gt;$70&lt;/td&gt;
&lt;td&gt;N*&lt;/td&gt;
&lt;td&gt;Unobtrusive&lt;/td&gt;
&lt;td&gt;Older&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;div class="first last"&gt;&lt;div&gt;&lt;a class="amazon" href="http://www.amazon.com/gp/product/B00DQ5RHK2/ref=as_li_tf_il?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=B00DQ5RHK2&amp;linkCode=am2&amp;tag=virantha-20"&gt;&lt;img src="http://images.amazon.com/images/P/B00DQ5RHK2.01._SCMZZZZZZZ_.jpg"/&gt;Plantronics M165 Marque 2&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td&gt;$40&lt;/td&gt;
&lt;td&gt;N*&lt;/td&gt;
&lt;td&gt;Most affordable option&lt;/td&gt;
&lt;td&gt;Newer model, but sound quality low&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;* Hold vol+/- simultaneously to mute&lt;/p&gt;
&lt;p&gt;I decided to try out the Voyager Legend, and see if the call quality is
good enough; I'll keep this updated with my experiences.&lt;/p&gt;
&lt;p&gt;&lt;img alt="image1" src="http://ir-na.amazon-adsystem.com/e/ir?t=virantha-20&amp;amp;l=as2&amp;amp;o=1&amp;amp;a=B002JIMZU4" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Update: 7/16/13
*Well, I got my Plantronics Voyager Legend today along with a dash of
reality on what companies fob on us these days as &amp;quot;products&amp;quot;. &amp;nbsp;While the
fit and feel of the headset was good, the sound quality when paired with
my iPhone 5 was quite simply atrocious. &amp;nbsp;It's hard to describe, but my
voice just sounds chopped up and distorted on the other end. &amp;nbsp;What's
strange is that the music streaming sounds fine, but the voice
transmission is just awful, non-understandable, and robotic sounding.
&amp;nbsp;And this in a perfectly quiet environment with a full charge and my
phone in line of sight less than a foot away; firmware was also
up-to-date according to Plantronics' myheadset updated. *&lt;/em&gt;&amp;nbsp;I'm packing
this up and sending it back right away**. &amp;nbsp;Sorry, Plantronics, I was
expecting better from you after the Discovery 925/975 series; if you
can't get the basic audio quality up to par on voice on a headset, then
why bother?&lt;/p&gt;
&lt;p&gt;I already ordered the Jabra Supreme to replace it.&lt;/p&gt;
&lt;div class="section" id="jabra-supreme-update"&gt;
&lt;h2&gt;Jabra Supreme update&lt;/h2&gt;
&lt;p&gt;Well, after about a week of using it, I'm happy with the Jabra Supreme.
The sound quality on calls is good, the mute button works, and it's very
comfortable on the ear. The earbud, surprisingly, is unlike most others
that sit inside your ear close to your ear-canal; instead, the Jabra
Supreme rests against the outside of your ear. It's also nice to just
fold in the boom mic and have the headset turn off.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="jabra-motion-update-dec-2014"&gt;
&lt;h2&gt;Jabra Motion Update (Dec 2014)&lt;/h2&gt;
&lt;p&gt;I've also been using this now for the past year or so, after finding it on
sale.  I'd say that quality wise it's very similar to the Supreme, but the fit
is a little better.  I also think that battery standby is much better; the
supreme would always be out of battery after being turned off for a week or
two, with the Motion never having this issue. It is a litle bit more annoying
to put on, and I don't think I would recommend it for smaller ears because the
portion that fits between your ear and head is rather thick.  I do find it more
stable on my ear once I get it on, however.&lt;/p&gt;
&lt;/div&gt;
</content><category term="Shopping"></category><category term="bluetooth"></category><category term="shopping"></category><category term="tech"></category></entry><entry><title>Python auto sort of OCR'ed PDFs</title><link href="https://virantha.com/2013/04/20/python-auto-sort-of-ocred-pdfs/" rel="alternate"></link><published>2013-04-20T20:25:00-04:00</published><updated>2013-04-20T20:25:00-04:00</updated><author><name>virantha</name></author><id>tag:virantha.com,2013-04-20:/2013/04/20/python-auto-sort-of-ocred-pdfs/</id><summary type="html">&lt;p&gt;I'd &lt;a class="reference external" href="http://virantha.com/2012/10/25/getting-rid-of-paper-clutter/"&gt;previously written about&lt;/a&gt; how I was using a &lt;a class="amazon" href="http://www.amazon.com/gp/product/B00ATZ9QMO?ie=UTF8&amp;linkCode=as2&amp;camp=1634&amp;tag=virantha-20"&gt;Fujitsu ScanSnap 1500&lt;/a&gt; to reduce paper clutter
and move to a paperless workflow at home. &amp;nbsp;So far, this system has been
working great for me, with every scanned document getting OCR'ed and
uploaded to my default Evernote notebook as a searchable â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;I'd &lt;a class="reference external" href="http://virantha.com/2012/10/25/getting-rid-of-paper-clutter/"&gt;previously written about&lt;/a&gt; how I was using a &lt;a class="amazon" href="http://www.amazon.com/gp/product/B00ATZ9QMO?ie=UTF8&amp;linkCode=as2&amp;camp=1634&amp;tag=virantha-20"&gt;Fujitsu ScanSnap 1500&lt;/a&gt; to reduce paper clutter
and move to a paperless workflow at home. &amp;nbsp;So far, this system has been
working great for me, with every scanned document getting OCR'ed and
uploaded to my default Evernote notebook as a searchable PDF. &amp;nbsp;However,
I realized that I was still spending more time than I wanted to in
manually sorting these documents into Evernote notebooks.&lt;/p&gt;
&lt;p&gt;It seemed silly that there was no way for Evernote to automatically sort
pdfs based on some kind of tag or keyword search. &amp;nbsp;So I ended up
spending a few hours developing the Python script described below to do
this sorting for automatically. &amp;nbsp;At some point, I'll package this up on
github or bitbucket.&lt;/p&gt;
&lt;p&gt;I'm calling this program&amp;nbsp;&lt;strong&gt;scanever&lt;/strong&gt;&amp;nbsp;because I didn't have more than
30 seconds to come up with something besides pdf2evernote. &amp;nbsp;It replaces
the kludgy batchfile and watch4folder I had used previously, and is
OS-independent.&lt;/p&gt;
&lt;div class="section" id="use"&gt;
&lt;h2&gt;Use&lt;/h2&gt;
&lt;p&gt;scanever takes a configuration file that lists all the folders I want to
sort into, as well as the keywords that fall into each folder. &amp;nbsp;Here's
an example (it uses the YAML syntax):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;watch_folder&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;M:/Incoming&amp;quot;&lt;/span&gt;
&lt;span class="nt"&gt;evernote_folder&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;M:/To&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Evernote&amp;quot;&lt;/span&gt;
&lt;span class="nt"&gt;default_folder&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;default&lt;/span&gt;
&lt;span class="nt"&gt;folders&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="nt"&gt;finances&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;chase visa&lt;/span&gt;
&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;american express&lt;/span&gt;
&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;bank of america&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="nt"&gt;home&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;mortgage&lt;/span&gt;
&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;property tax&lt;/span&gt;
&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;city of oz&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="nt"&gt;health&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;explanation of benefits&lt;/span&gt;
&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;healthcare&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;em&gt;folders&lt;/em&gt; section defines a list of folders and their associated
keywords. For example, any PDF that gets placed in &amp;quot;M:/Incoming&amp;quot; by
Abbyy FineReader that has &amp;quot;chase visa&amp;quot; or &amp;quot;american express&amp;quot; or &amp;quot;bank of
america&amp;quot; in its first page gets filed into a subfolder of &amp;quot;M:/To
Evernote&amp;quot; called &amp;quot;finances&amp;quot;. The &lt;em&gt;default_folder&lt;/em&gt; sets where the pdf
goes if there is no match found.&lt;/p&gt;
&lt;p&gt;So how does my script work? The main logic is divided into three
classes:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Main class that reads in the configuration file and runs everything&lt;/li&gt;
&lt;li&gt;Folder watching logic&lt;/li&gt;
&lt;li&gt;File matching and filing logic&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="watching-the-incoming-folder"&gt;
&lt;h2&gt;Watching the incoming folder&lt;/h2&gt;
&lt;p&gt;For this, I'm relying on the excellent cross-platform package
&lt;a class="reference external" href="http://pythonhosted.org/watchdog/"&gt;watchdog&lt;/a&gt;. Here's my custom event handler class that I use to
interface with this API, and the way it works is as follows:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;On any file created/modified/moved event, it will check if the file
ends with .pdf. (This is the first pdf that the ScanSnap does before
it sends it off to Abbyy for OCR'ing). We add this filename to the
events list (inside &lt;em&gt;check_for_new_pdf)&lt;/em&gt;if not already present.&lt;/li&gt;
&lt;li&gt;Abbyy FineReader at some point will finish writing the _OCR.pdf file
and delete the original .pdf. We key off this delete event and start
our analysis of the final _OCR file, described in the next section.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;
&lt;span class="normal"&gt;13&lt;/span&gt;
&lt;span class="normal"&gt;14&lt;/span&gt;
&lt;span class="normal"&gt;15&lt;/span&gt;
&lt;span class="normal"&gt;16&lt;/span&gt;
&lt;span class="normal"&gt;17&lt;/span&gt;
&lt;span class="normal"&gt;18&lt;/span&gt;
&lt;span class="normal"&gt;19&lt;/span&gt;
&lt;span class="normal"&gt;20&lt;/span&gt;
&lt;span class="normal"&gt;21&lt;/span&gt;
&lt;span class="normal"&gt;22&lt;/span&gt;
&lt;span class="normal"&gt;23&lt;/span&gt;
&lt;span class="normal"&gt;24&lt;/span&gt;
&lt;span class="normal"&gt;25&lt;/span&gt;
&lt;span class="normal"&gt;26&lt;/span&gt;
&lt;span class="normal"&gt;27&lt;/span&gt;
&lt;span class="normal"&gt;28&lt;/span&gt;
&lt;span class="normal"&gt;29&lt;/span&gt;
&lt;span class="normal"&gt;30&lt;/span&gt;
&lt;span class="normal"&gt;31&lt;/span&gt;
&lt;span class="normal"&gt;32&lt;/span&gt;
&lt;span class="normal"&gt;33&lt;/span&gt;
&lt;span class="normal"&gt;34&lt;/span&gt;
&lt;span class="normal"&gt;35&lt;/span&gt;
&lt;span class="normal"&gt;36&lt;/span&gt;
&lt;span class="normal"&gt;37&lt;/span&gt;
&lt;span class="normal"&gt;38&lt;/span&gt;
&lt;span class="normal"&gt;39&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ChangeHandler&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;FileSystemEventHandler&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;events&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pdfsearcher&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;FileSystemEventHandler&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pdfsearcher&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pdfsearcher&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;check_for_new_pdf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;ev_path&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;ev_path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;endswith&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;.pdf&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;ev_path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;endswith&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;_OCR.pdf&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;ev_path&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;ChangeHandler&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;events&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                    &lt;span class="n"&gt;ChangeHandler&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;events&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ev_path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                    &lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Adding &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt; to event queue&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;ev_path&lt;/span&gt;
                &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                    &lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt; alread in event queue&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;ev_path&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;on_created&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;event&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;on_created: &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;event&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;src_path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;check_for_new_pdf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;event&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;src_path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;on_moved&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;event&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;on_moved: &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;event&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;src_path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;check_for_new_pdf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;event&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dest_path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;on_modified&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;event&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;on_modified: &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;event&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;src_path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;check_for_new_pdf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;event&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;src_path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;on_deleted&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;event&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;on_deleted: &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;event&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;src_path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;ev_src_path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;event&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;src_path&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;ev_src_path&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;ChangeHandler&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;events&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Deleting &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt; in event queue&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;ev_src_path&lt;/span&gt;
            &lt;span class="n"&gt;ChangeHandler&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;events&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ev_src_path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="c1"&gt;# Now, check that the OCR version is present&lt;/span&gt;
            &lt;span class="n"&gt;ocr_path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ev_src_path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;.pdf&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;_OCR.pdf&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exists&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ocr_path&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
                &lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Analyzing OCR&amp;#39;ed file &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt;!&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;ocr_path&lt;/span&gt;
                &lt;span class="n"&gt;pdf&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pdfsearcher&lt;/span&gt;
                &lt;span class="n"&gt;text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pdf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;readPdfFirstPage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ocr_path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="n"&gt;pdf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;moveToFolders&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="analyzing-the-pdf-and-sorting-it"&gt;
&lt;h2&gt;Analyzing the PDF and sorting it&lt;/h2&gt;
&lt;p&gt;The next step is to read in the PDF (the first page) and search for
matching text. For this, I rely on &lt;a class="reference external" href="http://knowah.github.io/PyPDF2/"&gt;PyPDF2&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;PdfSearcher&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;object&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;evernote&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;default&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;folderTargets&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pdfText&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;evernote_folder&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;evernote&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;default_folder&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;default&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;readPdfFirstPage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;filename&lt;/span&gt;
        &lt;span class="n"&gt;reader&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;PdfFileReader&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;reader&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getPage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;extractText&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ascii&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;ignore&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pdfText&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;text&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;text&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;addFolderTarget&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;dirname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;matchStrings&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="c1"&gt;# Used externally to add in the keywords/folders&lt;/span&gt;
        &lt;span class="k"&gt;assert&lt;/span&gt; &lt;span class="n"&gt;dirname&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;folderTargets&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Target folder already defined! (&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt;)&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dirname&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;folderTargets&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;dirname&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;matchStrings&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;_getMatchingFolder&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="c1"&gt;# Return the folder that matches any of the keywords in self.pdfText&lt;/span&gt;
        &lt;span class="n"&gt;searchText&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pdfText&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lower&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;folder&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;strings&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;folderTargets&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;strings&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;searchText&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                    &lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;
                    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;folder&lt;/span&gt;
        &lt;span class="c1"&gt;# No match found, so return&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;None&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;moveToFolders&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;tgt_folder&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_getMatchingFolder&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;tgt_folder&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;No match found, using default folder&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;tgt_path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;evernote_folder&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;default_folder&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;tgt_path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;evernote_folder&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;tgt_folder&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exists&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tgt_path&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;makedirs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tgt_path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Making path &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;tgt_path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;shutil&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;move&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tgt_path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="main-class"&gt;
&lt;h2&gt;Main class&lt;/h2&gt;
&lt;p&gt;Now, here's the main class that reads the configuration and sets up the
event loop:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ScanEver&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;object&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;maxlength&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;500&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;getOptions&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;usage&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;ScanEver &amp;#39;&lt;/span&gt;
        &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;OptionParser&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;usage&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_option&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;-d&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;--debug&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;action&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;store_true&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;default&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;dest&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;debug&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;help&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Turn on debugging&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_option&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;-v&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;--verbose&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;action&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;store_true&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;default&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;dest&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;verbose&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;help&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Turn on verbose mode&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;opt&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parse_args&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;opt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;verbose&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;opt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;verbose&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;opt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;basicConfig&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;level&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DEBUG&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;format&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="si"&gt;%(message)s&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;opt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;verbose&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;basicConfig&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;level&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;INFO&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;format&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="si"&gt;%(message)s&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="n"&gt;fstream&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;paths.yaml&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;r&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;myopts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;yaml&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;load&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fstream&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;evernote_folder&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;myopts&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;evernote_folder&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;default_folder&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;myopts&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;default_folder&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;searcher&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;PdfSearcher&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;evernote_folder&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;default_folder&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;folder&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;strings&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;myopts&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;folders&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;searcher&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;addFolderTarget&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;folder&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;strings&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;monitor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;event_handler&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ChangeHandler&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;searcher&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;observer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Observer&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
            &lt;span class="c1"&gt;#observer.schedule(event_handler, os.path.abspath(&amp;quot;test&amp;quot;))&lt;/span&gt;
            &lt;span class="n"&gt;observer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;schedule&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;event_handler&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;abspath&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&amp;quot;M:\Incoming&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
            &lt;span class="n"&gt;observer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
            &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                    &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="ne"&gt;KeyboardInterrupt&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;observer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
            &lt;span class="n"&gt;observer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;go&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="c1"&gt;# Read the command line options&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getOptions&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;monitor&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vm"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;script&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ScanEver&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;script&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;go&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:])&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
</content><category term="Tech"></category><category term="python"></category><category term="tech"></category></entry><entry><title>Better VIM for Python</title><link href="https://virantha.com/2013/03/01/better-vim-for-python/" rel="alternate"></link><published>2013-03-01T19:13:00-05:00</published><updated>2013-03-01T19:13:00-05:00</updated><author><name>virantha</name></author><id>tag:virantha.com,2013-03-01:/2013/03/01/better-vim-for-python/</id><summary type="html">&lt;p&gt;As someone who spends a large fraction of their day editing text and
code, I've often thought about just investing a few days learning the
more advanced time-saving features of my text-editor, VIM.
Unfortunately, &amp;quot;a few days&amp;quot; just doesn't happen, and the few times I did
learn some new tips â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;As someone who spends a large fraction of their day editing text and
code, I've often thought about just investing a few days learning the
more advanced time-saving features of my text-editor, VIM.
Unfortunately, &amp;quot;a few days&amp;quot; just doesn't happen, and the few times I did
learn some new tips, I ended up forgetting them after a few days through
disuse. So I'm going to start a new series of blog posts, mainly for my
own reference, that I'll try to come back to often and refresh my
memory.&lt;/p&gt;
&lt;p&gt;Most of this is based on the excellent resources already out there on
the web, most notably these posts:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;`&amp;nbsp;Vim as Python IDE`_&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://sontek.net/blog/detail/turning-vim-into-a-modern-python-ide"&gt;Turning Vim into a modern Python IDE&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="section" id="alignment"&gt;
&lt;h2&gt;Alignment&lt;/h2&gt;
&lt;p&gt;At work, we try to enforce pretty strict guidelines on the readability
of python code You only write a specific piece of code a few times, but
you or someone else will have to read it many times over, so it makes
sense to optimize readability over getting it written as quickly as
possible. &amp;nbsp;The &lt;a class="reference external" href="http://www.vim.org/scripts/script.php?script_id=294"&gt;Align plugin&lt;/a&gt; makes some of these readability
guidelines simple to implement and maintain, by allowing you to align
function arguments, variable assignments, etc.&lt;/p&gt;
&lt;p&gt;For example, if you have code like in the following nonsensical
example:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="c1"&gt;# set a&lt;/span&gt;
&lt;span class="n"&gt;nextvar&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;kdjf&amp;quot;&lt;/span&gt; &lt;span class="c1"&gt;# hmmm&lt;/span&gt;
&lt;span class="n"&gt;cdk&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Selecting (&amp;quot;V&amp;quot;) and typing &lt;tt class="docutils literal"&gt;Align = #&lt;/tt&gt; will reformat your text as:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;       &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="c1"&gt;# set a&lt;/span&gt;
&lt;span class="n"&gt;nextvar&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;kdjf&amp;quot;&lt;/span&gt; &lt;span class="c1"&gt;# hmmm&lt;/span&gt;
&lt;span class="n"&gt;cdk&lt;/span&gt;     &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
</content><category term="Tech"></category><category term="vim"></category></entry><entry><title>Replacing the upstream oxygen (O2) sensor in a Honda Civic 2005</title><link href="https://virantha.com/2013/01/13/replacing-the-upstream-oxygen-o2-sensor-in-a-honda-civic-2005/" rel="alternate"></link><published>2013-01-13T04:19:00-05:00</published><updated>2013-01-13T04:19:00-05:00</updated><author><name>virantha</name></author><id>tag:virantha.com,2013-01-13:/2013/01/13/replacing-the-upstream-oxygen-o2-sensor-in-a-honda-civic-2005/</id><summary type="html">&lt;p&gt;This is not quite my normal tech post, but I thought this might help
other folks needing to change the O2 sensor in this particular model.
There's some conflicting and incomplete information out on the web for
this relatively simple task, so hopefully this will clarify things a
bit.&lt;/p&gt;
&lt;div class="contents topic" id="table-of-contents"&gt;
&lt;p class="topic-title"&gt;&lt;a class="reference internal" href="#top"&gt;Table â€¦&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;This is not quite my normal tech post, but I thought this might help
other folks needing to change the O2 sensor in this particular model.
There's some conflicting and incomplete information out on the web for
this relatively simple task, so hopefully this will clarify things a
bit.&lt;/p&gt;
&lt;div class="contents topic" id="table-of-contents"&gt;
&lt;p class="topic-title"&gt;&lt;a class="reference internal" href="#top"&gt;Table of Contents:&lt;/a&gt;&lt;/p&gt;
&lt;ul class="auto-toc simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#diagnosis" id="toc-entry-1"&gt;1&amp;nbsp;&amp;nbsp;&amp;nbsp;Diagnosis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#parts-required" id="toc-entry-2"&gt;2&amp;nbsp;&amp;nbsp;&amp;nbsp;Parts required&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#replacement" id="toc-entry-3"&gt;3&amp;nbsp;&amp;nbsp;&amp;nbsp;Replacement&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="diagnosis"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#toc-entry-1"&gt;1&amp;nbsp;&amp;nbsp;&amp;nbsp;Diagnosis&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The check engine light came on in my wife's car, and I finally got a
chance to buy an OBD-II sensor. &amp;nbsp;I ended up going with the &lt;a class="reference external" href="http://www.amazon.com/gp/product/B005NLQAHS/ref=as_li_qf_sp_asin_tl?ie=UTF8&amp;amp;tag=virantha-20&amp;amp;linkCode=as2&amp;amp;camp=1789&amp;amp;creative=9325&amp;amp;creativeASIN=B005NLQAHS"&gt;BAFX ELM 327
Bluetooth OBD2 scan tool&lt;/a&gt;&lt;img alt="image0" src="http://www.assoc-amazon.com/e/ir?t=virantha-20&amp;amp;l=as2&amp;amp;o=1&amp;amp;a=B005NLQAHS" /&gt;. This tool had decent reviews, was
under $25, and could connect via bluetooth to an old android tablet I
had lying around. This scanner pairs up easily with the free Andoid app
called &lt;a class="reference external" href="https://play.google.com/store/apps/details?id=org.prowl.torquefree"&gt;&amp;quot;Torque Lite&amp;quot;&lt;/a&gt;, which can read the error out of the car's
engine-control-unit (ECU) and reset it.&lt;/p&gt;
&lt;p&gt;When I got this hooked up (the OBD-II port is under the dash on the
driver's side, coming out from the right side above the accelerator
pedal), the code reported using Torque was:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
P0135 &amp;quot;O2 sensor heater circuit &amp;nbsp;bank 1 sensor 1&amp;quot;
&lt;/pre&gt;
&lt;p&gt;A quick internet search yielded the information that this was the
upstream sensor.
[ref]
The Civic '05 has two sensors, the upstream (located on the engine
block), and the downstream (after the catalytic converter, and accessed
from underneath the car). This post only refers to the &lt;strong&gt;upstream one&lt;/strong&gt;.
This is actually a wide-band fuel/air ratio sensor, so it's somewhat
pricey to replace compared to a regular narrow-band O2 sensor.
[/ref]&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="parts-required"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#toc-entry-2"&gt;2&amp;nbsp;&amp;nbsp;&amp;nbsp;Parts required&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;With the problem identified, I just had to replace the O2 sensor.&lt;/p&gt;
&lt;ol&gt;&lt;ol class="arabic"&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;strong&gt;Replacement Sensor&lt;/strong&gt;: The OEM part for this is manufactured by
Denso. &amp;nbsp;You can find a replacement (at the time of writing) at
Amazon.com for less the $100, the cheapest I could find online
[ref]`Rock Auto`_ is also a good source[/ref]:&lt;/p&gt;
&lt;div&gt;&lt;a class="amazon" href="http://www.amazon.com/gp/product/B000C5UFVM/ref=as_li_tf_il?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=B000C5UFVM&amp;linkCode=am2&amp;tag=virantha-20"&gt;&lt;img src="http://images.amazon.com/images/P/B000C5UFVM.01._SCMZZZZZZZ_.jpg"/&gt;Denso 234-9005 Oxygen Sensor for the Civic LX&lt;/a&gt;&lt;/div&gt;&lt;p&gt;Note that this part does&amp;nbsp;&lt;strong&gt;not&lt;/strong&gt; work in the EX model, which
requires the 234-9017:&lt;/p&gt;
&lt;div&gt;&lt;a class="amazon" href="http://www.amazon.com/gp/product/B00122EENE/ref=as_li_tf_il?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=B00122EENE&amp;linkCode=am2&amp;tag=virantha-20"&gt;&lt;img src="http://images.amazon.com/images/P/B00122EENE.01._SCMZZZZZZZ_.jpg"/&gt;Denso 234-9017 Oxygen Sensor for the Civic EX&lt;/a&gt;&lt;/div&gt;&lt;p&gt;Be careful with box stores like Autozone that give you the wrong part
numbers for this car.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;strong&gt;Oxygen sensor socket:&lt;/strong&gt;This is a special socket with a slot down
the side that lets you slide the O2 sensor wire &amp;nbsp;through it. &amp;nbsp;I ended
up getting this one from amazon for $25 that fits the 7/8&amp;quot;
sensor.&lt;/p&gt;
&lt;blockquote&gt;
&lt;div&gt;&lt;a class="amazon" href="http://www.amazon.com/gp/product/B00062ZK5M/ref=as_li_tf_il?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=B00062ZK5M&amp;linkCode=am2&amp;tag=virantha-20"&gt;&lt;img src="http://images.amazon.com/images/P/B00062ZK5M.01._SCMZZZZZZZ_.jpg"/&gt;Socket&lt;/a&gt;&lt;/div&gt;&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;strong&gt;Ratcheting socket wrench 3/8&amp;quot;:&lt;/strong&gt; To fit the above socket; had this
lying around in my toolbox.&lt;/p&gt;
&lt;div&gt;&lt;a class="amazon" href="http://www.amazon.com/gp/product/B001FOQH2K/ref=as_li_tf_il?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=B001FOQH2K&amp;linkCode=am2&amp;tag=virantha-20"&gt;&lt;img src="http://images.amazon.com/images/P/B001FOQH2K.01._SCMZZZZZZZ_.jpg"/&gt;Wrench&lt;/a&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;strong&gt;Penetrating oil:&lt;/strong&gt;Essential to have some kind of penetrating oil
to loosen up the old sensor. I cheaped out and just used some WD-40 I
had lying around, but you could use something like this:&lt;/p&gt;
&lt;div&gt;&lt;a class="amazon" href="http://www.amazon.com/gp/product/B00200MR8Q/ref=as_li_tf_il?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=B00200MR8Q&amp;linkCode=am2&amp;tag=virantha-20"&gt;&lt;img src="http://images.amazon.com/images/P/B00200MR8Q.01._SCMZZZZZZZ_.jpg"/&gt;Liquid Wrench&lt;/a&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;strong&gt;Gloves and protective eyewear:&lt;/strong&gt;Never hurts to be safe.&lt;/p&gt;
&lt;div&gt;&lt;a class="amazon" href="http://www.amazon.com/gp/product/B001D1FV72/ref=as_li_tf_il?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=B001D1FV72&amp;linkCode=am2&amp;tag=virantha-20"&gt;&lt;img src="http://images.amazon.com/images/P/B001D1FV72.01._SCMZZZZZZZ_.jpg"/&gt;CLC gloves&lt;/a&gt;&lt;/div&gt;&lt;div&gt;&lt;a class="amazon" href="http://www.amazon.com/gp/product/B000RKQ1NI/ref=as_li_tf_il?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=B000RKQ1NI&amp;linkCode=am2&amp;tag=virantha-20"&gt;&lt;img src="http://images.amazon.com/images/P/B000RKQ1NI.01._SCMZZZZZZZ_.jpg"/&gt;Eyewear&lt;/a&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/ol&gt;&lt;/div&gt;
&lt;div class="section" id="replacement"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#toc-entry-3"&gt;3&amp;nbsp;&amp;nbsp;&amp;nbsp;Replacement&lt;/a&gt;&lt;/h2&gt;
&lt;ol class="arabic"&gt;
&lt;li&gt;&lt;p class="first"&gt;Apply some penetrating oil to the sensor&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Examine the wiring harness while you wait for the sensor to loosen
up. &amp;nbsp;The wire from the sensor clips into a socket, and both are
attached via a metal tab to the frame.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Disconnecting the old sensor wiring harness
was the most difficult part of this whole task, given that I'd never
done this before, and also the least documented piece.&lt;/p&gt;
&lt;div class="figure align-left" style="width: 80%"&gt;
&lt;img alt="Oxygen sensor layout" src="/images/2013/o2sensor.jpg" /&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;The first step is to pry the wire clip and socket off this metal
clip. &amp;nbsp;Push the little tab shown in the picture up towards the wire
clip (you may hear a slight click) [green arrow], and then start
wiggling the clip off the metal tab [red arrow]. &amp;nbsp;Go slow; the metal
will usually have oxidized, and you don't want to yank too hard in
case it comes loose quickly and you end up stressing the wiring
coming from the ECU.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Once the wire clip and socket are free from the metal tab, you need
to remove the clip from the socket. &amp;nbsp;Push down on the far end of the
top of the socket [blue arrow], and pull the clip out slowly [purple
arrow]. &amp;nbsp;This part should come out fairly easily; if it doesn't, that
means you're not pushing the tab on the socket correctly to release
the clip properly.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Now, you're free to use the socket to remove the old O2 sensor. &amp;nbsp;Turn
counter-clockwise to loosen, and then use your hands to rotate the
remainder and pull out the sensor, being careful not to damage the
threads.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Put anti-seize grease (included with your sensor) on the threads of
the new O2 sensor, then thread it in by hand, finally tightening
using the socket (Not super tight like a tire lugnut, but fairly
tight)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Connect the new wiring clip to the socket, and slide the whole wiring
harness back on to the metal clip (you should hear a slight click).
&amp;nbsp;Make sure the wire doesn't touch the engine block after attaching.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;You're done! &amp;nbsp;Clear out the error code using the OBD II tool, and
start your engine and drive away with the satisfaction of having
learned a little bit about your car and saved a few hundred
dollars.[ref]You may have some slight burning smell for a little
while as the WD-40 and/or the anti-seize grease excess burns
off[/ref]&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content><category term="DIY"></category><category term="diy"></category></entry><entry><title>Class-based decorators in Python</title><link href="https://virantha.com/2012/11/02/class-based-decorators-in-python/" rel="alternate"></link><published>2012-11-02T01:22:00-04:00</published><updated>2012-11-02T01:22:00-04:00</updated><author><name>virantha</name></author><id>tag:virantha.com,2012-11-02:/2012/11/02/class-based-decorators-in-python/</id><summary type="html">&lt;p&gt;I recently started using decorators in python (2.7) to clean up some
existing code, and one big hurdle I had to surmount was the dearth of
accurate information on using class-based decorators. The few examples I
found were quite buggy, and it seemed that most people did not use â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;I recently started using decorators in python (2.7) to clean up some
existing code, and one big hurdle I had to surmount was the dearth of
accurate information on using class-based decorators. The few examples I
found were quite buggy, and it seemed that most people did not use
decorator classes, which is a shame because in addition to being very
flexible, they expose the underlying mechanics of method/function
decoration better than functions.&lt;/p&gt;
&lt;p&gt;Here's an example of one such use: in EDA tool flows, we often do many
text file transformations (in fact, it's been argued that all EDA work
basically boils down to transforming information from one file format to
another :-) ). Sometimes, a lot of intermediate files get generated on
the way to the final output, such as when taking a structural circuit
description and outputting a spice netlist that has the proper name
mangling for the end simulator or netlist comparison engine. In these
instances, it would be far preferable to do all the work in a tmp
directory to reduce file clutter in our source directories, so a lot of
functions end up with code that looks like the following:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;someMunge&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
  &lt;span class="n"&gt;currentDir&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getcwd&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;chdir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tmpDir&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="o"&gt;....&lt;/span&gt; &lt;span class="n"&gt;actual&lt;/span&gt; &lt;span class="n"&gt;work&lt;/span&gt; &lt;span class="o"&gt;....&lt;/span&gt;
  &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;chdir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;currentDir&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In fact, I've omitted a lot of the error-checking and cleanup code that
we would end up using. Once we start having a lot of different munge
functions, all this boilerplate code needs to be factored out to keep it
maintainable, so we might end up doing the following:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;someMunge&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;enterTempDir&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="o"&gt;....&lt;/span&gt; &lt;span class="n"&gt;actual&lt;/span&gt; &lt;span class="n"&gt;work&lt;/span&gt; &lt;span class="o"&gt;....&lt;/span&gt;
    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;leaveTempDir&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Seems reasonable, although it's still cluttering up the munge function
with extraneous detail unrelated to the actual munge. A much cleaner
solution is being able to do the following:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nd"&gt;@tmpdir&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;someMunge&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;span class="o"&gt;....&lt;/span&gt; &lt;span class="n"&gt;actual&lt;/span&gt; &lt;span class="n"&gt;work&lt;/span&gt; &lt;span class="o"&gt;....&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;tt class="docutils literal"&gt;&amp;#64;tmpdir&lt;/tt&gt; applies the tmpdir decorator to this class
method. And here is what the tmpdir decorator class looks like:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;tmpdir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;object&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="c1"&gt;# f is the method being decorated, so save it so we can call it&lt;/span&gt;
    &lt;span class="n"&gt;later&lt;/span&gt;&lt;span class="err"&gt;!&lt;/span&gt;
    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__get__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;instance&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;owner&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="c1"&gt;# Save a ptr to the object being decorated&lt;/span&gt;
    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cls&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;owner&lt;/span&gt;
    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;obj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;instance&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="fm"&gt;__call__&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__call__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="c1"&gt;# The actual meat of the decorator&lt;/span&gt;
    &lt;span class="n"&gt;currentDir&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getcwd&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;chdir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tmpDir&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c1"&gt;# Call the original method being decorated&lt;/span&gt;
    &lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="fm"&gt;__call__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;chdir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;currentDir&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A more detailed explanation of how it works is coming up soon!&lt;/p&gt;
</content><category term="Tech"></category><category term="decorators"></category><category term="python"></category></entry><entry><title>Getting rid of paper clutter</title><link href="https://virantha.com/2012/10/25/getting-rid-of-paper-clutter/" rel="alternate"></link><published>2012-10-25T14:30:00-04:00</published><updated>2012-10-25T14:30:00-04:00</updated><author><name>virantha</name></author><id>tag:virantha.com,2012-10-25:/2012/10/25/getting-rid-of-paper-clutter/</id><summary type="html">&lt;div class="admonition note"&gt;
&lt;p class="first admonition-title"&gt;Note&lt;/p&gt;
&lt;p class="last"&gt;A lot of this information is deprecated now.  Please see my PyPDFOCR
package for how I do everything described in this article&lt;/p&gt;
&lt;/div&gt;
&lt;div class="figure align-right" style="width: 50%"&gt;
&lt;img alt="skip_better Picture" src="/images/2012/picture2life_05067_original.jpg" style="width: 90%;" /&gt;
&lt;/div&gt;
&lt;p&gt;I've tried to go paperless for a long time now, but the overhead of
starting my laptop, scanning, importing, and the filing in a folder
always made â€¦&lt;/p&gt;</summary><content type="html">&lt;div class="admonition note"&gt;
&lt;p class="first admonition-title"&gt;Note&lt;/p&gt;
&lt;p class="last"&gt;A lot of this information is deprecated now.  Please see my PyPDFOCR
package for how I do everything described in this article&lt;/p&gt;
&lt;/div&gt;
&lt;div class="figure align-right" style="width: 50%"&gt;
&lt;img alt="skip_better Picture" src="/images/2012/picture2life_05067_original.jpg" style="width: 90%;" /&gt;
&lt;/div&gt;
&lt;p&gt;I've tried to go paperless for a long time now, but the overhead of
starting my laptop, scanning, importing, and the filing in a folder
always made me go back to just keeping stacks of paper around. But now
I've finally found a solution that works well enough that I haven't
abandoned it after a few months. &amp;nbsp;The key is a stand-alone scanner that
does OCR, converts to PDF, and then uploads to Evernote automatically.
Details below:&lt;/p&gt;
&lt;div class="section" id="hardware-required"&gt;
&lt;h2&gt;Hardware required&lt;/h2&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.amazon.com/gp/product/B001V9LQH0/ref=as_li_tf_tl?ie=UTF8&amp;amp;camp=1789&amp;amp;creative=9325&amp;amp;creativeASIN=B001V9LQH0&amp;amp;linkCode=as2&amp;amp;tag=virantha-20"&gt;Fujitsu ScanSnap 1500&lt;/a&gt;&amp;nbsp;- This was the game-changer; it's a little
pricey but after having gone through a bunch of inferior flat-bed and
Neatworks scanners, this stand-alone scanner really makes things
simple.&lt;/li&gt;
&lt;li&gt;Dedicated PC running on your network - &amp;nbsp;You could just use your
laptop, but &amp;nbsp;I have a bunch of different desktops running file
servers etc that makes things simpler&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class="section" id="software-required"&gt;
&lt;h2&gt;&amp;nbsp;Software required&lt;/h2&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://evernote.com"&gt;Evernote&lt;/a&gt;&amp;nbsp;- I'm a big fan of this service, and use it for all my
notes/receipts/documents/lists. &amp;nbsp;Get the premium service, it's
definitely worth it!&lt;/li&gt;
&lt;li&gt;Abby FineReader for OCR (this ships with the Fujitsu ScanSnap)&lt;/li&gt;
&lt;li&gt;Download a program that can watch a folder for file changes and run a
script. &amp;nbsp;Since the server I'm using at home runs Windows, I
use&amp;nbsp;&lt;a class="reference external" href="http://www.guidingtech.com/9861/automate-folder-actions-windows-watch-4-folder/"&gt;Watch 4 Folder&lt;/a&gt;, but this should be much easier on Mac OS X.&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class="section" id="workflow-scripts"&gt;
&lt;h2&gt;Workflow Scripts&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Setup up a profile on your ScanSnap image scanner that scans to Abby
FineReader (OCR that comes with the software) and does a searchable
PDF, that writes the file to a specific folder which I'll refer to as
&amp;quot;Incoming&amp;quot;. &amp;nbsp;The raw scan will first show up as
&amp;quot;YYYY_MM_DD_HH_MM_SS.pdf&amp;quot;, and once Abby finishes the OCR in the
background, it will replace it&amp;nbsp;with
&amp;quot;YYYY_MM_DD_HH_MM_SS_OCR.pdf&amp;quot;&lt;/li&gt;
&lt;li&gt;Setup the following batch file &amp;quot;move.bat&amp;quot;. &amp;nbsp;This will watch the
&amp;quot;Incoming&amp;quot; folder for any file ending with &amp;quot;_OCR.pdf&amp;quot;, wait 5
minutes, and then copy it to a folder called &amp;quot;To evernote&amp;quot;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;[ccw lang=&amp;quot;dos&amp;quot; width=&amp;quot;100%&amp;quot; strict=&amp;quot;true&amp;quot;]&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;set noext=%file:~1,-9%&lt;/div&gt;
&lt;div class="line"&gt;set ocr=&amp;quot;%noext%_OCR.pdf&amp;quot;&lt;/div&gt;
&lt;div class="line"&gt;IF EXIST %ocr% (&lt;/div&gt;
&lt;div class="line"&gt;echo &amp;quot;Found %ocr%! Waiting 5 minutes before doing anything&amp;quot;&lt;/div&gt;
&lt;div class="line"&gt;PING 1.1.1.1 -n 1 -w 300000 &amp;gt;NUL&lt;/div&gt;
&lt;div class="line"&gt;move %ocr% &amp;quot;c:\users\virantha\Documents\ScanSnap\To evernote&amp;quot;&lt;/div&gt;
&lt;div class="line"&gt;)&lt;/div&gt;
&lt;div class="line"&gt;exit&lt;/div&gt;
&lt;div class="line"&gt;[/cc]&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Since we want multiple instances of this batch file running, we need
to create another batch file &amp;quot;start.bat&amp;quot; to invoke this as a process:&lt;/li&gt;
&lt;li&gt;[cc lang=&amp;quot;dos&amp;quot;]&amp;nbsp;start c:\Users\virantha\Documents\move.bat %1
[/cc]&lt;/li&gt;
&lt;li&gt;Configure Watch 4 Folder to run at startup minimized, and monitor
your &amp;quot;Incoming&amp;quot; folder for any changes, and then execute &amp;quot;start.bat&amp;quot;&lt;/li&gt;
&lt;li&gt;Configure Evernote &amp;quot;Tools -&amp;gt; Import Folders&amp;quot; and add your &amp;quot;To
evernote&amp;quot; directory to the list of folders Evernote watches for file
imports.&lt;/li&gt;
&lt;li&gt;You're done! &amp;nbsp;One press on your scanner, and your OCR'ed PDF
documents will arrive in your Evernote default notebook in a few
minutes. &amp;nbsp;You can then use evernote search to find whatever you need
at a later date even if you don't bother to file these new notes.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</content><category term="Tech"></category><category term="paperless"></category><category term="tips"></category></entry><entry><title>Using Calibre to manage my e-books</title><link href="https://virantha.com/2012/10/23/using-calibre-to-manage-my-e-books/" rel="alternate"></link><published>2012-10-23T19:18:00-04:00</published><updated>2012-10-23T19:18:00-04:00</updated><author><name>virantha</name></author><id>tag:virantha.com,2012-10-23:/2012/10/23/using-calibre-to-manage-my-e-books/</id><summary type="html">&lt;p&gt;I decided to start using &lt;a class="reference external" href="http://calibre-ebook.com/"&gt;Calibre&lt;/a&gt;as my main ebook management
program. &amp;nbsp;I've been using it for online content from publications like
the Economist and The New Yorker for a while now, but it's become
increasingly difficult to manage my entire e-book library, having
acquired several hundred books from Amazon â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;I decided to start using &lt;a class="reference external" href="http://calibre-ebook.com/"&gt;Calibre&lt;/a&gt;as my main ebook management
program. &amp;nbsp;I've been using it for online content from publications like
the Economist and The New Yorker for a while now, but it's become
increasingly difficult to manage my entire e-book library, having
acquired several hundred books from Amazon over the course of the last 5
years since the original Kindle came out.&lt;/p&gt;
&lt;p&gt;While I love the Kindle for travel and being being able to read
outdoors, its interface leaves much to be desired for organizing one's
content. &amp;nbsp;So, I decided this morning to switch over to Calibre to manage
my needs; I think it has matured and become fast enough now to be useful
for everyday use. &amp;nbsp;The trick, however, is to get Amazon's DRM (.azw)
into Calibre. &amp;nbsp;It turns out, there's a very easy way now with Calibre's
built-in plugin system and the plugins here:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://apprenticealf.wordpress.com/2012/09/10/calibre-plugins-the-simplest-option-for-removing-most-ebook-drm/"&gt;https://apprenticealf.wordpress.com/2012/09/10/calibre-plugins-the-simplest-option-for-removing-most-ebook-drm/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I followed these instructions after downloading the actual tools from
this page:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://apprenticealf.wordpress.com/2012/09/10/drm-removal-tools-for-ebooks/"&gt;https://apprenticealf.wordpress.com/2012/09/10/drm-removal-tools-for-ebooks/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Then it was a matter of going into my Kindle Reader for the PC, and
(rather irritatingly) individually clicking download on all my ebooks,
and dropping the .azw files from &amp;quot;Libraries -&amp;gt; Documents -&amp;gt; My Kindle
Content&amp;quot; into Calibre. &amp;nbsp;A metadata and cover art update later, my e-book
library is complete:&lt;/p&gt;
&lt;div class="figure"&gt;
&lt;img alt="My Calibre library" src="/images/2013/mycalibre1.jpg" /&gt;
&lt;p class="caption"&gt;My Calibre library, after import and metadata addition&lt;/p&gt;
&lt;/div&gt;
</content><category term="Snippets"></category><category term="ebooks"></category></entry></feed>